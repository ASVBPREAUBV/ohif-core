{"version":3,"file":"index.js","sources":["../src/lib/cornerstone.js","../src/lib/DICOMTagDescriptions.js","../src/lib/parsingUtils.js","../src/DICOMWeb/getAttribute.js","../node_modules/isomorphic-base64/index.js","../src/user.js","../src/DICOMWeb/getAuthorizationHeader.js","../src/DICOMWeb/getModalities.js","../src/DICOMWeb/getName.js","../src/DICOMWeb/getNumber.js","../src/DICOMWeb/getString.js","../src/DICOMWeb/index.js","../node_modules/dicomweb-client/build/dicomweb-client.js","../src/studies/services/qido/instances.js","../src/studies/services/qido/studies.js","../src/studies/services/wado/retrieveMetadata.js","../src/studies/services/index.js","../src/log.js","../src/studies/retrieveStudyMetadata.js","../src/classes/metadata/Metadata.js","../src/classes/OHIFError.js","../src/classes/metadata/InstanceMetadata.js","../src/classes/metadata/SeriesMetadata.js","../src/utils/guid.js","../src/classes/ImageSet.js","../src/classes/metadata/StudyMetadata.js","../src/classes/metadata/WadoRsMetaDataBuilder.js","../src/utils/getWADORSImageId.js","../src/externalModules.js","../src/utils/updateMetaDataManager.js","../src/studies/retrieveStudiesMetadata.js","../src/studies/getStudyBoxData.js","../src/studies/searchStudies.js","../src/studies/index.js","../src/classes/CommandsManager.js","../src/commands.js","../src/classes/HotkeysContext.js","../src/classes/HotkeysManager.js","../src/hotkeys.js","../src/ui/unsavedChanges.js","../src/ui/handleError.js","../src/ui/isCharacterKeyPress.js","../src/ui/getOffset.js","../src/ui/getScrollbarSize.js","../src/ui/index.js","../src/header.js","../src/utils/objectPath.js","../src/utils/absoluteUrl.js","../src/utils/addServers.js","../src/utils/sortBy.js","../src/utils/writeScript.js","../src/utils/getImageId.js","../src/utils/StackManager.js","../src/utils/sopClassDictionary.js","../src/utils/isImage.js","../src/utils/createStacks.js","../src/classes/metadata/OHIFInstanceMetadata.js","../src/classes/metadata/OHIFSeriesMetadata.js","../src/classes/metadata/OHIFStudyMetadata.js","../src/utils/sortingManager.js","../src/utils/createDisplaySets.js","../src/utils/index.js","../src/classes/metadata/index.js","../src/classes/MetadataProvider.js","../src/cornerstone.js","../src/classes/StudyPrefetcher.js","../src/redux/actions.js","../src/classes/StudyLoadingListener.js","../src/classes/TypeSafeCollection.js","../src/classes/StudyMetadataSource.js","../src/classes/index.js","../src/redux/reducers/tools.js","../src/redux/reducers/viewports.js","../src/redux/reducers/servers.js","../src/redux/reducers/loading.js","../node_modules/lodash.clonedeep/index.js","../src/redux/reducers/preferences.js","../src/redux/reducers/index.js","../src/redux/index.js","../src/string.js","../src/object.js","../src/index.js"],"sourcesContent":["import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nfunction getBoundingBox(context, textLines, x, y, options) {\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\n    textLines = [textLines];\n  }\n\n  const padding = 5;\n  const font = cornerstoneTools.textStyle.getFont();\n  const fontSize = cornerstoneTools.textStyle.getFontSize();\n\n  context.save();\n  context.font = font;\n  context.textBaseline = 'top';\n\n  // Find the longest text width in the array of text data\n  let maxWidth = 0;\n\n  textLines.forEach(text => {\n    // Get the text width in the current font\n    const width = context.measureText(text).width;\n\n    // Find the maximum with for all the text rows;\n    maxWidth = Math.max(maxWidth, width);\n  });\n\n  // Calculate the bounding box for this text box\n  const boundingBox = {\n    width: maxWidth + padding * 2,\n    height: padding + textLines.length * (fontSize + padding)\n  };\n\n  if (options && options.centering && options.centering.x === true) {\n    x -= boundingBox.width / 2;\n  }\n\n  if (options && options.centering && options.centering.y === true) {\n    y -= boundingBox.height / 2;\n  }\n\n  boundingBox.left = x;\n  boundingBox.top = y;\n\n  context.restore();\n\n  // Return the bounding box so it can be used for pointNearHandle\n  return boundingBox;\n}\n\nfunction pixelToPage(element, position) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const result = {\n    x: 0,\n    y: 0\n  };\n\n  // Stop here if the cornerstone element is not enabled or position is not an object\n  if (!enabledElement || typeof position !== 'object') {\n    return result;\n  }\n\n  const canvas = enabledElement.canvas;\n\n  const canvasOffset = $(canvas).offset();\n  result.x += canvasOffset.left;\n  result.y += canvasOffset.top;\n\n  const canvasPosition = cornerstone.pixelToCanvas(element, position);\n  result.x += canvasPosition.x;\n  result.y += canvasPosition.y;\n\n  return result;\n}\n\nfunction repositionTextBox(eventData, measurementData, config) {\n  // Stop here if it's not a measurement creating\n  if (!measurementData.isCreating) {\n    return;\n  }\n\n  const element = eventData.element;\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const image = enabledElement.image;\n\n  const allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;\n  const allow = {\n    T: !allowedBorders || allowedBorders.includes('T'),\n    R: !allowedBorders || allowedBorders.includes('R'),\n    B: !allowedBorders || allowedBorders.includes('B'),\n    L: !allowedBorders || allowedBorders.includes('L')\n  };\n\n  const getAvailableBlankAreas = (enabledElement, labelWidth, labelHeight) => {\n    const { element, canvas, image } = enabledElement;\n\n    const topLeft = cornerstone.pixelToCanvas(element, {\n      x: 0,\n      y: 0\n    });\n\n    const bottomRight = cornerstone.pixelToCanvas(element, {\n      x: image.width,\n      y: image.height\n    });\n\n    const $canvas = $(canvas);\n    const canvasWidth = $canvas.outerWidth();\n    const canvasHeight = $canvas.outerHeight();\n\n    const result = {};\n    result['x-1'] = allow.L && topLeft.x > labelWidth;\n    result['y-1'] = allow.T && topLeft.y > labelHeight;\n    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;\n    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;\n\n    return result;\n  };\n\n  const getRenderingInformation = (limits, tool) => {\n    const mid = {};\n    mid.x = limits.x / 2;\n    mid.y = limits.y / 2;\n\n    const directions = {};\n    directions.x = tool.x < mid.x ? -1 : 1;\n    directions.y = tool.y < mid.y ? -1 : 1;\n\n    const diffX = directions.x < 0 ? tool.x : limits.x - tool.x;\n    const diffY = directions.y < 0 ? tool.y : limits.y - tool.y;\n    let cornerAxis = diffY < diffX ? 'y' : 'x';\n\n    const map = {\n      'x-1': 'L',\n      'y-1': 'T',\n      x1: 'R',\n      y1: 'B'\n    };\n\n    let current = 0;\n    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {\n      // Invert the direction for the next iteration\n      directions[cornerAxis] *= -1;\n\n      // Invert the tempCornerAxis\n      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';\n\n      current++;\n    }\n\n    return {\n      directions,\n      cornerAxis\n    };\n  };\n\n  const calculateAxisCenter = (axis, start, end) => {\n    const a = start[axis];\n    const b = end[axis];\n    const lowest = Math.min(a, b);\n    const highest = Math.max(a, b);\n    return lowest + (highest - lowest) / 2;\n  };\n\n  const getTextBoxSizeInPixels = (element, bounds) => {\n    const topLeft = cornerstone.pageToPixel(element, 0, 0);\n    const bottomRight = cornerstone.pageToPixel(element, bounds.x, bounds.y);\n    return {\n      x: bottomRight.x - topLeft.x,\n      y: bottomRight.y - topLeft.y\n    };\n  };\n\n  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {\n    config = config || {};\n    const centering = config.centering || {};\n    const centerX = !!centering.x;\n    const centerY = !!centering.y;\n    const halfBoxSizeX = boxSize.x / 2;\n    const halfBoxSizeY = boxSize.y / 2;\n    const offset = {\n      x: [],\n      y: []\n    };\n\n    if (cornerAxis === 'x') {\n      const offsetY = centerY ? 0 : halfBoxSizeY;\n\n      offset.x[-1] = centerX ? halfBoxSizeX : 0;\n      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;\n      offset.y[-1] = offsetY;\n      offset.y[1] = offsetY;\n    } else {\n      const offsetX = centerX ? 0 : halfBoxSizeX;\n\n      offset.x[-1] = offsetX;\n      offset.x[1] = offsetX;\n      offset.y[-1] = centerY ? halfBoxSizeY : 0;\n      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;\n    }\n\n    return offset;\n  }\n\n  const handles = measurementData.handles;\n  const textBox = handles.textBox;\n\n  const $canvas = $(enabledElement.canvas);\n  const canvasWidth = $canvas.outerWidth();\n  const canvasHeight = $canvas.outerHeight();\n  const offset = $canvas.offset();\n  const canvasDimensions = {\n    x: canvasWidth,\n    y: canvasHeight\n  };\n\n  const bounds = {};\n  bounds.x = textBox.boundingBox.width;\n  bounds.y = textBox.boundingBox.height;\n\n  const getHandlePosition = key => {\n    const { x, y } = handles[key];\n\n    return { x, y };\n  };\n  const start = getHandlePosition('start');\n  const end = getHandlePosition('end');\n\n  const tool = {};\n  tool.x = calculateAxisCenter('x', start, end);\n  tool.y = calculateAxisCenter('y', start, end);\n\n  let limits = {};\n  limits.x = image.width;\n  limits.y = image.height;\n\n  let { directions, cornerAxis } = getRenderingInformation(limits, tool);\n\n  const availableAreas = getAvailableBlankAreas(\n    enabledElement,\n    bounds.x,\n    bounds.y\n  );\n  const tempDirections = Object.assign({}, directions);\n  let tempCornerAxis = cornerAxis;\n  let foundPlace = false;\n  let current = 0;\n  while (current < 4) {\n    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {\n      foundPlace = true;\n      break;\n    }\n\n    // Invert the direction for the next iteration\n    tempDirections[tempCornerAxis] *= -1;\n\n    // Invert the tempCornerAxis\n    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';\n\n    current++;\n  }\n\n  let cornerAxisPosition;\n  if (foundPlace) {\n    directions = Object.assign({}, directions, tempDirections);\n    cornerAxis = tempCornerAxis;\n    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];\n  } else {\n    limits = Object.assign({}, limits, canvasDimensions);\n\n    const toolPositionOnCanvas = cornerstone.pixelToCanvas(element, tool);\n    const renderingInformation = getRenderingInformation(\n      limits,\n      toolPositionOnCanvas\n    );\n    directions = renderingInformation.directions;\n    cornerAxis = renderingInformation.cornerAxis;\n\n    const position = {\n      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,\n      y: directions.y < 0 ? offset.top : offset.top + canvasHeight\n    };\n\n    const pixelPosition = cornerstone.pageToPixel(\n      element,\n      position.x,\n      position.y\n    );\n    cornerAxisPosition = pixelPosition[cornerAxis];\n  }\n\n  const toolAxis = cornerAxis === 'x' ? 'y' : 'x';\n  const boxSize = getTextBoxSizeInPixels(element, bounds);\n\n  textBox[cornerAxis] = cornerAxisPosition;\n  textBox[toolAxis] = tool[toolAxis];\n\n  // Adjust the text box position reducing its size from the corner axis\n  const textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);\n  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]];\n\n  // Preventing the text box from partially going outside the canvas area\n  const topLeft = cornerstone.pixelToCanvas(element, textBox);\n  const bottomRight = {\n    x: topLeft.x + bounds.x,\n    y: topLeft.y + bounds.y\n  };\n  const canvasBorders = {\n    x0: offset.left,\n    y0: offset.top,\n    x1: offset.left + canvasWidth,\n    y1: offset.top + canvasHeight\n  };\n  if (topLeft[toolAxis] < 0) {\n    const x = canvasBorders.x0;\n    const y = canvasBorders.y0;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {\n    const x = canvasBorders.x1 - bounds.x;\n    const y = canvasBorders.y1 - bounds.y;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  }\n}\n\nexport { getBoundingBox, pixelToPage, repositionTextBox };\n","// TODO: Deprecate since we have the same thing in dcmjs?\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst REGEX_TAG = /^x[0-9a-fx]{8}$/;\n\nconst DICOMTagDescriptions = Object.create(Object.prototype, {\n  _descriptions: {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: Object.create(null)\n  },\n  tagNumberToString: {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: function tagNumberToString(tag) {\n      let string; // by default, undefined is returned...\n      if (this.isValidTagNumber(tag)) {\n        // if it's a number, build its hexadecimal representation...\n        string = 'x' + ('00000000' + tag.toString(16)).substr(-8);\n      }\n      return string;\n    }\n  },\n  isValidTagNumber: {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: function isValidTagNumber(tag) {\n      return typeof tag === NUMBER && tag >= 0 && tag <= 0xffffffff;\n    }\n  },\n  isValidTag: {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: function isValidTag(tag) {\n      return typeof tag === STRING\n        ? REGEX_TAG.test(tag)\n        : this.isValidTagNumber(tag);\n    }\n  },\n  find: {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: function find(name) {\n      let description; // by default, undefined is returned...\n      if (typeof name !== STRING) {\n        // if it's a number, a tag string will be returned...\n        name = this.tagNumberToString(name);\n      }\n      if (typeof name === STRING) {\n        description = this._descriptions[name];\n      }\n      return description;\n    }\n  },\n  init: {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: function init(descriptionMap) {\n      const _hasOwn = Object.prototype.hasOwnProperty;\n      const _descriptions = this._descriptions;\n      for (let tag in descriptionMap) {\n        if (_hasOwn.call(descriptionMap, tag)) {\n          if (!this.isValidTag(tag)) {\n            // Skip in case tag is not valid...\n            console.info(`DICOMTagDescriptions: Invalid tag \"${tag}\"...`);\n            continue;\n          }\n          if (tag in _descriptions) {\n            // Skip in case the tag is duplicated...\n            console.info(`DICOMTagDescriptions: Duplicated tag \"${tag}\"...`);\n            continue;\n          }\n          // Save keyword...\n          const keyword = descriptionMap[tag];\n          // Create a description entry and freeze it...\n          const entry = Object.create(null);\n          entry.tag = tag;\n          entry.keyword = keyword;\n          Object.freeze(entry);\n          // Add tag references to entry...\n          _descriptions[tag] = entry;\n          // Add keyword references to entry (if not present already)...\n          if (keyword in _descriptions) {\n            const currentEntry = _descriptions[keyword];\n            console.info(\n              `DICOMTagDescriptions: Using <${currentEntry.tag},${\n                currentEntry.keyword\n              }> instead of <${entry.tag},${\n                entry.keyword\n              }> for keyword \"${keyword}\"...`\n            );\n          } else {\n            _descriptions[keyword] = entry;\n          }\n        }\n      }\n      // Freeze internal description map...\n      Object.freeze(_descriptions);\n      // Freeze itself...\n      Object.freeze(this);\n    }\n  }\n});\n\n/**\n * Map with DICOM Tag Descriptions\n */\nlet initialTagDescriptionMap = {\n  x00020000: 'FileMetaInfoGroupLength',\n  x00020001: 'FileMetaInfoVersion',\n  x00020002: 'MediaStorageSOPClassUID',\n  x00020003: 'MediaStorageSOPInstanceUID',\n  x00020010: 'TransferSyntaxUID',\n  x00020012: 'ImplementationClassUID',\n  x00020013: 'ImplementationVersionName',\n  x00020016: 'SourceApplicationEntityTitle',\n  x00020100: 'PrivateInformationCreatorUID',\n  x00020102: 'PrivateInformation',\n  x00041130: 'FileSetID',\n  x00041141: 'FileSetDescriptorFileID',\n  x00041142: 'SpecificCharacterSetOfFile',\n  x00041200: 'FirstDirectoryRecordOffset',\n  x00041202: 'LastDirectoryRecordOffset',\n  x00041212: 'FileSetConsistencyFlag',\n  x00041220: 'DirectoryRecordSequence',\n  x00041400: 'OffsetOfNextDirectoryRecord',\n  x00041410: 'RecordInUseFlag',\n  x00041420: 'LowerLevelDirectoryEntityOffset',\n  x00041430: 'DirectoryRecordType',\n  x00041432: 'PrivateRecordUID',\n  x00041500: 'ReferencedFileID',\n  x00041504: 'MRDRDirectoryRecordOffset',\n  x00041510: 'ReferencedSOPClassUIDInFile',\n  x00041511: 'ReferencedSOPInstanceUIDInFile',\n  x00041512: 'ReferencedTransferSyntaxUIDInFile',\n  x0004151a: 'ReferencedRelatedSOPClassUIDInFile',\n  x00041600: 'NumberOfReferences',\n  x00080000: 'IdentifyingGroupLength',\n  x00080001: 'LengthToEnd',\n  x00080005: 'SpecificCharacterSet',\n  x00080006: 'LanguageCodeSequence',\n  x00080008: 'ImageType',\n  x00080010: 'RecognitionCode',\n  x00080012: 'InstanceCreationDate',\n  x00080013: 'InstanceCreationTime',\n  x00080014: 'InstanceCreatorUID',\n  x00080016: 'SOPClassUID',\n  x00080018: 'SOPInstanceUID',\n  x0008001a: 'RelatedGeneralSOPClassUID',\n  x0008001b: 'OriginalSpecializedSOPClassUID',\n  x00080020: 'StudyDate',\n  x00080021: 'SeriesDate',\n  x00080022: 'AcquisitionDate',\n  x00080023: 'ContentDate',\n  x00080024: 'OverlayDate',\n  x00080025: 'CurveDate',\n  x0008002a: 'AcquisitionDateTime',\n  x00080030: 'StudyTime',\n  x00080031: 'SeriesTime',\n  x00080032: 'AcquisitionTime',\n  x00080033: 'ContentTime',\n  x00080034: 'OverlayTime',\n  x00080035: 'CurveTime',\n  x00080040: 'DataSetType',\n  x00080041: 'DataSetSubtype',\n  x00080042: 'NuclearMedicineSeriesType',\n  x00080050: 'AccessionNumber',\n  x00080052: 'QueryRetrieveLevel',\n  x00080054: 'RetrieveAETitle',\n  x00080056: 'InstanceAvailability',\n  x00080058: 'FailedSOPInstanceUIDList',\n  x00080060: 'Modality',\n  x00080061: 'ModalitiesInStudy',\n  x00080062: 'SOPClassesInStudy',\n  x00080064: 'ConversionType',\n  x00080068: 'PresentationIntentType',\n  x00080070: 'Manufacturer',\n  x00080080: 'InstitutionName',\n  x00080081: 'InstitutionAddress',\n  x00080082: 'InstitutionCodeSequence',\n  x00080090: 'ReferringPhysicianName',\n  x00080092: 'ReferringPhysicianAddress',\n  x00080094: 'ReferringPhysicianTelephoneNumber',\n  x00080096: 'ReferringPhysicianIDSequence',\n  x00080100: 'CodeValue',\n  x00080102: 'CodingSchemeDesignator',\n  x00080103: 'CodingSchemeVersion',\n  x00080104: 'CodeMeaning',\n  x00080105: 'MappingResource',\n  x00080106: 'ContextGroupVersion',\n  x00080107: 'ContextGroupLocalVersion',\n  x0008010b: 'ContextGroupExtensionFlag',\n  x0008010c: 'CodingSchemeUID',\n  x0008010d: 'ContextGroupExtensionCreatorUID',\n  x0008010f: 'ContextIdentifier',\n  x00080110: 'CodingSchemeIDSequence',\n  x00080112: 'CodingSchemeRegistry',\n  x00080114: 'CodingSchemeExternalID',\n  x00080115: 'CodingSchemeName',\n  x00080116: 'CodingSchemeResponsibleOrganization',\n  x00080117: 'ContextUID',\n  x00080201: 'TimezoneOffsetFromUTC',\n  x00081000: 'NetworkID',\n  x00081010: 'StationName',\n  x00081030: 'StudyDescription',\n  x00081032: 'ProcedureCodeSequence',\n  x0008103e: 'SeriesDescription',\n  x00081040: 'InstitutionalDepartmentName',\n  x00081048: 'PhysiciansOfRecord',\n  x00081049: 'PhysiciansOfRecordIDSequence',\n  x00081050: 'PerformingPhysicianName',\n  x00081052: 'PerformingPhysicianIDSequence',\n  x00081060: 'NameOfPhysicianReadingStudy',\n  x00081062: 'PhysicianReadingStudyIDSequence',\n  x00081070: 'OperatorsName',\n  x00081072: 'OperatorIDSequence',\n  x00081080: 'AdmittingDiagnosesDescription',\n  x00081084: 'AdmittingDiagnosesCodeSequence',\n  x00081090: 'ManufacturersModelName',\n  x00081100: 'ReferencedResultsSequence',\n  x00081110: 'ReferencedStudySequence',\n  x00081111: 'ReferencedPerformedProcedureStepSequence',\n  x00081115: 'ReferencedSeriesSequence',\n  x00081120: 'ReferencedPatientSequence',\n  x00081125: 'ReferencedVisitSequence',\n  x00081130: 'ReferencedOverlaySequence',\n  x0008113a: 'ReferencedWaveformSequence',\n  x00081140: 'ReferencedImageSequence',\n  x00081145: 'ReferencedCurveSequence',\n  x0008114a: 'ReferencedInstanceSequence',\n  x00081150: 'ReferencedSOPClassUID',\n  x00081155: 'ReferencedSOPInstanceUID',\n  x0008115a: 'SOPClassesSupported',\n  x00081160: 'ReferencedFrameNumber',\n  x00081161: 'SimpleFrameList',\n  x00081162: 'CalculatedFrameList',\n  x00081163: 'TimeRange',\n  x00081164: 'FrameExtractionSequence',\n  x00081195: 'TransactionUID',\n  x00081197: 'FailureReason',\n  x00081198: 'FailedSOPSequence',\n  x00081199: 'ReferencedSOPSequence',\n  x00081200: 'OtherReferencedStudiesSequence',\n  x00081250: 'RelatedSeriesSequence',\n  x00082110: 'LossyImageCompressionRetired',\n  x00082111: 'DerivationDescription',\n  x00082112: 'SourceImageSequence',\n  x00082120: 'StageName',\n  x00082122: 'StageNumber',\n  x00082124: 'NumberOfStages',\n  x00082127: 'ViewName',\n  x00082128: 'ViewNumber',\n  x00082129: 'NumberOfEventTimers',\n  x0008212a: 'NumberOfViewsInStage',\n  x00082130: 'EventElapsedTimes',\n  x00082132: 'EventTimerNames',\n  x00082133: 'EventTimerSequence',\n  x00082134: 'EventTimeOffset',\n  x00082135: 'EventCodeSequence',\n  x00082142: 'StartTrim',\n  x00082143: 'StopTrim',\n  x00082144: 'RecommendedDisplayFrameRate',\n  x00082200: 'TransducerPosition',\n  x00082204: 'TransducerOrientation',\n  x00082208: 'AnatomicStructure',\n  x00082218: 'AnatomicRegionSequence',\n  x00082220: 'AnatomicRegionModifierSequence',\n  x00082228: 'PrimaryAnatomicStructureSequence',\n  x00082229: 'AnatomicStructureOrRegionSequence',\n  x00082230: 'AnatomicStructureModifierSequence',\n  x00082240: 'TransducerPositionSequence',\n  x00082242: 'TransducerPositionModifierSequence',\n  x00082244: 'TransducerOrientationSequence',\n  x00082246: 'TransducerOrientationModifierSeq',\n  x00082253: 'AnatomicEntrancePortalCodeSeqTrial',\n  x00082255: 'AnatomicApproachDirCodeSeqTrial',\n  x00082256: 'AnatomicPerspectiveDescrTrial',\n  x00082257: 'AnatomicPerspectiveCodeSeqTrial',\n  x00083001: 'AlternateRepresentationSequence',\n  x00083010: 'IrradiationEventUID',\n  x00084000: 'IdentifyingComments',\n  x00089007: 'FrameType',\n  x00089092: 'ReferencedImageEvidenceSequence',\n  x00089121: 'ReferencedRawDataSequence',\n  x00089123: 'CreatorVersionUID',\n  x00089124: 'DerivationImageSequence',\n  x00089154: 'SourceImageEvidenceSequence',\n  x00089205: 'PixelPresentation',\n  x00089206: 'VolumetricProperties',\n  x00089207: 'VolumeBasedCalculationTechnique',\n  x00089208: 'ComplexImageComponent',\n  x00089209: 'AcquisitionContrast',\n  x00089215: 'DerivationCodeSequence',\n  x00089237: 'GrayscalePresentationStateSequence',\n  x00089410: 'ReferencedOtherPlaneSequence',\n  x00089458: 'FrameDisplaySequence',\n  x00089459: 'RecommendedDisplayFrameRateInFloat',\n  x00089460: 'SkipFrameRangeFlag',\n  // x00091001: 'FullFidelity',\n  // x00091002: 'SuiteID',\n  // x00091004: 'ProductID',\n  // x00091027: 'ImageActualDate',\n  // x00091030: 'ServiceID',\n  // x00091031: 'MobileLocationNumber',\n  // x000910e3: 'EquipmentUID',\n  // x000910e6: 'GenesisVersionNow',\n  // x000910e7: 'ExamRecordChecksum',\n  // x000910e9: 'ActualSeriesDataTimeStamp',\n  x00100000: 'PatientGroupLength',\n  x00100010: 'PatientName',\n  x00100020: 'PatientID',\n  x00100021: 'IssuerOfPatientID',\n  x00100022: 'TypeOfPatientID',\n  x00100030: 'PatientBirthDate',\n  x00100032: 'PatientBirthTime',\n  x00100040: 'PatientSex',\n  x00100050: 'PatientInsurancePlanCodeSequence',\n  x00100101: 'PatientPrimaryLanguageCodeSeq',\n  x00100102: 'PatientPrimaryLanguageCodeModSeq',\n  x00101000: 'OtherPatientIDs',\n  x00101001: 'OtherPatientNames',\n  x00101002: 'OtherPatientIDsSequence',\n  x00101005: 'PatientBirthName',\n  x00101010: 'PatientAge',\n  x00101020: 'PatientSize',\n  x00101030: 'PatientWeight',\n  x00101040: 'PatientAddress',\n  x00101050: 'InsurancePlanIdentification',\n  x00101060: 'PatientMotherBirthName',\n  x00101080: 'MilitaryRank',\n  x00101081: 'BranchOfService',\n  x00101090: 'MedicalRecordLocator',\n  x00102000: 'MedicalAlerts',\n  x00102110: 'Allergies',\n  x00102150: 'CountryOfResidence',\n  x00102152: 'RegionOfResidence',\n  x00102154: 'PatientTelephoneNumbers',\n  x00102160: 'EthnicGroup',\n  x00102180: 'Occupation',\n  x001021a0: 'SmokingStatus',\n  x001021b0: 'AdditionalPatientHistory',\n  x001021c0: 'PregnancyStatus',\n  x001021d0: 'LastMenstrualDate',\n  x001021f0: 'PatientReligiousPreference',\n  x00102201: 'PatientSpeciesDescription',\n  x00102202: 'PatientSpeciesCodeSequence',\n  x00102203: 'PatientSexNeutered',\n  x00102210: 'AnatomicalOrientationType',\n  x00102292: 'PatientBreedDescription',\n  x00102293: 'PatientBreedCodeSequence',\n  x00102294: 'BreedRegistrationSequence',\n  x00102295: 'BreedRegistrationNumber',\n  x00102296: 'BreedRegistryCodeSequence',\n  x00102297: 'ResponsiblePerson',\n  x00102298: 'ResponsiblePersonRole',\n  x00102299: 'ResponsibleOrganization',\n  x00104000: 'PatientComments',\n  x00109431: 'ExaminedBodyThickness',\n  x00111010: 'PatientStatus',\n  x00120010: 'ClinicalTrialSponsorName',\n  x00120020: 'ClinicalTrialProtocolID',\n  x00120021: 'ClinicalTrialProtocolName',\n  x00120030: 'ClinicalTrialSiteID',\n  x00120031: 'ClinicalTrialSiteName',\n  x00120040: 'ClinicalTrialSubjectID',\n  x00120042: 'ClinicalTrialSubjectReadingID',\n  x00120050: 'ClinicalTrialTimePointID',\n  x00120051: 'ClinicalTrialTimePointDescription',\n  x00120060: 'ClinicalTrialCoordinatingCenter',\n  x00120062: 'PatientIdentityRemoved',\n  x00120063: 'DeidentificationMethod',\n  x00120064: 'DeidentificationMethodCodeSequence',\n  x00120071: 'ClinicalTrialSeriesID',\n  x00120072: 'ClinicalTrialSeriesDescription',\n  x00120084: 'DistributionType',\n  x00120085: 'ConsentForDistributionFlag',\n  x00180000: 'AcquisitionGroupLength',\n  x00180010: 'ContrastBolusAgent',\n  x00180012: 'ContrastBolusAgentSequence',\n  x00180014: 'ContrastBolusAdministrationRoute',\n  x00180015: 'BodyPartExamined',\n  x00180020: 'ScanningSequence',\n  x00180021: 'SequenceVariant',\n  x00180022: 'ScanOptions',\n  x00180023: 'MRAcquisitionType',\n  x00180024: 'SequenceName',\n  x00180025: 'AngioFlag',\n  x00180026: 'InterventionDrugInformationSeq',\n  x00180027: 'InterventionDrugStopTime',\n  x00180028: 'InterventionDrugDose',\n  x00180029: 'InterventionDrugSequence',\n  x0018002a: 'AdditionalDrugSequence',\n  x00180030: 'Radionuclide',\n  x00180031: 'Radiopharmaceutical',\n  x00180032: 'EnergyWindowCenterline',\n  x00180033: 'EnergyWindowTotalWidth',\n  x00180034: 'InterventionDrugName',\n  x00180035: 'InterventionDrugStartTime',\n  x00180036: 'InterventionSequence',\n  x00180037: 'TherapyType',\n  x00180038: 'InterventionStatus',\n  x00180039: 'TherapyDescription',\n  x0018003a: 'InterventionDescription',\n  x00180040: 'CineRate',\n  x00180042: 'InitialCineRunState',\n  x00180050: 'SliceThickness',\n  x00180060: 'KVP',\n  x00180070: 'CountsAccumulated',\n  x00180071: 'AcquisitionTerminationCondition',\n  x00180072: 'EffectiveDuration',\n  x00180073: 'AcquisitionStartCondition',\n  x00180074: 'AcquisitionStartConditionData',\n  x00180075: 'AcquisitionEndConditionData',\n  x00180080: 'RepetitionTime',\n  x00180081: 'EchoTime',\n  x00180082: 'InversionTime',\n  x00180083: 'NumberOfAverages',\n  x00180084: 'ImagingFrequency',\n  x00180085: 'ImagedNucleus',\n  x00180086: 'EchoNumber',\n  x00180087: 'MagneticFieldStrength',\n  x00180088: 'SpacingBetweenSlices',\n  x00180089: 'NumberOfPhaseEncodingSteps',\n  x00180090: 'DataCollectionDiameter',\n  x00180091: 'EchoTrainLength',\n  x00180093: 'PercentSampling',\n  x00180094: 'PercentPhaseFieldOfView',\n  x00180095: 'PixelBandwidth',\n  x00181000: 'DeviceSerialNumber',\n  x00181002: 'DeviceUID',\n  x00181003: 'DeviceID',\n  x00181004: 'PlateID',\n  x00181005: 'GeneratorID',\n  x00181006: 'GridID',\n  x00181007: 'CassetteID',\n  x00181008: 'GantryID',\n  x00181010: 'SecondaryCaptureDeviceID',\n  x00181011: 'HardcopyCreationDeviceID',\n  x00181012: 'DateOfSecondaryCapture',\n  x00181014: 'TimeOfSecondaryCapture',\n  x00181016: 'SecondaryCaptureDeviceManufacturer',\n  x00181017: 'HardcopyDeviceManufacturer',\n  x00181018: 'SecondaryCaptureDeviceModelName',\n  x00181019: 'SecondaryCaptureDeviceSoftwareVers',\n  x0018101a: 'HardcopyDeviceSoftwareVersion',\n  x0018101b: 'HardcopyDeviceModelName',\n  x00181020: 'SoftwareVersion',\n  x00181022: 'VideoImageFormatAcquired',\n  x00181023: 'DigitalImageFormatAcquired',\n  x00181030: 'ProtocolName',\n  x00181040: 'ContrastBolusRoute',\n  x00181041: 'ContrastBolusVolume',\n  x00181042: 'ContrastBolusStartTime',\n  x00181043: 'ContrastBolusStopTime',\n  x00181044: 'ContrastBolusTotalDose',\n  x00181045: 'SyringeCounts',\n  x00181046: 'ContrastFlowRate',\n  x00181047: 'ContrastFlowDuration',\n  x00181048: 'ContrastBolusIngredient',\n  x00181049: 'ContrastBolusConcentration',\n  x00181050: 'SpatialResolution',\n  x00181060: 'TriggerTime',\n  x00181061: 'TriggerSourceOrType',\n  x00181062: 'NominalInterval',\n  x00181063: 'FrameTime',\n  x00181064: 'CardiacFramingType',\n  x00181065: 'FrameTimeVector',\n  x00181066: 'FrameDelay',\n  x00181067: 'ImageTriggerDelay',\n  x00181068: 'MultiplexGroupTimeOffset',\n  x00181069: 'TriggerTimeOffset',\n  x0018106a: 'SynchronizationTrigger',\n  x0018106c: 'SynchronizationChannel',\n  x0018106e: 'TriggerSamplePosition',\n  x00181070: 'RadiopharmaceuticalRoute',\n  x00181071: 'RadiopharmaceuticalVolume',\n  x00181072: 'RadiopharmaceuticalStartTime',\n  x00181073: 'RadiopharmaceuticalStopTime',\n  x00181074: 'RadionuclideTotalDose',\n  x00181075: 'RadionuclideHalfLife',\n  x00181076: 'RadionuclidePositronFraction',\n  x00181077: 'RadiopharmaceuticalSpecActivity',\n  x00181078: 'RadiopharmaceuticalStartDateTime',\n  x00181079: 'RadiopharmaceuticalStopDateTime',\n  x00181080: 'BeatRejectionFlag',\n  x00181081: 'LowRRValue',\n  x00181082: 'HighRRValue',\n  x00181083: 'IntervalsAcquired',\n  x00181084: 'IntervalsRejected',\n  x00181085: 'PVCRejection',\n  x00181086: 'SkipBeats',\n  x00181088: 'HeartRate',\n  x00181090: 'CardiacNumberOfImages',\n  x00181094: 'TriggerWindow',\n  x00181100: 'ReconstructionDiameter',\n  x00181110: 'DistanceSourceToDetector',\n  x00181111: 'DistanceSourceToPatient',\n  x00181114: 'EstimatedRadiographicMagnification',\n  x00181120: 'GantryDetectorTilt',\n  x00181121: 'GantryDetectorSlew',\n  x00181130: 'TableHeight',\n  x00181131: 'TableTraverse',\n  x00181134: 'TableMotion',\n  x00181135: 'TableVerticalIncrement',\n  x00181136: 'TableLateralIncrement',\n  x00181137: 'TableLongitudinalIncrement',\n  x00181138: 'TableAngle',\n  x0018113a: 'TableType',\n  x00181140: 'RotationDirection',\n  x00181141: 'AngularPosition',\n  x00181142: 'RadialPosition',\n  x00181143: 'ScanArc',\n  x00181144: 'AngularStep',\n  x00181145: 'CenterOfRotationOffset',\n  x00181146: 'RotationOffset',\n  x00181147: 'FieldOfViewShape',\n  x00181149: 'FieldOfViewDimensions',\n  x00181150: 'ExposureTime',\n  x00181151: 'XRayTubeCurrent',\n  x00181152: 'Exposure',\n  x00181153: 'ExposureInMicroAmpSec',\n  x00181154: 'AveragePulseWidth',\n  x00181155: 'RadiationSetting',\n  x00181156: 'RectificationType',\n  x0018115a: 'RadiationMode',\n  x0018115e: 'ImageAreaDoseProduct',\n  x00181160: 'FilterType',\n  x00181161: 'TypeOfFilters',\n  x00181162: 'IntensifierSize',\n  x00181164: 'ImagerPixelSpacing',\n  x00181166: 'Grid',\n  x00181170: 'GeneratorPower',\n  x00181180: 'CollimatorGridName',\n  x00181181: 'CollimatorType',\n  x00181182: 'FocalDistance',\n  x00181183: 'XFocusCenter',\n  x00181184: 'YFocusCenter',\n  x00181190: 'FocalSpots',\n  x00181191: 'AnodeTargetMaterial',\n  x001811a0: 'BodyPartThickness',\n  x001811a2: 'CompressionForce',\n  x00181200: 'DateOfLastCalibration',\n  x00181201: 'TimeOfLastCalibration',\n  x00181210: 'ConvolutionKernel',\n  x00181240: 'UpperLowerPixelValues',\n  x00181242: 'ActualFrameDuration',\n  x00181243: 'CountRate',\n  x00181244: 'PreferredPlaybackSequencing',\n  x00181250: 'ReceiveCoilName',\n  x00181251: 'TransmitCoilName',\n  x00181260: 'PlateType',\n  x00181261: 'PhosphorType',\n  x00181300: 'ScanVelocity',\n  x00181301: 'WholeBodyTechnique',\n  x00181302: 'ScanLength',\n  x00181310: 'AcquisitionMatrix',\n  x00181312: 'InPlanePhaseEncodingDirection',\n  x00181314: 'FlipAngle',\n  x00181315: 'VariableFlipAngleFlag',\n  x00181316: 'SAR',\n  x00181318: 'DB-Dt',\n  x00181400: 'AcquisitionDeviceProcessingDescr',\n  x00181401: 'AcquisitionDeviceProcessingCode',\n  x00181402: 'CassetteOrientation',\n  x00181403: 'CassetteSize',\n  x00181404: 'ExposuresOnPlate',\n  x00181405: 'RelativeXRayExposure',\n  x00181450: 'ColumnAngulation',\n  x00181460: 'TomoLayerHeight',\n  x00181470: 'TomoAngle',\n  x00181480: 'TomoTime',\n  x00181490: 'TomoType',\n  x00181491: 'TomoClass',\n  x00181495: 'NumberOfTomosynthesisSourceImages',\n  x00181500: 'PositionerMotion',\n  x00181508: 'PositionerType',\n  x00181510: 'PositionerPrimaryAngle',\n  x00181511: 'PositionerSecondaryAngle',\n  x00181520: 'PositionerPrimaryAngleIncrement',\n  x00181521: 'PositionerSecondaryAngleIncrement',\n  x00181530: 'DetectorPrimaryAngle',\n  x00181531: 'DetectorSecondaryAngle',\n  x00181600: 'ShutterShape',\n  x00181602: 'ShutterLeftVerticalEdge',\n  x00181604: 'ShutterRightVerticalEdge',\n  x00181606: 'ShutterUpperHorizontalEdge',\n  x00181608: 'ShutterLowerHorizontalEdge',\n  x00181610: 'CenterOfCircularShutter',\n  x00181612: 'RadiusOfCircularShutter',\n  x00181620: 'VerticesOfPolygonalShutter',\n  x00181622: 'ShutterPresentationValue',\n  x00181623: 'ShutterOverlayGroup',\n  x00181624: 'ShutterPresentationColorCIELabVal',\n  x00181700: 'CollimatorShape',\n  x00181702: 'CollimatorLeftVerticalEdge',\n  x00181704: 'CollimatorRightVerticalEdge',\n  x00181706: 'CollimatorUpperHorizontalEdge',\n  x00181708: 'CollimatorLowerHorizontalEdge',\n  x00181710: 'CenterOfCircularCollimator',\n  x00181712: 'RadiusOfCircularCollimator',\n  x00181720: 'VerticesOfPolygonalCollimator',\n  x00181800: 'AcquisitionTimeSynchronized',\n  x00181801: 'TimeSource',\n  x00181802: 'TimeDistributionProtocol',\n  x00181803: 'NTPSourceAddress',\n  x00182001: 'PageNumberVector',\n  x00182002: 'FrameLabelVector',\n  x00182003: 'FramePrimaryAngleVector',\n  x00182004: 'FrameSecondaryAngleVector',\n  x00182005: 'SliceLocationVector',\n  x00182006: 'DisplayWindowLabelVector',\n  x00182010: 'NominalScannedPixelSpacing',\n  x00182020: 'DigitizingDeviceTransportDirection',\n  x00182030: 'RotationOfScannedFilm',\n  x00183100: 'IVUSAcquisition',\n  x00183101: 'IVUSPullbackRate',\n  x00183102: 'IVUSGatedRate',\n  x00183103: 'IVUSPullbackStartFrameNumber',\n  x00183104: 'IVUSPullbackStopFrameNumber',\n  x00183105: 'LesionNumber',\n  x00184000: 'AcquisitionComments',\n  x00185000: 'OutputPower',\n  x00185010: 'TransducerData',\n  x00185012: 'FocusDepth',\n  x00185020: 'ProcessingFunction',\n  x00185021: 'PostprocessingFunction',\n  x00185022: 'MechanicalIndex',\n  x00185024: 'BoneThermalIndex',\n  x00185026: 'CranialThermalIndex',\n  x00185027: 'SoftTissueThermalIndex',\n  x00185028: 'SoftTissueFocusThermalIndex',\n  x00185029: 'SoftTissueSurfaceThermalIndex',\n  x00185030: 'DynamicRange',\n  x00185040: 'TotalGain',\n  x00185050: 'DepthOfScanField',\n  x00185100: 'PatientPosition',\n  x00185101: 'ViewPosition',\n  x00185104: 'ProjectionEponymousNameCodeSeq',\n  x00185210: 'ImageTransformationMatrix',\n  x00185212: 'ImageTranslationVector',\n  x00186000: 'Sensitivity',\n  x00186011: 'SequenceOfUltrasoundRegions',\n  x00186012: 'RegionSpatialFormat',\n  x00186014: 'RegionDataType',\n  x00186016: 'RegionFlags',\n  x00186018: 'RegionLocationMinX0',\n  x0018601a: 'RegionLocationMinY0',\n  x0018601c: 'RegionLocationMaxX1',\n  x0018601e: 'RegionLocationMaxY1',\n  x00186020: 'ReferencePixelX0',\n  x00186022: 'ReferencePixelY0',\n  x00186024: 'PhysicalUnitsXDirection',\n  x00186026: 'PhysicalUnitsYDirection',\n  x00186028: 'ReferencePixelPhysicalValueX',\n  x0018602a: 'ReferencePixelPhysicalValueY',\n  x0018602c: 'PhysicalDeltaX',\n  x0018602e: 'PhysicalDeltaY',\n  x00186030: 'TransducerFrequency',\n  x00186031: 'TransducerType',\n  x00186032: 'PulseRepetitionFrequency',\n  x00186034: 'DopplerCorrectionAngle',\n  x00186036: 'SteeringAngle',\n  x00186038: 'DopplerSampleVolumeXPosRetired',\n  x00186039: 'DopplerSampleVolumeXPosition',\n  x0018603a: 'DopplerSampleVolumeYPosRetired',\n  x0018603b: 'DopplerSampleVolumeYPosition',\n  x0018603c: 'TMLinePositionX0Retired',\n  x0018603d: 'TMLinePositionX0',\n  x0018603e: 'TMLinePositionY0Retired',\n  x0018603f: 'TMLinePositionY0',\n  x00186040: 'TMLinePositionX1Retired',\n  x00186041: 'TMLinePositionX1',\n  x00186042: 'TMLinePositionY1Retired',\n  x00186043: 'TMLinePositionY1',\n  x00186044: 'PixelComponentOrganization',\n  x00186046: 'PixelComponentMask',\n  x00186048: 'PixelComponentRangeStart',\n  x0018604a: 'PixelComponentRangeStop',\n  x0018604c: 'PixelComponentPhysicalUnits',\n  x0018604e: 'PixelComponentDataType',\n  x00186050: 'NumberOfTableBreakPoints',\n  x00186052: 'TableOfXBreakPoints',\n  x00186054: 'TableOfYBreakPoints',\n  x00186056: 'NumberOfTableEntries',\n  x00186058: 'TableOfPixelValues',\n  x0018605a: 'TableOfParameterValues',\n  x00186060: 'RWaveTimeVector',\n  x00187000: 'DetectorConditionsNominalFlag',\n  x00187001: 'DetectorTemperature',\n  x00187004: 'DetectorType',\n  x00187005: 'DetectorConfiguration',\n  x00187006: 'DetectorDescription',\n  x00187008: 'DetectorMode',\n  x0018700a: 'DetectorID',\n  x0018700c: 'DateOfLastDetectorCalibration',\n  x0018700e: 'TimeOfLastDetectorCalibration',\n  x00187010: 'DetectorExposuresSinceCalibration',\n  x00187011: 'DetectorExposuresSinceManufactured',\n  x00187012: 'DetectorTimeSinceLastExposure',\n  x00187014: 'DetectorActiveTime',\n  x00187016: 'DetectorActiveOffsetFromExposure',\n  x0018701a: 'DetectorBinning',\n  x00187020: 'DetectorElementPhysicalSize',\n  x00187022: 'DetectorElementSpacing',\n  x00187024: 'DetectorActiveShape',\n  x00187026: 'DetectorActiveDimensions',\n  x00187028: 'DetectorActiveOrigin',\n  x0018702a: 'DetectorManufacturerName',\n  x0018702b: 'DetectorManufacturersModelName',\n  x00187030: 'FieldOfViewOrigin',\n  x00187032: 'FieldOfViewRotation',\n  x00187034: 'FieldOfViewHorizontalFlip',\n  x00187040: 'GridAbsorbingMaterial',\n  x00187041: 'GridSpacingMaterial',\n  x00187042: 'GridThickness',\n  x00187044: 'GridPitch',\n  x00187046: 'GridAspectRatio',\n  x00187048: 'GridPeriod',\n  x0018704c: 'GridFocalDistance',\n  x00187050: 'FilterMaterial',\n  x00187052: 'FilterThicknessMinimum',\n  x00187054: 'FilterThicknessMaximum',\n  x00187060: 'ExposureControlMode',\n  x00187062: 'ExposureControlModeDescription',\n  x00187064: 'ExposureStatus',\n  x00187065: 'PhototimerSetting',\n  x00188150: 'ExposureTimeInMicroSec',\n  x00188151: 'XRayTubeCurrentInMicroAmps',\n  x00189004: 'ContentQualification',\n  x00189005: 'PulseSequenceName',\n  x00189006: 'MRImagingModifierSequence',\n  x00189008: 'EchoPulseSequence',\n  x00189009: 'InversionRecovery',\n  x00189010: 'FlowCompensation',\n  x00189011: 'MultipleSpinEcho',\n  x00189012: 'MultiPlanarExcitation',\n  x00189014: 'PhaseContrast',\n  x00189015: 'TimeOfFlightContrast',\n  x00189016: 'Spoiling',\n  x00189017: 'SteadyStatePulseSequence',\n  x00189018: 'EchoPlanarPulseSequence',\n  x00189019: 'TagAngleFirstAxis',\n  x00189020: 'MagnetizationTransfer',\n  x00189021: 'T2Preparation',\n  x00189022: 'BloodSignalNulling',\n  x00189024: 'SaturationRecovery',\n  x00189025: 'SpectrallySelectedSuppression',\n  x00189026: 'SpectrallySelectedExcitation',\n  x00189027: 'SpatialPresaturation',\n  x00189028: 'Tagging',\n  x00189029: 'OversamplingPhase',\n  x00189030: 'TagSpacingFirstDimension',\n  x00189032: 'GeometryOfKSpaceTraversal',\n  x00189033: 'SegmentedKSpaceTraversal',\n  x00189034: 'RectilinearPhaseEncodeReordering',\n  x00189035: 'TagThickness',\n  x00189036: 'PartialFourierDirection',\n  x00189037: 'CardiacSynchronizationTechnique',\n  x00189041: 'ReceiveCoilManufacturerName',\n  x00189042: 'MRReceiveCoilSequence',\n  x00189043: 'ReceiveCoilType',\n  x00189044: 'QuadratureReceiveCoil',\n  x00189045: 'MultiCoilDefinitionSequence',\n  x00189046: 'MultiCoilConfiguration',\n  x00189047: 'MultiCoilElementName',\n  x00189048: 'MultiCoilElementUsed',\n  x00189049: 'MRTransmitCoilSequence',\n  x00189050: 'TransmitCoilManufacturerName',\n  x00189051: 'TransmitCoilType',\n  x00189052: 'SpectralWidth',\n  x00189053: 'ChemicalShiftReference',\n  x00189054: 'VolumeLocalizationTechnique',\n  x00189058: 'MRAcquisitionFrequencyEncodeSteps',\n  x00189059: 'Decoupling',\n  x00189060: 'DecoupledNucleus',\n  x00189061: 'DecouplingFrequency',\n  x00189062: 'DecouplingMethod',\n  x00189063: 'DecouplingChemicalShiftReference',\n  x00189064: 'KSpaceFiltering',\n  x00189065: 'TimeDomainFiltering',\n  x00189066: 'NumberOfZeroFills',\n  x00189067: 'BaselineCorrection',\n  x00189069: 'ParallelReductionFactorInPlane',\n  x00189070: 'CardiacRRIntervalSpecified',\n  x00189073: 'AcquisitionDuration',\n  x00189074: 'FrameAcquisitionDateTime',\n  x00189075: 'DiffusionDirectionality',\n  x00189076: 'DiffusionGradientDirectionSequence',\n  x00189077: 'ParallelAcquisition',\n  x00189078: 'ParallelAcquisitionTechnique',\n  x00189079: 'InversionTimes',\n  x00189080: 'MetaboliteMapDescription',\n  x00189081: 'PartialFourier',\n  x00189082: 'EffectiveEchoTime',\n  x00189083: 'MetaboliteMapCodeSequence',\n  x00189084: 'ChemicalShiftSequence',\n  x00189085: 'CardiacSignalSource',\n  x00189087: 'DiffusionBValue',\n  x00189089: 'DiffusionGradientOrientation',\n  x00189090: 'VelocityEncodingDirection',\n  x00189091: 'VelocityEncodingMinimumValue',\n  x00189093: 'NumberOfKSpaceTrajectories',\n  x00189094: 'CoverageOfKSpace',\n  x00189095: 'SpectroscopyAcquisitionPhaseRows',\n  x00189096: 'ParallelReductFactorInPlaneRetired',\n  x00189098: 'TransmitterFrequency',\n  x00189100: 'ResonantNucleus',\n  x00189101: 'FrequencyCorrection',\n  x00189103: 'MRSpectroscopyFOV-GeometrySequence',\n  x00189104: 'SlabThickness',\n  x00189105: 'SlabOrientation',\n  x00189106: 'MidSlabPosition',\n  x00189107: 'MRSpatialSaturationSequence',\n  x00189112: 'MRTimingAndRelatedParametersSeq',\n  x00189114: 'MREchoSequence',\n  x00189115: 'MRModifierSequence',\n  x00189117: 'MRDiffusionSequence',\n  x00189118: 'CardiacTriggerSequence',\n  x00189119: 'MRAveragesSequence',\n  x00189125: 'MRFOV-GeometrySequence',\n  x00189126: 'VolumeLocalizationSequence',\n  x00189127: 'SpectroscopyAcquisitionDataColumns',\n  x00189147: 'DiffusionAnisotropyType',\n  x00189151: 'FrameReferenceDateTime',\n  x00189152: 'MRMetaboliteMapSequence',\n  x00189155: 'ParallelReductionFactorOutOfPlane',\n  x00189159: 'SpectroscopyOutOfPlanePhaseSteps',\n  x00189166: 'BulkMotionStatus',\n  x00189168: 'ParallelReductionFactSecondInPlane',\n  x00189169: 'CardiacBeatRejectionTechnique',\n  x00189170: 'RespiratoryMotionCompTechnique',\n  x00189171: 'RespiratorySignalSource',\n  x00189172: 'BulkMotionCompensationTechnique',\n  x00189173: 'BulkMotionSignalSource',\n  x00189174: 'ApplicableSafetyStandardAgency',\n  x00189175: 'ApplicableSafetyStandardDescr',\n  x00189176: 'OperatingModeSequence',\n  x00189177: 'OperatingModeType',\n  x00189178: 'OperatingMode',\n  x00189179: 'SpecificAbsorptionRateDefinition',\n  x00189180: 'GradientOutputType',\n  x00189181: 'SpecificAbsorptionRateValue',\n  x00189182: 'GradientOutput',\n  x00189183: 'FlowCompensationDirection',\n  x00189184: 'TaggingDelay',\n  x00189185: 'RespiratoryMotionCompTechDescr',\n  x00189186: 'RespiratorySignalSourceID',\n  x00189195: 'ChemicalShiftsMinIntegrateLimitHz',\n  x00189196: 'ChemicalShiftsMaxIntegrateLimitHz',\n  x00189197: 'MRVelocityEncodingSequence',\n  x00189198: 'FirstOrderPhaseCorrection',\n  x00189199: 'WaterReferencedPhaseCorrection',\n  x00189200: 'MRSpectroscopyAcquisitionType',\n  x00189214: 'RespiratoryCyclePosition',\n  x00189217: 'VelocityEncodingMaximumValue',\n  x00189218: 'TagSpacingSecondDimension',\n  x00189219: 'TagAngleSecondAxis',\n  x00189220: 'FrameAcquisitionDuration',\n  x00189226: 'MRImageFrameTypeSequence',\n  x00189227: 'MRSpectroscopyFrameTypeSequence',\n  x00189231: 'MRAcqPhaseEncodingStepsInPlane',\n  x00189232: 'MRAcqPhaseEncodingStepsOutOfPlane',\n  x00189234: 'SpectroscopyAcqPhaseColumns',\n  x00189236: 'CardiacCyclePosition',\n  x00189239: 'SpecificAbsorptionRateSequence',\n  x00189240: 'RFEchoTrainLength',\n  x00189241: 'GradientEchoTrainLength',\n  x00189295: 'ChemicalShiftsMinIntegrateLimitPPM',\n  x00189296: 'ChemicalShiftsMaxIntegrateLimitPPM',\n  x00189301: 'CTAcquisitionTypeSequence',\n  x00189302: 'AcquisitionType',\n  x00189303: 'TubeAngle',\n  x00189304: 'CTAcquisitionDetailsSequence',\n  x00189305: 'RevolutionTime',\n  x00189306: 'SingleCollimationWidth',\n  x00189307: 'TotalCollimationWidth',\n  x00189308: 'CTTableDynamicsSequence',\n  x00189309: 'TableSpeed',\n  x00189310: 'TableFeedPerRotation',\n  x00189311: 'SpiralPitchFactor',\n  x00189312: 'CTGeometrySequence',\n  x00189313: 'DataCollectionCenterPatient',\n  x00189314: 'CTReconstructionSequence',\n  x00189315: 'ReconstructionAlgorithm',\n  x00189316: 'ConvolutionKernelGroup',\n  x00189317: 'ReconstructionFieldOfView',\n  x00189318: 'ReconstructionTargetCenterPatient',\n  x00189319: 'ReconstructionAngle',\n  x00189320: 'ImageFilter',\n  x00189321: 'CTExposureSequence',\n  x00189322: 'ReconstructionPixelSpacing',\n  x00189323: 'ExposureModulationType',\n  x00189324: 'EstimatedDoseSaving',\n  x00189325: 'CTXRayDetailsSequence',\n  x00189326: 'CTPositionSequence',\n  x00189327: 'TablePosition',\n  x00189328: 'ExposureTimeInMilliSec',\n  x00189329: 'CTImageFrameTypeSequence',\n  x00189330: 'XRayTubeCurrentInMilliAmps',\n  x00189332: 'ExposureInMilliAmpSec',\n  x00189333: 'ConstantVolumeFlag',\n  x00189334: 'FluoroscopyFlag',\n  x00189335: 'SourceToDataCollectionCenterDist',\n  x00189337: 'ContrastBolusAgentNumber',\n  x00189338: 'ContrastBolusIngredientCodeSeq',\n  x00189340: 'ContrastAdministrationProfileSeq',\n  x00189341: 'ContrastBolusUsageSequence',\n  x00189342: 'ContrastBolusAgentAdministered',\n  x00189343: 'ContrastBolusAgentDetected',\n  x00189344: 'ContrastBolusAgentPhase',\n  x00189345: 'CTDIvol',\n  x00189346: 'CTDIPhantomTypeCodeSequence',\n  x00189351: 'CalciumScoringMassFactorPatient',\n  x00189352: 'CalciumScoringMassFactorDevice',\n  x00189353: 'EnergyWeightingFactor',\n  x00189360: 'CTAdditionalXRaySourceSequence',\n  x00189401: 'ProjectionPixelCalibrationSequence',\n  x00189402: 'DistanceSourceToIsocenter',\n  x00189403: 'DistanceObjectToTableTop',\n  x00189404: 'ObjectPixelSpacingInCenterOfBeam',\n  x00189405: 'PositionerPositionSequence',\n  x00189406: 'TablePositionSequence',\n  x00189407: 'CollimatorShapeSequence',\n  x00189412: 'XA-XRFFrameCharacteristicsSequence',\n  x00189417: 'FrameAcquisitionSequence',\n  x00189420: 'XRayReceptorType',\n  x00189423: 'AcquisitionProtocolName',\n  x00189424: 'AcquisitionProtocolDescription',\n  x00189425: 'ContrastBolusIngredientOpaque',\n  x00189426: 'DistanceReceptorPlaneToDetHousing',\n  x00189427: 'IntensifierActiveShape',\n  x00189428: 'IntensifierActiveDimensions',\n  x00189429: 'PhysicalDetectorSize',\n  x00189430: 'PositionOfIsocenterProjection',\n  x00189432: 'FieldOfViewSequence',\n  x00189433: 'FieldOfViewDescription',\n  x00189434: 'ExposureControlSensingRegionsSeq',\n  x00189435: 'ExposureControlSensingRegionShape',\n  x00189436: 'ExposureControlSensRegionLeftEdge',\n  x00189437: 'ExposureControlSensRegionRightEdge',\n  x00189440: 'CenterOfCircExposControlSensRegion',\n  x00189441: 'RadiusOfCircExposControlSensRegion',\n  x00189447: 'ColumnAngulationPatient',\n  x00189449: 'BeamAngle',\n  x00189451: 'FrameDetectorParametersSequence',\n  x00189452: 'CalculatedAnatomyThickness',\n  x00189455: 'CalibrationSequence',\n  x00189456: 'ObjectThicknessSequence',\n  x00189457: 'PlaneIdentification',\n  x00189461: 'FieldOfViewDimensionsInFloat',\n  x00189462: 'IsocenterReferenceSystemSequence',\n  x00189463: 'PositionerIsocenterPrimaryAngle',\n  x00189464: 'PositionerIsocenterSecondaryAngle',\n  x00189465: 'PositionerIsocenterDetRotAngle',\n  x00189466: 'TableXPositionToIsocenter',\n  x00189467: 'TableYPositionToIsocenter',\n  x00189468: 'TableZPositionToIsocenter',\n  x00189469: 'TableHorizontalRotationAngle',\n  x00189470: 'TableHeadTiltAngle',\n  x00189471: 'TableCradleTiltAngle',\n  x00189472: 'FrameDisplayShutterSequence',\n  x00189473: 'AcquiredImageAreaDoseProduct',\n  x00189474: 'CArmPositionerTabletopRelationship',\n  x00189476: 'XRayGeometrySequence',\n  x00189477: 'IrradiationEventIDSequence',\n  x00189504: 'XRay3DFrameTypeSequence',\n  x00189506: 'ContributingSourcesSequence',\n  x00189507: 'XRay3DAcquisitionSequence',\n  x00189508: 'PrimaryPositionerScanArc',\n  x00189509: 'SecondaryPositionerScanArc',\n  x00189510: 'PrimaryPositionerScanStartAngle',\n  x00189511: 'SecondaryPositionerScanStartAngle',\n  x00189514: 'PrimaryPositionerIncrement',\n  x00189515: 'SecondaryPositionerIncrement',\n  x00189516: 'StartAcquisitionDateTime',\n  x00189517: 'EndAcquisitionDateTime',\n  x00189524: 'ApplicationName',\n  x00189525: 'ApplicationVersion',\n  x00189526: 'ApplicationManufacturer',\n  x00189527: 'AlgorithmType',\n  x00189528: 'AlgorithmDescription',\n  x00189530: 'XRay3DReconstructionSequence',\n  x00189531: 'ReconstructionDescription',\n  x00189538: 'PerProjectionAcquisitionSequence',\n  x00189601: 'DiffusionBMatrixSequence',\n  x00189602: 'DiffusionBValueXX',\n  x00189603: 'DiffusionBValueXY',\n  x00189604: 'DiffusionBValueXZ',\n  x00189605: 'DiffusionBValueYY',\n  x00189606: 'DiffusionBValueYZ',\n  x00189607: 'DiffusionBValueZZ',\n  x00189701: 'DecayCorrectionDateTime',\n  x00189715: 'StartDensityThreshold',\n  x00189722: 'TerminationTimeThreshold',\n  x00189725: 'DetectorGeometry',\n  x00189727: 'AxialDetectorDimension',\n  x00189735: 'PETPositionSequence',\n  x00189739: 'NumberOfIterations',\n  x00189740: 'NumberOfSubsets',\n  x00189751: 'PETFrameTypeSequence',\n  x00189756: 'ReconstructionType',\n  x00189758: 'DecayCorrected',\n  x00189759: 'AttenuationCorrected',\n  x00189760: 'ScatterCorrected',\n  x00189761: 'DeadTimeCorrected',\n  x00189762: 'GantryMotionCorrected',\n  x00189763: 'PatientMotionCorrected',\n  x00189765: 'RandomsCorrected',\n  x00189767: 'SensitivityCalibrated',\n  x00189801: 'DepthsOfFocus',\n  x00189804: 'ExclusionStartDatetime',\n  x00189805: 'ExclusionDuration',\n  x00189807: 'ImageDataTypeSequence',\n  x00189808: 'DataType',\n  x0018980b: 'AliasedDataType',\n  x0018a001: 'ContributingEquipmentSequence',\n  x0018a002: 'ContributionDateTime',\n  x0018a003: 'ContributionDescription',\n  // x00191002: 'NumberOfCellsIInDetector',\n  // x00191003: 'CellNumberAtTheta',\n  // x00191004: 'CellSpacing',\n  // x0019100f: 'HorizFrameOfRef',\n  // x00191011: 'SeriesContrast',\n  // x00191012: 'LastPseq',\n  // x00191013: 'StartNumberForBaseline',\n  // x00191014: 'EndNumberForBaseline',\n  // x00191015: 'StartNumberForEnhancedScans',\n  // x00191016: 'EndNumberForEnhancedScans',\n  // x00191017: 'SeriesPlane',\n  // x00191018: 'FirstScanRas',\n  // x00191019: 'FirstScanLocation',\n  // x0019101a: 'LastScanRas',\n  // x0019101b: 'LastScanLoc',\n  // x0019101e: 'DisplayFieldOfView',\n  // x00191023: 'TableSpeed',\n  // x00191024: 'MidScanTime',\n  // x00191025: 'MidScanFlag',\n  // x00191026: 'DegreesOfAzimuth',\n  // x00191027: 'GantryPeriod',\n  // x0019102a: 'XRayOnPosition',\n  // x0019102b: 'XRayOffPosition',\n  // x0019102c: 'NumberOfTriggers',\n  // x0019102e: 'AngleOfFirstView',\n  // x0019102f: 'TriggerFrequency',\n  // x00191039: 'ScanFOVType',\n  // x00191040: 'StatReconFlag',\n  // x00191041: 'ComputeType',\n  // x00191042: 'SegmentNumber',\n  // x00191043: 'TotalSegmentsRequested',\n  // x00191044: 'InterscanDelay',\n  // x00191047: 'ViewCompressionFactor',\n  // x0019104a: 'TotalNoOfRefChannels',\n  // x0019104b: 'DataSizeForScanData',\n  // x00191052: 'ReconPostProcflag',\n  // x00191057: 'CTWaterNumber',\n  // x00191058: 'CTBoneNumber',\n  // x0019105a: 'AcquisitionDuration',\n  // x0019105e: 'NumberOfChannels',\n  // x0019105f: 'IncrementBetweenChannels',\n  // x00191060: 'StartingView',\n  // x00191061: 'NumberOfViews',\n  // x00191062: 'IncrementBetweenViews',\n  // x0019106a: 'DependantOnNoViewsProcessed',\n  // x0019106b: 'FieldOfViewInDetectorCells',\n  // x00191070: 'ValueOfBackProjectionButton',\n  // x00191071: 'SetIfFatqEstimatesWereUsed',\n  // x00191072: 'ZChanAvgOverViews',\n  // x00191073: 'AvgOfLeftRefChansOverViews',\n  // x00191074: 'MaxLeftChanOverViews',\n  // x00191075: 'AvgOfRightRefChansOverViews',\n  // x00191076: 'MaxRightChanOverViews',\n  // x0019107d: 'SecondEcho',\n  // x0019107e: 'NumberOfEchoes',\n  // x0019107f: 'TableDelta',\n  // x00191081: 'Contiguous',\n  // x00191084: 'PeakSAR',\n  // x00191085: 'MonitorSAR',\n  // x00191087: 'CardiacRepetitionTime',\n  // x00191088: 'ImagesPerCardiacCycle',\n  // x0019108a: 'ActualReceiveGainAnalog',\n  // x0019108b: 'ActualReceiveGainDigital',\n  // x0019108d: 'DelayAfterTrigger',\n  // x0019108f: 'Swappf',\n  // x00191090: 'PauseInterval',\n  // x00191091: 'PulseTime',\n  // x00191092: 'SliceOffsetOnFreqAxis',\n  // x00191093: 'CenterFrequency',\n  // x00191094: 'TransmitGain',\n  // x00191095: 'AnalogReceiverGain',\n  // x00191096: 'DigitalReceiverGain',\n  // x00191097: 'BitmapDefiningCVs',\n  // x00191098: 'CenterFreqMethod',\n  // x0019109b: 'PulseSeqMode',\n  // x0019109c: 'PulseSeqName',\n  // x0019109d: 'PulseSeqDate',\n  // x0019109e: 'InternalPulseSeqName',\n  // x0019109f: 'TransmittingCoil',\n  // x001910a0: 'SurfaceCoilType',\n  // x001910a1: 'ExtremityCoilFlag',\n  // x001910a2: 'RawDataRunNumber',\n  // x001910a3: 'CalibratedFieldStrength',\n  // x001910a4: 'SATFatWaterBone',\n  // x001910a5: 'ReceiveBandwidth',\n  // x001910a7: 'UserData01',\n  // x001910a8: 'UserData02',\n  // x001910a9: 'UserData03',\n  // x001910aa: 'UserData04',\n  // x001910ab: 'UserData05',\n  // x001910ac: 'UserData06',\n  // x001910ad: 'UserData07',\n  // x001910ae: 'UserData08',\n  // x001910af: 'UserData09',\n  // x001910b0: 'UserData10',\n  // x001910b1: 'UserData11',\n  // x001910b2: 'UserData12',\n  // x001910b3: 'UserData13',\n  // x001910b4: 'UserData14',\n  // x001910b5: 'UserData15',\n  // x001910b6: 'UserData16',\n  // x001910b7: 'UserData17',\n  // x001910b8: 'UserData18',\n  // x001910b9: 'UserData19',\n  // x001910ba: 'UserData20',\n  // x001910bb: 'UserData21',\n  // x001910bc: 'UserData22',\n  // x001910bd: 'UserData23',\n  // x001910be: 'ProjectionAngle',\n  // x001910c0: 'SaturationPlanes',\n  // x001910c1: 'SurfaceCoilIntensity',\n  // x001910c2: 'SATLocationR',\n  // x001910c3: 'SATLocationL',\n  // x001910c4: 'SATLocationA',\n  // x001910c5: 'SATLocationP',\n  // x001910c6: 'SATLocationH',\n  // x001910c7: 'SATLocationF',\n  // x001910c8: 'SATThicknessR-L',\n  // x001910c9: 'SATThicknessA-P',\n  // x001910ca: 'SATThicknessH-F',\n  // x001910cb: 'PrescribedFlowAxis',\n  // x001910cc: 'VelocityEncoding',\n  // x001910cd: 'ThicknessDisclaimer',\n  // x001910ce: 'PrescanType',\n  // x001910cf: 'PrescanStatus',\n  // x001910d0: 'RawDataType',\n  // x001910d2: 'ProjectionAlgorithm',\n  // x001910d3: 'ProjectionAlgorithm',\n  // x001910d5: 'FractionalEcho',\n  // x001910d6: 'PrepPulse',\n  // x001910d7: 'CardiacPhases',\n  // x001910d8: 'VariableEchoflag',\n  // x001910d9: 'ConcatenatedSAT',\n  // x001910da: 'ReferenceChannelUsed',\n  // x001910db: 'BackProjectorCoefficient',\n  // x001910dc: 'PrimarySpeedCorrectionUsed',\n  // x001910dd: 'OverrangeCorrectionUsed',\n  // x001910de: 'DynamicZAlphaValue',\n  // x001910df: 'UserData',\n  // x001910e0: 'UserData',\n  // x001910e2: 'VelocityEncodeScale',\n  // x001910f2: 'FastPhases',\n  // x001910f9: 'TransmissionGain',\n  x00200000: 'RelationshipGroupLength',\n  x0020000d: 'StudyInstanceUID',\n  x0020000e: 'SeriesInstanceUID',\n  x00200010: 'StudyID',\n  x00200011: 'SeriesNumber',\n  x00200012: 'AcquisitionNumber',\n  x00200013: 'InstanceNumber',\n  x00200014: 'IsotopeNumber',\n  x00200015: 'PhaseNumber',\n  x00200016: 'IntervalNumber',\n  x00200017: 'TimeSlotNumber',\n  x00200018: 'AngleNumber',\n  x00200019: 'ItemNumber',\n  x00200020: 'PatientOrientation',\n  x00200022: 'OverlayNumber',\n  x00200024: 'CurveNumber',\n  x00200026: 'LookupTableNumber',\n  x00200030: 'ImagePosition',\n  x00200032: 'ImagePositionPatient',\n  x00200035: 'ImageOrientation',\n  x00200037: 'ImageOrientationPatient',\n  x00200050: 'Location',\n  x00200052: 'FrameOfReferenceUID',\n  x00200060: 'Laterality',\n  x00200062: 'ImageLaterality',\n  x00200070: 'ImageGeometryType',\n  x00200080: 'MaskingImage',\n  x00200100: 'TemporalPositionIdentifier',\n  x00200105: 'NumberOfTemporalPositions',\n  x00200110: 'TemporalResolution',\n  x00200200: 'SynchronizationFrameOfReferenceUID',\n  x00201000: 'SeriesInStudy',\n  x00201001: 'AcquisitionsInSeries',\n  x00201002: 'ImagesInAcquisition',\n  x00201003: 'ImagesInSeries',\n  x00201004: 'AcquisitionsInStudy',\n  x00201005: 'ImagesInStudy',\n  x00201020: 'Reference',\n  x00201040: 'PositionReferenceIndicator',\n  x00201041: 'SliceLocation',\n  x00201070: 'OtherStudyNumbers',\n  x00201200: 'NumberOfPatientRelatedStudies',\n  x00201202: 'NumberOfPatientRelatedSeries',\n  x00201204: 'NumberOfPatientRelatedInstances',\n  x00201206: 'NumberOfStudyRelatedSeries',\n  x00201208: 'NumberOfStudyRelatedInstances',\n  x00201209: 'NumberOfSeriesRelatedInstances',\n  x002031xx: 'SourceImageIDs',\n  x00203401: 'ModifyingDeviceID',\n  x00203402: 'ModifiedImageID',\n  x00203403: 'ModifiedImageDate',\n  x00203404: 'ModifyingDeviceManufacturer',\n  x00203405: 'ModifiedImageTime',\n  x00203406: 'ModifiedImageDescription',\n  x00204000: 'ImageComments',\n  x00205000: 'OriginalImageIdentification',\n  x00205002: 'OriginalImageIdentNomenclature',\n  x00209056: 'StackID',\n  x00209057: 'InStackPositionNumber',\n  x00209071: 'FrameAnatomySequence',\n  x00209072: 'FrameLaterality',\n  x00209111: 'FrameContentSequence',\n  x00209113: 'PlanePositionSequence',\n  x00209116: 'PlaneOrientationSequence',\n  x00209128: 'TemporalPositionIndex',\n  x00209153: 'TriggerDelayTime',\n  x00209156: 'FrameAcquisitionNumber',\n  x00209157: 'DimensionIndexValues',\n  x00209158: 'FrameComments',\n  x00209161: 'ConcatenationUID',\n  x00209162: 'InConcatenationNumber',\n  x00209163: 'InConcatenationTotalNumber',\n  x00209164: 'DimensionOrganizationUID',\n  x00209165: 'DimensionIndexPointer',\n  x00209167: 'FunctionalGroupPointer',\n  x00209213: 'DimensionIndexPrivateCreator',\n  x00209221: 'DimensionOrganizationSequence',\n  x00209222: 'DimensionIndexSequence',\n  x00209228: 'ConcatenationFrameOffsetNumber',\n  x00209238: 'FunctionalGroupPrivateCreator',\n  x00209241: 'NominalPercentageOfCardiacPhase',\n  x00209245: 'NominalPercentOfRespiratoryPhase',\n  x00209246: 'StartingRespiratoryAmplitude',\n  x00209247: 'StartingRespiratoryPhase',\n  x00209248: 'EndingRespiratoryAmplitude',\n  x00209249: 'EndingRespiratoryPhase',\n  x00209250: 'RespiratoryTriggerType',\n  x00209251: 'RRIntervalTimeNominal',\n  x00209252: 'ActualCardiacTriggerDelayTime',\n  x00209253: 'RespiratorySynchronizationSequence',\n  x00209254: 'RespiratoryIntervalTime',\n  x00209255: 'NominalRespiratoryTriggerDelayTime',\n  x00209256: 'RespiratoryTriggerDelayThreshold',\n  x00209257: 'ActualRespiratoryTriggerDelayTime',\n  x00209301: 'ImagePositionVolume',\n  x00209302: 'ImageOrientationVolume',\n  x00209308: 'ApexPosition',\n  x00209421: 'DimensionDescriptionLabel',\n  x00209450: 'PatientOrientationInFrameSequence',\n  x00209453: 'FrameLabel',\n  x00209518: 'AcquisitionIndex',\n  x00209529: 'ContributingSOPInstancesRefSeq',\n  x00209536: 'ReconstructionIndex',\n  // x00211003: 'SeriesFromWhichPrescribed',\n  // x00211005: 'GenesisVersionNow',\n  // x00211007: 'SeriesRecordChecksum',\n  // x00211018: 'GenesisVersionNow',\n  // x00211019: 'AcqreconRecordChecksum',\n  // x00211020: 'TableStartLocation',\n  // x00211035: 'SeriesFromWhichPrescribed',\n  // x00211036: 'ImageFromWhichPrescribed',\n  // x00211037: 'ScreenFormat',\n  // x0021104a: 'AnatomicalReferenceForScout',\n  // x0021104f: 'LocationsInAcquisition',\n  // x00211050: 'GraphicallyPrescribed',\n  // x00211051: 'RotationFromSourceXRot',\n  // x00211052: 'RotationFromSourceYRot',\n  // x00211053: 'RotationFromSourceZRot',\n  // x00211054: 'ImagePosition',\n  // x00211055: 'ImageOrientation',\n  // x00211056: 'IntegerSlop',\n  // x00211057: 'IntegerSlop',\n  // x00211058: 'IntegerSlop',\n  // x00211059: 'IntegerSlop',\n  // x0021105a: 'IntegerSlop',\n  // x0021105b: 'FloatSlop',\n  // x0021105c: 'FloatSlop',\n  // x0021105d: 'FloatSlop',\n  // x0021105e: 'FloatSlop',\n  // x0021105f: 'FloatSlop',\n  // x00211081: 'AutoWindowLevelAlpha',\n  // x00211082: 'AutoWindowLevelBeta',\n  // x00211083: 'AutoWindowLevelWindow',\n  // x00211084: 'ToWindowLevelLevel',\n  // x00211090: 'TubeFocalSpotPosition',\n  // x00211091: 'BiopsyPosition',\n  // x00211092: 'BiopsyTLocation',\n  // x00211093: 'BiopsyRefLocation',\n  x00220001: 'LightPathFilterPassThroughWavelen',\n  x00220002: 'LightPathFilterPassBand',\n  x00220003: 'ImagePathFilterPassThroughWavelen',\n  x00220004: 'ImagePathFilterPassBand',\n  x00220005: 'PatientEyeMovementCommanded',\n  x00220006: 'PatientEyeMovementCommandCodeSeq',\n  x00220007: 'SphericalLensPower',\n  x00220008: 'CylinderLensPower',\n  x00220009: 'CylinderAxis',\n  x0022000a: 'EmmetropicMagnification',\n  x0022000b: 'IntraOcularPressure',\n  x0022000c: 'HorizontalFieldOfView',\n  x0022000d: 'PupilDilated',\n  x0022000e: 'DegreeOfDilation',\n  x00220010: 'StereoBaselineAngle',\n  x00220011: 'StereoBaselineDisplacement',\n  x00220012: 'StereoHorizontalPixelOffset',\n  x00220013: 'StereoVerticalPixelOffset',\n  x00220014: 'StereoRotation',\n  x00220015: 'AcquisitionDeviceTypeCodeSequence',\n  x00220016: 'IlluminationTypeCodeSequence',\n  x00220017: 'LightPathFilterTypeStackCodeSeq',\n  x00220018: 'ImagePathFilterTypeStackCodeSeq',\n  x00220019: 'LensesCodeSequence',\n  x0022001a: 'ChannelDescriptionCodeSequence',\n  x0022001b: 'RefractiveStateSequence',\n  x0022001c: 'MydriaticAgentCodeSequence',\n  x0022001d: 'RelativeImagePositionCodeSequence',\n  x00220020: 'StereoPairsSequence',\n  x00220021: 'LeftImageSequence',\n  x00220022: 'RightImageSequence',\n  x00220030: 'AxialLengthOfTheEye',\n  x00220031: 'OphthalmicFrameLocationSequence',\n  x00220032: 'ReferenceCoordinates',\n  x00220035: 'DepthSpatialResolution',\n  x00220036: 'MaximumDepthDistortion',\n  x00220037: 'AlongScanSpatialResolution',\n  x00220038: 'MaximumAlongScanDistortion',\n  x00220039: 'OphthalmicImageOrientation',\n  x00220041: 'DepthOfTransverseImage',\n  x00220042: 'MydriaticAgentConcUnitsSeq',\n  x00220048: 'AcrossScanSpatialResolution',\n  x00220049: 'MaximumAcrossScanDistortion',\n  x0022004e: 'MydriaticAgentConcentration',\n  x00220055: 'IlluminationWaveLength',\n  x00220056: 'IlluminationPower',\n  x00220057: 'IlluminationBandwidth',\n  x00220058: 'MydriaticAgentSequence',\n  // x00231001: 'NumberOfSeriesInStudy',\n  // x00231002: 'NumberOfUnarchivedSeries',\n  // x00231010: 'ReferenceImageField',\n  // x00231050: 'SummaryImage',\n  // x00231070: 'StartTimeSecsInFirstAxial',\n  // x00231074: 'NoofUpdatesToHeader',\n  // x0023107d: 'IndicatesIfTheStudyHasCompleteInfo',\n  // x00251006: 'LastPulseSequenceUsed',\n  // x00251007: 'ImagesInSeries',\n  // x00251010: 'LandmarkCounter',\n  // x00251011: 'NumberOfAcquisitions',\n  // x00251014: 'IndicatesNoofUpdatesToHeader',\n  // x00251017: 'SeriesCompleteFlag',\n  // x00251018: 'NumberOfImagesArchived',\n  // x00251019: 'LastImageNumberUsed',\n  // x0025101a: 'PrimaryReceiverSuiteAndHost',\n  // x00271006: 'ImageArchiveFlag',\n  // x00271010: 'ScoutType',\n  // x0027101c: 'VmaMamp',\n  // x0027101d: 'VmaPhase',\n  // x0027101e: 'VmaMod',\n  // x0027101f: 'VmaClip',\n  // x00271020: 'SmartScanOnOffFlag',\n  // x00271030: 'ForeignImageRevision',\n  // x00271031: 'ImagingMode',\n  // x00271032: 'PulseSequence',\n  // x00271033: 'ImagingOptions',\n  // x00271035: 'PlaneType',\n  // x00271036: 'ObliquePlane',\n  // x00271040: 'RASLetterOfImageLocation',\n  // x00271041: 'ImageLocation',\n  // x00271042: 'CenterRCoordOfPlaneImage',\n  // x00271043: 'CenterACoordOfPlaneImage',\n  // x00271044: 'CenterSCoordOfPlaneImage',\n  // x00271045: 'NormalRCoord',\n  // x00271046: 'NormalACoord',\n  // x00271047: 'NormalSCoord',\n  // x00271048: 'RCoordOfTopRightCorner',\n  // x00271049: 'ACoordOfTopRightCorner',\n  // x0027104a: 'SCoordOfTopRightCorner',\n  // x0027104b: 'RCoordOfBottomRightCorner',\n  // x0027104c: 'ACoordOfBottomRightCorner',\n  // x0027104d: 'SCoordOfBottomRightCorner',\n  // x00271050: 'TableStartLocation',\n  // x00271051: 'TableEndLocation',\n  // x00271052: 'RASLetterForSideOfImage',\n  // x00271053: 'RASLetterForAnteriorPosterior',\n  // x00271054: 'RASLetterForScoutStartLoc',\n  // x00271055: 'RASLetterForScoutEndLoc',\n  // x00271060: 'ImageDimensionX',\n  // x00271061: 'ImageDimensionY',\n  // x00271062: 'NumberOfExcitations',\n  x00280000: 'ImagePresentationGroupLength',\n  x00280002: 'SamplesPerPixel',\n  x00280003: 'SamplesPerPixelUsed',\n  x00280004: 'PhotometricInterpretation',\n  x00280005: 'ImageDimensions',\n  x00280006: 'PlanarConfiguration',\n  x00280008: 'NumberOfFrames',\n  x00280009: 'FrameIncrementPointer',\n  x0028000a: 'FrameDimensionPointer',\n  x00280010: 'Rows',\n  x00280011: 'Columns',\n  x00280012: 'Planes',\n  x00280014: 'UltrasoundColorDataPresent',\n  x00280030: 'PixelSpacing',\n  x00280031: 'ZoomFactor',\n  x00280032: 'ZoomCenter',\n  x00280034: 'PixelAspectRatio',\n  x00280040: 'ImageFormat',\n  x00280050: 'ManipulatedImage',\n  x00280051: 'CorrectedImage',\n  x0028005f: 'CompressionRecognitionCode',\n  x00280060: 'CompressionCode',\n  x00280061: 'CompressionOriginator',\n  x00280062: 'CompressionLabel',\n  x00280063: 'CompressionDescription',\n  x00280065: 'CompressionSequence',\n  x00280066: 'CompressionStepPointers',\n  x00280068: 'RepeatInterval',\n  x00280069: 'BitsGrouped',\n  x00280070: 'PerimeterTable',\n  x00280071: 'PerimeterValue',\n  x00280080: 'PredictorRows',\n  x00280081: 'PredictorColumns',\n  x00280082: 'PredictorConstants',\n  x00280090: 'BlockedPixels',\n  x00280091: 'BlockRows',\n  x00280092: 'BlockColumns',\n  x00280093: 'RowOverlap',\n  x00280094: 'ColumnOverlap',\n  x00280100: 'BitsAllocated',\n  x00280101: 'BitsStored',\n  x00280102: 'HighBit',\n  x00280103: 'PixelRepresentation',\n  x00280104: 'SmallestValidPixelValue',\n  x00280105: 'LargestValidPixelValue',\n  x00280106: 'SmallestImagePixelValue',\n  x00280107: 'LargestImagePixelValue',\n  x00280108: 'SmallestPixelValueInSeries',\n  x00280109: 'LargestPixelValueInSeries',\n  x00280110: 'SmallestImagePixelValueInPlane',\n  x00280111: 'LargestImagePixelValueInPlane',\n  x00280120: 'PixelPaddingValue',\n  x00280121: 'PixelPaddingRangeLimit',\n  x00280200: 'ImageLocation',\n  x00280300: 'QualityControlImage',\n  x00280301: 'BurnedInAnnotation',\n  x00280400: 'TransformLabel',\n  x00280401: 'TransformVersionNumber',\n  x00280402: 'NumberOfTransformSteps',\n  x00280403: 'SequenceOfCompressedData',\n  x00280404: 'DetailsOfCoefficients',\n  x002804x2: 'CoefficientCoding',\n  x002804x3: 'CoefficientCodingPointers',\n  x00280700: 'DCTLabel',\n  x00280701: 'DataBlockDescription',\n  x00280702: 'DataBlock',\n  x00280710: 'NormalizationFactorFormat',\n  x00280720: 'ZonalMapNumberFormat',\n  x00280721: 'ZonalMapLocation',\n  x00280722: 'ZonalMapFormat',\n  x00280730: 'AdaptiveMapFormat',\n  x00280740: 'CodeNumberFormat',\n  x002808x0: 'CodeLabel',\n  x002808x2: 'NumberOfTables',\n  x002808x3: 'CodeTableLocation',\n  x002808x4: 'BitsForCodeWord',\n  x002808x8: 'ImageDataLocation',\n  x00280a02: 'PixelSpacingCalibrationType',\n  x00280a04: 'PixelSpacingCalibrationDescription',\n  x00281040: 'PixelIntensityRelationship',\n  x00281041: 'PixelIntensityRelationshipSign',\n  x00281050: 'WindowCenter',\n  x00281051: 'WindowWidth',\n  x00281052: 'RescaleIntercept',\n  x00281053: 'RescaleSlope',\n  x00281054: 'RescaleType',\n  x00281055: 'WindowCenterAndWidthExplanation',\n  x00281056: 'VOI_LUTFunction',\n  x00281080: 'GrayScale',\n  x00281090: 'RecommendedViewingMode',\n  x00281100: 'GrayLookupTableDescriptor',\n  x00281101: 'RedPaletteColorTableDescriptor',\n  x00281102: 'GreenPaletteColorTableDescriptor',\n  x00281103: 'BluePaletteColorTableDescriptor',\n  x00281111: 'LargeRedPaletteColorTableDescr',\n  x00281112: 'LargeGreenPaletteColorTableDescr',\n  x00281113: 'LargeBluePaletteColorTableDescr',\n  x00281199: 'PaletteColorTableUID',\n  x00281200: 'GrayLookupTableData',\n  x00281201: 'RedPaletteColorTableData',\n  x00281202: 'GreenPaletteColorTableData',\n  x00281203: 'BluePaletteColorTableData',\n  x00281211: 'LargeRedPaletteColorTableData',\n  x00281212: 'LargeGreenPaletteColorTableData',\n  x00281213: 'LargeBluePaletteColorTableData',\n  x00281214: 'LargePaletteColorLookupTableUID',\n  x00281221: 'SegmentedRedColorTableData',\n  x00281222: 'SegmentedGreenColorTableData',\n  x00281223: 'SegmentedBlueColorTableData',\n  x00281300: 'BreastImplantPresent',\n  x00281350: 'PartialView',\n  x00281351: 'PartialViewDescription',\n  x00281352: 'PartialViewCodeSequence',\n  x0028135a: 'SpatialLocationsPreserved',\n  x00281402: 'DataPathAssignment',\n  x00281404: 'BlendingLUT1Sequence',\n  x00281406: 'BlendingWeightConstant',\n  x00281408: 'BlendingLookupTableData',\n  x0028140c: 'BlendingLUT2Sequence',\n  x0028140e: 'DataPathID',\n  x0028140f: 'RGBLUTTransferFunction',\n  x00281410: 'AlphaLUTTransferFunction',\n  x00282000: 'ICCProfile',\n  x00282110: 'LossyImageCompression',\n  x00282112: 'LossyImageCompressionRatio',\n  x00282114: 'LossyImageCompressionMethod',\n  x00283000: 'ModalityLUTSequence',\n  x00283002: 'LUTDescriptor',\n  x00283003: 'LUTExplanation',\n  x00283004: 'ModalityLUTType',\n  x00283006: 'LUTData',\n  x00283010: 'VOILUTSequence',\n  x00283110: 'SoftcopyVOILUTSequence',\n  x00284000: 'ImagePresentationComments',\n  x00285000: 'BiPlaneAcquisitionSequence',\n  x00286010: 'RepresentativeFrameNumber',\n  x00286020: 'FrameNumbersOfInterest',\n  x00286022: 'FrameOfInterestDescription',\n  x00286023: 'FrameOfInterestType',\n  x00286030: 'MaskPointers',\n  x00286040: 'RWavePointer',\n  x00286100: 'MaskSubtractionSequence',\n  x00286101: 'MaskOperation',\n  x00286102: 'ApplicableFrameRange',\n  x00286110: 'MaskFrameNumbers',\n  x00286112: 'ContrastFrameAveraging',\n  x00286114: 'MaskSubPixelShift',\n  x00286120: 'TIDOffset',\n  x00286190: 'MaskOperationExplanation',\n  x00287fe0: 'PixelDataProviderURL',\n  x00289001: 'DataPointRows',\n  x00289002: 'DataPointColumns',\n  x00289003: 'SignalDomainColumns',\n  x00289099: 'LargestMonochromePixelValue',\n  x00289108: 'DataRepresentation',\n  x00289110: 'PixelMeasuresSequence',\n  x00289132: 'FrameVOILUTSequence',\n  x00289145: 'PixelValueTransformationSequence',\n  x00289235: 'SignalDomainRows',\n  x00289411: 'DisplayFilterPercentage',\n  x00289415: 'FramePixelShiftSequence',\n  x00289416: 'SubtractionItemID',\n  x00289422: 'PixelIntensityRelationshipLUTSeq',\n  x00289443: 'FramePixelDataPropertiesSequence',\n  x00289444: 'GeometricalProperties',\n  x00289445: 'GeometricMaximumDistortion',\n  x00289446: 'ImageProcessingApplied',\n  x00289454: 'MaskSelectionMode',\n  x00289474: 'LUTFunction',\n  x00289478: 'MaskVisibilityPercentage',\n  x00289501: 'PixelShiftSequence',\n  x00289502: 'RegionPixelShiftSequence',\n  x00289503: 'VerticesOfTheRegion',\n  x00289506: 'PixelShiftFrameRange',\n  x00289507: 'LUTFrameRange',\n  x00289520: 'ImageToEquipmentMappingMatrix',\n  x00289537: 'EquipmentCoordinateSystemID',\n  // x00291004: 'LowerRangeOfPixels1a',\n  // x00291005: 'LowerRangeOfPixels1b',\n  // x00291006: 'LowerRangeOfPixels1c',\n  // x00291007: 'LowerRangeOfPixels1d',\n  // x00291008: 'LowerRangeOfPixels1e',\n  // x00291009: 'LowerRangeOfPixels1f',\n  // x0029100a: 'LowerRangeOfPixels1g',\n  // x00291015: 'LowerRangeOfPixels1h',\n  // x00291016: 'LowerRangeOfPixels1i',\n  // x00291017: 'LowerRangeOfPixels2',\n  // x00291018: 'UpperRangeOfPixels2',\n  // x0029101a: 'LenOfTotHdrInBytes',\n  // x00291026: 'VersionOfTheHdrStruct',\n  // x00291034: 'AdvantageCompOverflow',\n  // x00291035: 'AdvantageCompUnderflow',\n  x00320000: 'StudyGroupLength',\n  x0032000a: 'StudyStatusID',\n  x0032000c: 'StudyPriorityID',\n  x00320012: 'StudyIDIssuer',\n  x00320032: 'StudyVerifiedDate',\n  x00320033: 'StudyVerifiedTime',\n  x00320034: 'StudyReadDate',\n  x00320035: 'StudyReadTime',\n  x00321000: 'ScheduledStudyStartDate',\n  x00321001: 'ScheduledStudyStartTime',\n  x00321010: 'ScheduledStudyStopDate',\n  x00321011: 'ScheduledStudyStopTime',\n  x00321020: 'ScheduledStudyLocation',\n  x00321021: 'ScheduledStudyLocationAETitle',\n  x00321030: 'ReasonForStudy',\n  x00321031: 'RequestingPhysicianIDSequence',\n  x00321032: 'RequestingPhysician',\n  x00321033: 'RequestingService',\n  x00321040: 'StudyArrivalDate',\n  x00321041: 'StudyArrivalTime',\n  x00321050: 'StudyCompletionDate',\n  x00321051: 'StudyCompletionTime',\n  x00321055: 'StudyComponentStatusID',\n  x00321060: 'RequestedProcedureDescription',\n  x00321064: 'RequestedProcedureCodeSequence',\n  x00321070: 'RequestedContrastAgent',\n  x00324000: 'StudyComments',\n  x00380004: 'ReferencedPatientAliasSequence',\n  x00380008: 'VisitStatusID',\n  x00380010: 'AdmissionID',\n  x00380011: 'IssuerOfAdmissionID',\n  x00380016: 'RouteOfAdmissions',\n  x0038001a: 'ScheduledAdmissionDate',\n  x0038001b: 'ScheduledAdmissionTime',\n  x0038001c: 'ScheduledDischargeDate',\n  x0038001d: 'ScheduledDischargeTime',\n  x0038001e: 'ScheduledPatientInstitResidence',\n  x00380020: 'AdmittingDate',\n  x00380021: 'AdmittingTime',\n  x00380030: 'DischargeDate',\n  x00380032: 'DischargeTime',\n  x00380040: 'DischargeDiagnosisDescription',\n  x00380044: 'DischargeDiagnosisCodeSequence',\n  x00380050: 'SpecialNeeds',\n  x00380060: 'ServiceEpisodeID',\n  x00380061: 'IssuerOfServiceEpisodeID',\n  x00380062: 'ServiceEpisodeDescription',\n  x00380100: 'PertinentDocumentsSequence',\n  x00380300: 'CurrentPatientLocation',\n  x00380400: 'PatientInstitutionResidence',\n  x00380500: 'PatientState',\n  x00380502: 'PatientClinicalTrialParticipSeq',\n  x00384000: 'VisitComments',\n  x003a0004: 'WaveformOriginality',\n  x003a0005: 'NumberOfWaveformChannels',\n  x003a0010: 'NumberOfWaveformSamples',\n  x003a001a: 'SamplingFrequency',\n  x003a0020: 'MultiplexGroupLabel',\n  x003a0200: 'ChannelDefinitionSequence',\n  x003a0202: 'WaveformChannelNumber',\n  x003a0203: 'ChannelLabel',\n  x003a0205: 'ChannelStatus',\n  x003a0208: 'ChannelSourceSequence',\n  x003a0209: 'ChannelSourceModifiersSequence',\n  x003a020a: 'SourceWaveformSequence',\n  x003a020c: 'ChannelDerivationDescription',\n  x003a0210: 'ChannelSensitivity',\n  x003a0211: 'ChannelSensitivityUnitsSequence',\n  x003a0212: 'ChannelSensitivityCorrectionFactor',\n  x003a0213: 'ChannelBaseline',\n  x003a0214: 'ChannelTimeSkew',\n  x003a0215: 'ChannelSampleSkew',\n  x003a0218: 'ChannelOffset',\n  x003a021a: 'WaveformBitsStored',\n  x003a0220: 'FilterLowFrequency',\n  x003a0221: 'FilterHighFrequency',\n  x003a0222: 'NotchFilterFrequency',\n  x003a0223: 'NotchFilterBandwidth',\n  x003a0230: 'WaveformDataDisplayScale',\n  x003a0231: 'WaveformDisplayBkgCIELabValue',\n  x003a0240: 'WaveformPresentationGroupSequence',\n  x003a0241: 'PresentationGroupNumber',\n  x003a0242: 'ChannelDisplaySequence',\n  x003a0244: 'ChannelRecommendDisplayCIELabValue',\n  x003a0245: 'ChannelPosition',\n  x003a0246: 'DisplayShadingFlag',\n  x003a0247: 'FractionalChannelDisplayScale',\n  x003a0248: 'AbsoluteChannelDisplayScale',\n  x003a0300: 'MultiplexAudioChannelsDescrCodeSeq',\n  x003a0301: 'ChannelIdentificationCode',\n  x003a0302: 'ChannelMode',\n  x00400001: 'ScheduledStationAETitle',\n  x00400002: 'ScheduledProcedureStepStartDate',\n  x00400003: 'ScheduledProcedureStepStartTime',\n  x00400004: 'ScheduledProcedureStepEndDate',\n  x00400005: 'ScheduledProcedureStepEndTime',\n  x00400006: 'ScheduledPerformingPhysiciansName',\n  x00400007: 'ScheduledProcedureStepDescription',\n  x00400008: 'ScheduledProtocolCodeSequence',\n  x00400009: 'ScheduledProcedureStepID',\n  x0040000a: 'StageCodeSequence',\n  x0040000b: 'ScheduledPerformingPhysicianIDSeq',\n  x00400010: 'ScheduledStationName',\n  x00400011: 'ScheduledProcedureStepLocation',\n  x00400012: 'PreMedication',\n  x00400020: 'ScheduledProcedureStepStatus',\n  x00400031: 'LocalNamespaceEntityID',\n  x00400032: 'UniversalEntityID',\n  x00400033: 'UniversalEntityIDType',\n  x00400035: 'IdentifierTypeCode',\n  x00400036: 'AssigningFacilitySequence',\n  x00400100: 'ScheduledProcedureStepSequence',\n  x00400220: 'ReferencedNonImageCompositeSOPSeq',\n  x00400241: 'PerformedStationAETitle',\n  x00400242: 'PerformedStationName',\n  x00400243: 'PerformedLocation',\n  x00400244: 'PerformedProcedureStepStartDate',\n  x00400245: 'PerformedProcedureStepStartTime',\n  x00400250: 'PerformedProcedureStepEndDate',\n  x00400251: 'PerformedProcedureStepEndTime',\n  x00400252: 'PerformedProcedureStepStatus',\n  x00400253: 'PerformedProcedureStepID',\n  x00400254: 'PerformedProcedureStepDescription',\n  x00400255: 'PerformedProcedureTypeDescription',\n  x00400260: 'PerformedProtocolCodeSequence',\n  x00400261: 'PerformedProtocolType',\n  x00400270: 'ScheduledStepAttributesSequence',\n  x00400275: 'RequestAttributesSequence',\n  x00400280: 'CommentsOnPerformedProcedureStep',\n  x00400281: 'ProcStepDiscontinueReasonCodeSeq',\n  x00400293: 'QuantitySequence',\n  x00400294: 'Quantity',\n  x00400295: 'MeasuringUnitsSequence',\n  x00400296: 'BillingItemSequence',\n  x00400300: 'TotalTimeOfFluoroscopy',\n  x00400301: 'TotalNumberOfExposures',\n  x00400302: 'EntranceDose',\n  x00400303: 'ExposedArea',\n  x00400306: 'DistanceSourceToEntrance',\n  x00400307: 'DistanceSourceToSupport',\n  x0040030e: 'ExposureDoseSequence',\n  x00400310: 'CommentsOnRadiationDose',\n  x00400312: 'XRayOutput',\n  x00400314: 'HalfValueLayer',\n  x00400316: 'OrganDose',\n  x00400318: 'OrganExposed',\n  x00400320: 'BillingProcedureStepSequence',\n  x00400321: 'FilmConsumptionSequence',\n  x00400324: 'BillingSuppliesAndDevicesSequence',\n  x00400330: 'ReferencedProcedureStepSequence',\n  x00400340: 'PerformedSeriesSequence',\n  x00400400: 'CommentsOnScheduledProcedureStep',\n  x00400440: 'ProtocolContextSequence',\n  x00400441: 'ContentItemModifierSequence',\n  x0040050a: 'SpecimenAccessionNumber',\n  x00400512: 'ContainerIdentifier',\n  x0040051a: 'ContainerDescription',\n  x00400550: 'SpecimenSequence',\n  x00400551: 'SpecimenIdentifier',\n  x00400552: 'SpecimenDescriptionSequenceTrial',\n  x00400553: 'SpecimenDescriptionTrial',\n  x00400554: 'SpecimenUID',\n  x00400555: 'AcquisitionContextSequence',\n  x00400556: 'AcquisitionContextDescription',\n  x0040059a: 'SpecimenTypeCodeSequence',\n  x00400600: 'SpecimenShortDescription',\n  x004006fa: 'SlideIdentifier',\n  x0040071a: 'ImageCenterPointCoordinatesSeq',\n  x0040072a: 'XOffsetInSlideCoordinateSystem',\n  x0040073a: 'YOffsetInSlideCoordinateSystem',\n  x0040074a: 'ZOffsetInSlideCoordinateSystem',\n  x004008d8: 'PixelSpacingSequence',\n  x004008da: 'CoordinateSystemAxisCodeSequence',\n  x004008ea: 'MeasurementUnitsCodeSequence',\n  x004009f8: 'VitalStainCodeSequenceTrial',\n  x00401001: 'RequestedProcedureID',\n  x00401002: 'ReasonForRequestedProcedure',\n  x00401003: 'RequestedProcedurePriority',\n  x00401004: 'PatientTransportArrangements',\n  x00401005: 'RequestedProcedureLocation',\n  x00401006: 'PlacerOrderNumber-Procedure',\n  x00401007: 'FillerOrderNumber-Procedure',\n  x00401008: 'ConfidentialityCode',\n  x00401009: 'ReportingPriority',\n  x0040100a: 'ReasonForRequestedProcedureCodeSeq',\n  x00401010: 'NamesOfIntendedRecipientsOfResults',\n  x00401011: 'IntendedRecipientsOfResultsIDSeq',\n  x00401101: 'PersonIdentificationCodeSequence',\n  x00401102: 'PersonAddress',\n  x00401103: 'PersonTelephoneNumbers',\n  x00401400: 'RequestedProcedureComments',\n  x00402001: 'ReasonForImagingServiceRequest',\n  x00402004: 'IssueDateOfImagingServiceRequest',\n  x00402005: 'IssueTimeOfImagingServiceRequest',\n  x00402006: 'PlacerOrderNumberImagingServiceRequestRetired',\n  x00402007: 'FillerOrderNumberImagingServiceRequestRetired',\n  x00402008: 'OrderEnteredBy',\n  x00402009: 'OrderEntererLocation',\n  x00402010: 'OrderCallbackPhoneNumber',\n  x00402016: 'PlacerOrderNum-ImagingServiceReq',\n  x00402017: 'FillerOrderNum-ImagingServiceReq',\n  x00402400: 'ImagingServiceRequestComments',\n  x00403001: 'ConfidentialityOnPatientDataDescr',\n  x00404001: 'GenPurposeScheduledProcStepStatus',\n  x00404002: 'GenPurposePerformedProcStepStatus',\n  x00404003: 'GenPurposeSchedProcStepPriority',\n  x00404004: 'SchedProcessingApplicationsCodeSeq',\n  x00404005: 'SchedProcedureStepStartDateAndTime',\n  x00404006: 'MultipleCopiesFlag',\n  x00404007: 'PerformedProcessingAppsCodeSeq',\n  x00404009: 'HumanPerformerCodeSequence',\n  x00404010: 'SchedProcStepModificationDateTime',\n  x00404011: 'ExpectedCompletionDateAndTime',\n  x00404015: 'ResultingGenPurposePerfProcStepSeq',\n  x00404016: 'RefGenPurposeSchedProcStepSeq',\n  x00404018: 'ScheduledWorkitemCodeSequence',\n  x00404019: 'PerformedWorkitemCodeSequence',\n  x00404020: 'InputAvailabilityFlag',\n  x00404021: 'InputInformationSequence',\n  x00404022: 'RelevantInformationSequence',\n  x00404023: 'RefGenPurSchedProcStepTransUID',\n  x00404025: 'ScheduledStationNameCodeSequence',\n  x00404026: 'ScheduledStationClassCodeSequence',\n  x00404027: 'SchedStationGeographicLocCodeSeq',\n  x00404028: 'PerformedStationNameCodeSequence',\n  x00404029: 'PerformedStationClassCodeSequence',\n  x00404030: 'PerformedStationGeogLocCodeSeq',\n  x00404031: 'RequestedSubsequentWorkItemCodeSeq',\n  x00404032: 'NonDICOMOutputCodeSequence',\n  x00404033: 'OutputInformationSequence',\n  x00404034: 'ScheduledHumanPerformersSequence',\n  x00404035: 'ActualHumanPerformersSequence',\n  x00404036: 'HumanPerformersOrganization',\n  x00404037: 'HumanPerformerName',\n  x00404040: 'RawDataHandling',\n  x00408302: 'EntranceDoseInMilliGy',\n  x00409094: 'RefImageRealWorldValueMappingSeq',\n  x00409096: 'RealWorldValueMappingSequence',\n  x00409098: 'PixelValueMappingCodeSequence',\n  x00409210: 'LUTLabel',\n  x00409211: 'RealWorldValueLastValueMapped',\n  x00409212: 'RealWorldValueLUTData',\n  x00409216: 'RealWorldValueFirstValueMapped',\n  x00409224: 'RealWorldValueIntercept',\n  x00409225: 'RealWorldValueSlope',\n  x0040a010: 'RelationshipType',\n  x0040a027: 'VerifyingOrganization',\n  x0040a030: 'VerificationDateTime',\n  x0040a032: 'ObservationDateTime',\n  x0040a040: 'ValueType',\n  x0040a043: 'ConceptNameCodeSequence',\n  x0040a050: 'ContinuityOfContent',\n  x0040a073: 'VerifyingObserverSequence',\n  x0040a075: 'VerifyingObserverName',\n  x0040a078: 'AuthorObserverSequence',\n  x0040a07a: 'ParticipantSequence',\n  x0040a07c: 'CustodialOrganizationSequence',\n  x0040a080: 'ParticipationType',\n  x0040a082: 'ParticipationDateTime',\n  x0040a084: 'ObserverType',\n  x0040a088: 'VerifyingObserverIdentCodeSequence',\n  x0040a090: 'EquivalentCDADocumentSequence',\n  x0040a0b0: 'ReferencedWaveformChannels',\n  x0040a120: 'DateTime',\n  x0040a121: 'Date',\n  x0040a122: 'Time',\n  x0040a123: 'PersonName',\n  x0040a124: 'UID',\n  x0040a130: 'TemporalRangeType',\n  x0040a132: 'ReferencedSamplePositions',\n  x0040a136: 'ReferencedFrameNumbers',\n  x0040a138: 'ReferencedTimeOffsets',\n  x0040a13a: 'ReferencedDateTime',\n  x0040a160: 'TextValue',\n  x0040a168: 'ConceptCodeSequence',\n  x0040a170: 'PurposeOfReferenceCodeSequence',\n  x0040a180: 'AnnotationGroupNumber',\n  x0040a195: 'ModifierCodeSequence',\n  x0040a300: 'MeasuredValueSequence',\n  x0040a301: 'NumericValueQualifierCodeSequence',\n  x0040a30a: 'NumericValue',\n  x0040a353: 'AddressTrial',\n  x0040a354: 'TelephoneNumberTrial',\n  x0040a360: 'PredecessorDocumentsSequence',\n  x0040a370: 'ReferencedRequestSequence',\n  x0040a372: 'PerformedProcedureCodeSequence',\n  x0040a375: 'CurrentRequestedProcEvidenceSeq',\n  x0040a385: 'PertinentOtherEvidenceSequence',\n  x0040a390: 'HL7StructuredDocumentRefSeq',\n  x0040a491: 'CompletionFlag',\n  x0040a492: 'CompletionFlagDescription',\n  x0040a493: 'VerificationFlag',\n  x0040a494: 'ArchiveRequested',\n  x0040a496: 'PreliminaryFlag',\n  x0040a504: 'ContentTemplateSequence',\n  x0040a525: 'IdenticalDocumentsSequence',\n  x0040a730: 'ContentSequence',\n  x0040b020: 'AnnotationSequence',\n  x0040db00: 'TemplateIdentifier',\n  x0040db06: 'TemplateVersion',\n  x0040db07: 'TemplateLocalVersion',\n  x0040db0b: 'TemplateExtensionFlag',\n  x0040db0c: 'TemplateExtensionOrganizationUID',\n  x0040db0d: 'TemplateExtensionCreatorUID',\n  x0040db73: 'ReferencedContentItemIdentifier',\n  x0040e001: 'HL7InstanceIdentifier',\n  x0040e004: 'HL7DocumentEffectiveTime',\n  x0040e006: 'HL7DocumentTypeCodeSequence',\n  x0040e010: 'RetrieveURI',\n  x0040e011: 'RetrieveLocationUID',\n  x00420010: 'DocumentTitle',\n  x00420011: 'EncapsulatedDocument',\n  x00420012: 'MIMETypeOfEncapsulatedDocument',\n  x00420013: 'SourceInstanceSequence',\n  x00420014: 'ListOfMIMETypes',\n  // x00431001: 'BitmapOfPrescanOptions',\n  // x00431002: 'GradientOffsetInX',\n  // x00431003: 'GradientOffsetInY',\n  // x00431004: 'GradientOffsetInZ',\n  // x00431005: 'ImgIsOriginalOrUnoriginal',\n  // x00431006: 'NumberOfEPIShots',\n  // x00431007: 'ViewsPerSegment',\n  // x00431008: 'RespiratoryRateBpm',\n  // x00431009: 'RespiratoryTriggerPoint',\n  // x0043100a: 'TypeOfReceiverUsed',\n  // x0043100b: 'PeakRateOfChangeOfGradientField',\n  // x0043100c: 'LimitsInUnitsOfPercent',\n  // x0043100d: 'PSDEstimatedLimit',\n  // x0043100e: 'PSDEstimatedLimitInTeslaPerSecond',\n  // x0043100f: 'Saravghead',\n  // x00431010: 'WindowValue',\n  // x00431011: 'TotalInputViews',\n  // x00431012: 'X-RayChain',\n  // x00431013: 'DeconKernelParameters',\n  // x00431014: 'CalibrationParameters',\n  // x00431015: 'TotalOutputViews',\n  // x00431016: 'NumberOfOverranges',\n  // x00431017: 'IBHImageScaleFactors',\n  // x00431018: 'BBHCoefficients',\n  // x00431019: 'NumberOfBBHChainsToBlend',\n  // x0043101a: 'StartingChannelNumber',\n  // x0043101b: 'PpscanParameters',\n  // x0043101c: 'GEImageIntegrity',\n  // x0043101d: 'LevelValue',\n  // x0043101e: 'DeltaStartTime',\n  // x0043101f: 'MaxOverrangesInAView',\n  // x00431020: 'AvgOverrangesAllViews',\n  // x00431021: 'CorrectedAfterGlowTerms',\n  // x00431025: 'ReferenceChannels',\n  // x00431026: 'NoViewsRefChansBlocked',\n  // x00431027: 'ScanPitchRatio',\n  // x00431028: 'UniqueImageIden',\n  // x00431029: 'HistogramTables',\n  // x0043102a: 'UserDefinedData',\n  // x0043102b: 'PrivateScanOptions',\n  // x0043102c: 'EffectiveEchoSpacing',\n  // x0043102d: 'StringSlopField1',\n  // x0043102e: 'StringSlopField2',\n  // x0043102f: 'RawDataType',\n  // x00431030: 'RawDataType',\n  // x00431031: 'RACordOfTargetReconCenter',\n  // x00431032: 'RawDataType',\n  // x00431033: 'NegScanspacing',\n  // x00431034: 'OffsetFrequency',\n  // x00431035: 'UserUsageTag',\n  // x00431036: 'UserFillMapMSW',\n  // x00431037: 'UserFillMapLSW',\n  // x00431038: 'User25-48',\n  // x00431039: 'SlopInt6-9',\n  // x00431040: 'TriggerOnPosition',\n  // x00431041: 'DegreeOfRotation',\n  // x00431042: 'DASTriggerSource',\n  // x00431043: 'DASFpaGain',\n  // x00431044: 'DASOutputSource',\n  // x00431045: 'DASAdInput',\n  // x00431046: 'DASCalMode',\n  // x00431047: 'DASCalFrequency',\n  // x00431048: 'DASRegXm',\n  // x00431049: 'DASAutoZero',\n  // x0043104a: 'StartingChannelOfView',\n  // x0043104b: 'DASXmPattern',\n  // x0043104c: 'TGGCTriggerMode',\n  // x0043104d: 'StartScanToXrayOnDelay',\n  // x0043104e: 'DurationOfXrayOn',\n  // x00431060: 'SlopInt10-17',\n  // x00431061: 'ScannerStudyEntityUID',\n  // x00431062: 'ScannerStudyID',\n  // x0043106f: 'ScannerTableEntry',\n  x00440001: 'ProductPackageIdentifier',\n  x00440002: 'SubstanceAdministrationApproval',\n  x00440003: 'ApprovalStatusFurtherDescription',\n  x00440004: 'ApprovalStatusDateTime',\n  x00440007: 'ProductTypeCodeSequence',\n  x00440008: 'ProductName',\n  x00440009: 'ProductDescription',\n  x0044000a: 'ProductLotIdentifier',\n  x0044000b: 'ProductExpirationDateTime',\n  x00440010: 'SubstanceAdministrationDateTime',\n  x00440011: 'SubstanceAdministrationNotes',\n  x00440012: 'SubstanceAdministrationDeviceID',\n  x00440013: 'ProductParameterSequence',\n  x00440019: 'SubstanceAdminParameterSeq',\n  // x00451001: 'NumberOfMacroRowsInDetector',\n  // x00451002: 'MacroWidthAtISOCenter',\n  // x00451003: 'DASType',\n  // x00451004: 'DASGain',\n  // x00451005: 'DASTemperature',\n  // x00451006: 'TableDirectionInOrOut',\n  // x00451007: 'ZSmoothingFactor',\n  // x00451008: 'ViewWeightingMode',\n  // x00451009: 'SigmaRowNumberWhichRowsWereUsed',\n  // x0045100a: 'MinimumDasValueFoundInTheScanData',\n  // x0045100b: 'MaximumOffsetShiftValueUsed',\n  // x0045100c: 'NumberOfViewsShifted',\n  // x0045100d: 'ZTrackingFlag',\n  // x0045100e: 'MeanZError',\n  // x0045100f: 'ZTrackingMaximumError',\n  // x00451010: 'StartingViewForRow2a',\n  // x00451011: 'NumberOfViewsInRow2a',\n  // x00451012: 'StartingViewForRow1a',\n  // x00451013: 'SigmaMode',\n  // x00451014: 'NumberOfViewsInRow1a',\n  // x00451015: 'StartingViewForRow2b',\n  // x00451016: 'NumberOfViewsInRow2b',\n  // x00451017: 'StartingViewForRow1b',\n  // x00451018: 'NumberOfViewsInRow1b',\n  // x00451019: 'AirFilterCalibrationDate',\n  // x0045101a: 'AirFilterCalibrationTime',\n  // x0045101b: 'PhantomCalibrationDate',\n  // x0045101c: 'PhantomCalibrationTime',\n  // x0045101d: 'ZSlopeCalibrationDate',\n  // x0045101e: 'ZSlopeCalibrationTime',\n  // x0045101f: 'CrosstalkCalibrationDate',\n  // x00451020: 'CrosstalkCalibrationTime',\n  // x00451021: 'IterboneOptionFlag',\n  // x00451022: 'PeristalticFlagOption',\n  x00460012: 'LensDescription',\n  x00460014: 'RightLensSequence',\n  x00460015: 'LeftLensSequence',\n  x00460018: 'CylinderSequence',\n  x00460028: 'PrismSequence',\n  x00460030: 'HorizontalPrismPower',\n  x00460032: 'HorizontalPrismBase',\n  x00460034: 'VerticalPrismPower',\n  x00460036: 'VerticalPrismBase',\n  x00460038: 'LensSegmentType',\n  x00460040: 'OpticalTransmittance',\n  x00460042: 'ChannelWidth',\n  x00460044: 'PupilSize',\n  x00460046: 'CornealSize',\n  x00460060: 'DistancePupillaryDistance',\n  x00460062: 'NearPupillaryDistance',\n  x00460064: 'OtherPupillaryDistance',\n  x00460075: 'RadiusOfCurvature',\n  x00460076: 'KeratometricPower',\n  x00460077: 'KeratometricAxis',\n  x00460092: 'BackgroundColor',\n  x00460094: 'Optotype',\n  x00460095: 'OptotypePresentation',\n  x00460100: 'AddNearSequence',\n  x00460101: 'AddIntermediateSequence',\n  x00460102: 'AddOtherSequence',\n  x00460104: 'AddPower',\n  x00460106: 'ViewingDistance',\n  x00460125: 'ViewingDistanceType',\n  x00460135: 'VisualAcuityModifiers',\n  x00460137: 'DecimalVisualAcuity',\n  x00460139: 'OptotypeDetailedDefinition',\n  x00460146: 'SpherePower',\n  x00460147: 'CylinderPower',\n  x00500004: 'CalibrationImage',\n  x00500010: 'DeviceSequence',\n  x00500014: 'DeviceLength',\n  x00500015: 'ContainerComponentWidth',\n  x00500016: 'DeviceDiameter',\n  x00500017: 'DeviceDiameterUnits',\n  x00500018: 'DeviceVolume',\n  x00500019: 'InterMarkerDistance',\n  x0050001b: 'ContainerComponentID',\n  x00500020: 'DeviceDescription',\n  x00540010: 'EnergyWindowVector',\n  x00540011: 'NumberOfEnergyWindows',\n  x00540012: 'EnergyWindowInformationSequence',\n  x00540013: 'EnergyWindowRangeSequence',\n  x00540014: 'EnergyWindowLowerLimit',\n  x00540015: 'EnergyWindowUpperLimit',\n  x00540016: 'RadiopharmaceuticalInformationSeq',\n  x00540017: 'ResidualSyringeCounts',\n  x00540018: 'EnergyWindowName',\n  x00540020: 'DetectorVector',\n  x00540021: 'NumberOfDetectors',\n  x00540022: 'DetectorInformationSequence',\n  x00540030: 'PhaseVector',\n  x00540031: 'NumberOfPhases',\n  x00540032: 'PhaseInformationSequence',\n  x00540033: 'NumberOfFramesInPhase',\n  x00540036: 'PhaseDelay',\n  x00540038: 'PauseBetweenFrames',\n  x00540039: 'PhaseDescription',\n  x00540050: 'RotationVector',\n  x00540051: 'NumberOfRotations',\n  x00540052: 'RotationInformationSequence',\n  x00540053: 'NumberOfFramesInRotation',\n  x00540060: 'RRIntervalVector',\n  x00540061: 'NumberOfRRIntervals',\n  x00540062: 'GatedInformationSequence',\n  x00540063: 'DataInformationSequence',\n  x00540070: 'TimeSlotVector',\n  x00540071: 'NumberOfTimeSlots',\n  x00540072: 'TimeSlotInformationSequence',\n  x00540073: 'TimeSlotTime',\n  x00540080: 'SliceVector',\n  x00540081: 'NumberOfSlices',\n  x00540090: 'AngularViewVector',\n  x00540100: 'TimeSliceVector',\n  x00540101: 'NumberOfTimeSlices',\n  x00540200: 'StartAngle',\n  x00540202: 'TypeOfDetectorMotion',\n  x00540210: 'TriggerVector',\n  x00540211: 'NumberOfTriggersInPhase',\n  x00540220: 'ViewCodeSequence',\n  x00540222: 'ViewModifierCodeSequence',\n  x00540300: 'RadionuclideCodeSequence',\n  x00540302: 'AdministrationRouteCodeSequence',\n  x00540304: 'RadiopharmaceuticalCodeSequence',\n  x00540306: 'CalibrationDataSequence',\n  x00540308: 'EnergyWindowNumber',\n  x00540400: 'ImageID',\n  x00540410: 'PatientOrientationCodeSequence',\n  x00540412: 'PatientOrientationModifierCodeSeq',\n  x00540414: 'PatientGantryRelationshipCodeSeq',\n  x00540500: 'SliceProgressionDirection',\n  x00541000: 'SeriesType',\n  x00541001: 'Units',\n  x00541002: 'CountsSource',\n  x00541004: 'ReprojectionMethod',\n  x00541100: 'RandomsCorrectionMethod',\n  x00541101: 'AttenuationCorrectionMethod',\n  x00541102: 'DecayCorrection',\n  x00541103: 'ReconstructionMethod',\n  x00541104: 'DetectorLinesOfResponseUsed',\n  x00541105: 'ScatterCorrectionMethod',\n  x00541200: 'AxialAcceptance',\n  x00541201: 'AxialMash',\n  x00541202: 'TransverseMash',\n  x00541203: 'DetectorElementSize',\n  x00541210: 'CoincidenceWindowWidth',\n  x00541220: 'SecondaryCountsType',\n  x00541300: 'FrameReferenceTime',\n  x00541310: 'PrimaryCountsAccumulated',\n  x00541311: 'SecondaryCountsAccumulated',\n  x00541320: 'SliceSensitivityFactor',\n  x00541321: 'DecayFactor',\n  x00541322: 'DoseCalibrationFactor',\n  x00541323: 'ScatterFractionFactor',\n  x00541324: 'DeadTimeFactor',\n  x00541330: 'ImageIndex',\n  x00541400: 'CountsIncluded',\n  x00541401: 'DeadTimeCorrectionFlag',\n  x00603000: 'HistogramSequence',\n  x00603002: 'HistogramNumberOfBins',\n  x00603004: 'HistogramFirstBinValue',\n  x00603006: 'HistogramLastBinValue',\n  x00603008: 'HistogramBinWidth',\n  x00603010: 'HistogramExplanation',\n  x00603020: 'HistogramData',\n  x00620001: 'SegmentationType',\n  x00620002: 'SegmentSequence',\n  x00620003: 'SegmentedPropertyCategoryCodeSeq',\n  x00620004: 'SegmentNumber',\n  x00620005: 'SegmentLabel',\n  x00620006: 'SegmentDescription',\n  x00620008: 'SegmentAlgorithmType',\n  x00620009: 'SegmentAlgorithmName',\n  x0062000a: 'SegmentIdentificationSequence',\n  x0062000b: 'ReferencedSegmentNumber',\n  x0062000c: 'RecommendedDisplayGrayscaleValue',\n  x0062000d: 'RecommendedDisplayCIELabValue',\n  x0062000e: 'MaximumFractionalValue',\n  x0062000f: 'SegmentedPropertyTypeCodeSequence',\n  x00620010: 'SegmentationFractionalType',\n  x00640002: 'DeformableRegistrationSequence',\n  x00640003: 'SourceFrameOfReferenceUID',\n  x00640005: 'DeformableRegistrationGridSequence',\n  x00640007: 'GridDimensions',\n  x00640008: 'GridResolution',\n  x00640009: 'VectorGridData',\n  x0064000f: 'PreDeformationMatrixRegistSeq',\n  x00640010: 'PostDeformationMatrixRegistSeq',\n  x00660001: 'NumberOfSurfaces',\n  x00660002: 'SurfaceSequence',\n  x00660003: 'SurfaceNumber',\n  x00660004: 'SurfaceComments',\n  x00660009: 'SurfaceProcessing',\n  x0066000a: 'SurfaceProcessingRatio',\n  x0066000e: 'FiniteVolume',\n  x00660010: 'Manifold',\n  x00660011: 'SurfacePointsSequence',\n  x00660015: 'NumberOfSurfacePoints',\n  x00660016: 'PointCoordinatesData',\n  x00660017: 'PointPositionAccuracy',\n  x00660018: 'MeanPointDistance',\n  x00660019: 'MaximumPointDistance',\n  x0066001b: 'AxisOfRotation',\n  x0066001c: 'CenterOfRotation',\n  x0066001e: 'NumberOfVectors',\n  x0066001f: 'VectorDimensionality',\n  x00660020: 'VectorAccuracy',\n  x00660021: 'VectorCoordinateData',\n  x00660023: 'TrianglePointIndexList',\n  x00660024: 'EdgePointIndexList',\n  x00660025: 'VertexPointIndexList',\n  x00660026: 'TriangleStripSequence',\n  x00660027: 'TriangleFanSequence',\n  x00660028: 'LineSequence',\n  x00660029: 'PrimitivePointIndexList',\n  x0066002a: 'SurfaceCount',\n  x0066002f: 'AlgorithmFamilyCodeSequ',\n  x00660031: 'AlgorithmVersion',\n  x00660032: 'AlgorithmParameters',\n  x00660034: 'FacetSequence',\n  x00660036: 'AlgorithmName',\n  x00700001: 'GraphicAnnotationSequence',\n  x00700002: 'GraphicLayer',\n  x00700003: 'BoundingBoxAnnotationUnits',\n  x00700004: 'AnchorPointAnnotationUnits',\n  x00700005: 'GraphicAnnotationUnits',\n  x00700006: 'UnformattedTextValue',\n  x00700008: 'TextObjectSequence',\n  x00700009: 'GraphicObjectSequence',\n  x00700010: 'BoundingBoxTopLeftHandCorner',\n  x00700011: 'BoundingBoxBottomRightHandCorner',\n  x00700012: 'BoundingBoxTextHorizJustification',\n  x00700014: 'AnchorPoint',\n  x00700015: 'AnchorPointVisibility',\n  x00700020: 'GraphicDimensions',\n  x00700021: 'NumberOfGraphicPoints',\n  x00700022: 'GraphicData',\n  x00700023: 'GraphicType',\n  x00700024: 'GraphicFilled',\n  x00700040: 'ImageRotationRetired',\n  x00700041: 'ImageHorizontalFlip',\n  x00700042: 'ImageRotation',\n  x00700050: 'DisplayedAreaTopLeftTrial',\n  x00700051: 'DisplayedAreaBottomRightTrial',\n  x00700052: 'DisplayedAreaTopLeft',\n  x00700053: 'DisplayedAreaBottomRight',\n  x0070005a: 'DisplayedAreaSelectionSequence',\n  x00700060: 'GraphicLayerSequence',\n  x00700062: 'GraphicLayerOrder',\n  x00700066: 'GraphicLayerRecDisplayGraysclValue',\n  x00700067: 'GraphicLayerRecDisplayRGBValue',\n  x00700068: 'GraphicLayerDescription',\n  x00700080: 'ContentLabel',\n  x00700081: 'ContentDescription',\n  x00700082: 'PresentationCreationDate',\n  x00700083: 'PresentationCreationTime',\n  x00700084: 'ContentCreatorName',\n  x00700086: 'ContentCreatorIDCodeSequence',\n  x00700100: 'PresentationSizeMode',\n  x00700101: 'PresentationPixelSpacing',\n  x00700102: 'PresentationPixelAspectRatio',\n  x00700103: 'PresentationPixelMagRatio',\n  x00700306: 'ShapeType',\n  x00700308: 'RegistrationSequence',\n  x00700309: 'MatrixRegistrationSequence',\n  x0070030a: 'MatrixSequence',\n  x0070030c: 'FrameOfRefTransformationMatrixType',\n  x0070030d: 'RegistrationTypeCodeSequence',\n  x0070030f: 'FiducialDescription',\n  x00700310: 'FiducialIdentifier',\n  x00700311: 'FiducialIdentifierCodeSequence',\n  x00700312: 'ContourUncertaintyRadius',\n  x00700314: 'UsedFiducialsSequence',\n  x00700318: 'GraphicCoordinatesDataSequence',\n  x0070031a: 'FiducialUID',\n  x0070031c: 'FiducialSetSequence',\n  x0070031e: 'FiducialSequence',\n  x00700401: 'GraphicLayerRecomDisplayCIELabVal',\n  x00700402: 'BlendingSequence',\n  x00700403: 'RelativeOpacity',\n  x00700404: 'ReferencedSpatialRegistrationSeq',\n  x00700405: 'BlendingPosition',\n  x00720002: 'HangingProtocolName',\n  x00720004: 'HangingProtocolDescription',\n  x00720006: 'HangingProtocolLevel',\n  x00720008: 'HangingProtocolCreator',\n  x0072000a: 'HangingProtocolCreationDateTime',\n  x0072000c: 'HangingProtocolDefinitionSequence',\n  x0072000e: 'HangingProtocolUserIDCodeSequence',\n  x00720010: 'HangingProtocolUserGroupName',\n  x00720012: 'SourceHangingProtocolSequence',\n  x00720014: 'NumberOfPriorsReferenced',\n  x00720020: 'ImageSetsSequence',\n  x00720022: 'ImageSetSelectorSequence',\n  x00720024: 'ImageSetSelectorUsageFlag',\n  x00720026: 'SelectorAttribute',\n  x00720028: 'SelectorValueNumber',\n  x00720030: 'TimeBasedImageSetsSequence',\n  x00720032: 'ImageSetNumber',\n  x00720034: 'ImageSetSelectorCategory',\n  x00720038: 'RelativeTime',\n  x0072003a: 'RelativeTimeUnits',\n  x0072003c: 'AbstractPriorValue',\n  x0072003e: 'AbstractPriorCodeSequence',\n  x00720040: 'ImageSetLabel',\n  x00720050: 'SelectorAttributeVR',\n  x00720052: 'SelectorSequencePointer',\n  x00720054: 'SelectorSeqPointerPrivateCreator',\n  x00720056: 'SelectorAttributePrivateCreator',\n  x00720060: 'SelectorATValue',\n  x00720062: 'SelectorCSValue',\n  x00720064: 'SelectorISValue',\n  x00720066: 'SelectorLOValue',\n  x00720068: 'SelectorLTValue',\n  x0072006a: 'SelectorPNValue',\n  x0072006c: 'SelectorSHValue',\n  x0072006e: 'SelectorSTValue',\n  x00720070: 'SelectorUTValue',\n  x00720072: 'SelectorDSValue',\n  x00720074: 'SelectorFDValue',\n  x00720076: 'SelectorFLValue',\n  x00720078: 'SelectorULValue',\n  x0072007a: 'SelectorUSValue',\n  x0072007c: 'SelectorSLValue',\n  x0072007e: 'SelectorSSValue',\n  x00720080: 'SelectorCodeSequenceValue',\n  x00720100: 'NumberOfScreens',\n  x00720102: 'NominalScreenDefinitionSequence',\n  x00720104: 'NumberOfVerticalPixels',\n  x00720106: 'NumberOfHorizontalPixels',\n  x00720108: 'DisplayEnvironmentSpatialPosition',\n  x0072010a: 'ScreenMinimumGrayscaleBitDepth',\n  x0072010c: 'ScreenMinimumColorBitDepth',\n  x0072010e: 'ApplicationMaximumRepaintTime',\n  x00720200: 'DisplaySetsSequence',\n  x00720202: 'DisplaySetNumber',\n  x00720203: 'DisplaySetLabel',\n  x00720204: 'DisplaySetPresentationGroup',\n  x00720206: 'DisplaySetPresentationGroupDescr',\n  x00720208: 'PartialDataDisplayHandling',\n  x00720210: 'SynchronizedScrollingSequence',\n  x00720212: 'DisplaySetScrollingGroup',\n  x00720214: 'NavigationIndicatorSequence',\n  x00720216: 'NavigationDisplaySet',\n  x00720218: 'ReferenceDisplaySets',\n  x00720300: 'ImageBoxesSequence',\n  x00720302: 'ImageBoxNumber',\n  x00720304: 'ImageBoxLayoutType',\n  x00720306: 'ImageBoxTileHorizontalDimension',\n  x00720308: 'ImageBoxTileVerticalDimension',\n  x00720310: 'ImageBoxScrollDirection',\n  x00720312: 'ImageBoxSmallScrollType',\n  x00720314: 'ImageBoxSmallScrollAmount',\n  x00720316: 'ImageBoxLargeScrollType',\n  x00720318: 'ImageBoxLargeScrollAmount',\n  x00720320: 'ImageBoxOverlapPriority',\n  x00720330: 'CineRelativeToRealTime',\n  x00720400: 'FilterOperationsSequence',\n  x00720402: 'FilterByCategory',\n  x00720404: 'FilterByAttributePresence',\n  x00720406: 'FilterByOperator',\n  x00720432: 'SynchronizedImageBoxList',\n  x00720434: 'TypeOfSynchronization',\n  x00720500: 'BlendingOperationType',\n  x00720510: 'ReformattingOperationType',\n  x00720512: 'ReformattingThickness',\n  x00720514: 'ReformattingInterval',\n  x00720516: 'ReformattingOpInitialViewDir',\n  x00720520: 'RenderingType3D',\n  x00720600: 'SortingOperationsSequence',\n  x00720602: 'SortByCategory',\n  x00720604: 'SortingDirection',\n  x00720700: 'DisplaySetPatientOrientation',\n  x00720702: 'VOIType',\n  x00720704: 'PseudoColorType',\n  x00720706: 'ShowGrayscaleInverted',\n  x00720710: 'ShowImageTrueSizeFlag',\n  x00720712: 'ShowGraphicAnnotationFlag',\n  x00720714: 'ShowPatientDemographicsFlag',\n  x00720716: 'ShowAcquisitionTechniquesFlag',\n  x00720717: 'DisplaySetHorizontalJustification',\n  x00720718: 'DisplaySetVerticalJustification',\n  x00741000: 'UnifiedProcedureStepState',\n  x00741002: 'UPSProgressInformationSequence',\n  x00741004: 'UnifiedProcedureStepProgress',\n  x00741006: 'UnifiedProcedureStepProgressDescr',\n  x00741008: 'UnifiedProcedureStepComURISeq',\n  x0074100a: 'ContactURI',\n  x0074100c: 'ContactDisplayName',\n  x00741020: 'BeamTaskSequence',\n  x00741022: 'BeamTaskType',\n  x00741024: 'BeamOrderIndex',\n  x00741030: 'DeliveryVerificationImageSequence',\n  x00741032: 'VerificationImageTiming',\n  x00741034: 'DoubleExposureFlag',\n  x00741036: 'DoubleExposureOrdering',\n  x00741038: 'DoubleExposureMeterset',\n  x0074103a: 'DoubleExposureFieldDelta',\n  x00741040: 'RelatedReferenceRTImageSequence',\n  x00741042: 'GeneralMachineVerificationSequence',\n  x00741044: 'ConventionalMachineVerificationSeq',\n  x00741046: 'IonMachineVerificationSequence',\n  x00741048: 'FailedAttributesSequence',\n  x0074104a: 'OverriddenAttributesSequence',\n  x0074104c: 'ConventionalControlPointVerifySeq',\n  x0074104e: 'IonControlPointVerificationSeq',\n  x00741050: 'AttributeOccurrenceSequence',\n  x00741052: 'AttributeOccurrencePointer',\n  x00741054: 'AttributeItemSelector',\n  x00741056: 'AttributeOccurrencePrivateCreator',\n  x00741200: 'ScheduledProcedureStepPriority',\n  x00741202: 'StudyListLabel',\n  x00741204: 'ProcedureStepLabel',\n  x00741210: 'ScheduledProcessingParametersSeq',\n  x00741212: 'PerformedProcessingParametersSeq',\n  x00741216: 'UPSPerformedProcedureSequence',\n  x00741220: 'RelatedProcedureStepSequence',\n  x00741222: 'ProcedureStepRelationshipType',\n  x00741230: 'DeletionLock',\n  x00741234: 'ReceivingAE',\n  x00741236: 'RequestingAE',\n  x00741238: 'ReasonForCancellation',\n  x00741242: 'SCPStatus',\n  x00741244: 'SubscriptionListStatus',\n  x00741246: 'UPSListStatus',\n  x00880130: 'StorageMediaFileSetID',\n  x00880140: 'StorageMediaFileSetUID',\n  x00880200: 'IconImageSequence',\n  x00880904: 'TopicTitle',\n  x00880906: 'TopicSubject',\n  x00880910: 'TopicAuthor',\n  x00880912: 'TopicKeywords',\n  x01000410: 'SOPInstanceStatus',\n  x01000420: 'SOPAuthorizationDateAndTime',\n  x01000424: 'SOPAuthorizationComment',\n  x01000426: 'AuthorizationEquipmentCertNumber',\n  x04000005: 'MACIDNumber',\n  x04000010: 'MACCalculationTransferSyntaxUID',\n  x04000015: 'MACAlgorithm',\n  x04000020: 'DataElementsSigned',\n  x04000100: 'DigitalSignatureUID',\n  x04000105: 'DigitalSignatureDateTime',\n  x04000110: 'CertificateType',\n  x04000115: 'CertificateOfSigner',\n  x04000120: 'Signature',\n  x04000305: 'CertifiedTimestampType',\n  x04000310: 'CertifiedTimestamp',\n  x04000401: 'DigitalSignaturePurposeCodeSeq',\n  x04000402: 'ReferencedDigitalSignatureSeq',\n  x04000403: 'ReferencedSOPInstanceMACSeq',\n  x04000404: 'MAC',\n  x04000500: 'EncryptedAttributesSequence',\n  x04000510: 'EncryptedContentTransferSyntaxUID',\n  x04000520: 'EncryptedContent',\n  x04000550: 'ModifiedAttributesSequence',\n  x04000561: 'OriginalAttributesSequence',\n  x04000562: 'AttributeModificationDateTime',\n  x04000563: 'ModifyingSystem',\n  x04000564: 'SourceOfPreviousValues',\n  x04000565: 'ReasonForTheAttributeModification',\n  x1000xxx0: 'EscapeTriplet',\n  x1000xxx1: 'RunLengthTriplet',\n  x1000xxx2: 'HuffmanTableSize',\n  x1000xxx3: 'HuffmanTableTriplet',\n  x1000xxx4: 'ShiftTableSize',\n  x1000xxx5: 'ShiftTableTriplet',\n  x1010xxxx: 'ZonalMap',\n  x20000010: 'NumberOfCopies',\n  x2000001e: 'PrinterConfigurationSequence',\n  x20000020: 'PrintPriority',\n  x20000030: 'MediumType',\n  x20000040: 'FilmDestination',\n  x20000050: 'FilmSessionLabel',\n  x20000060: 'MemoryAllocation',\n  x20000061: 'MaximumMemoryAllocation',\n  x20000062: 'ColorImagePrintingFlag',\n  x20000063: 'CollationFlag',\n  x20000065: 'AnnotationFlag',\n  x20000067: 'ImageOverlayFlag',\n  x20000069: 'PresentationLUTFlag',\n  x2000006a: 'ImageBoxPresentationLUTFlag',\n  x200000a0: 'MemoryBitDepth',\n  x200000a1: 'PrintingBitDepth',\n  x200000a2: 'MediaInstalledSequence',\n  x200000a4: 'OtherMediaAvailableSequence',\n  x200000a8: 'SupportedImageDisplayFormatSeq',\n  x20000500: 'ReferencedFilmBoxSequence',\n  x20000510: 'ReferencedStoredPrintSequence',\n  x20100010: 'ImageDisplayFormat',\n  x20100030: 'AnnotationDisplayFormatID',\n  x20100040: 'FilmOrientation',\n  x20100050: 'FilmSizeID',\n  x20100052: 'PrinterResolutionID',\n  x20100054: 'DefaultPrinterResolutionID',\n  x20100060: 'MagnificationType',\n  x20100080: 'SmoothingType',\n  x201000a6: 'DefaultMagnificationType',\n  x201000a7: 'OtherMagnificationTypesAvailable',\n  x201000a8: 'DefaultSmoothingType',\n  x201000a9: 'OtherSmoothingTypesAvailable',\n  x20100100: 'BorderDensity',\n  x20100110: 'EmptyImageDensity',\n  x20100120: 'MinDensity',\n  x20100130: 'MaxDensity',\n  x20100140: 'Trim',\n  x20100150: 'ConfigurationInformation',\n  x20100152: 'ConfigurationInformationDescr',\n  x20100154: 'MaximumCollatedFilms',\n  x2010015e: 'Illumination',\n  x20100160: 'ReflectedAmbientLight',\n  x20100376: 'PrinterPixelSpacing',\n  x20100500: 'ReferencedFilmSessionSequence',\n  x20100510: 'ReferencedImageBoxSequence',\n  x20100520: 'ReferencedBasicAnnotationBoxSeq',\n  x20200010: 'ImageBoxPosition',\n  x20200020: 'Polarity',\n  x20200030: 'RequestedImageSize',\n  x20200040: 'RequestedDecimate-CropBehavior',\n  x20200050: 'RequestedResolutionID',\n  x202000a0: 'RequestedImageSizeFlag',\n  x202000a2: 'DecimateCropResult',\n  x20200110: 'BasicGrayscaleImageSequence',\n  x20200111: 'BasicColorImageSequence',\n  x20200130: 'ReferencedImageOverlayBoxSequence',\n  x20200140: 'ReferencedVOILUTBoxSequence',\n  x20300010: 'AnnotationPosition',\n  x20300020: 'TextString',\n  x20400010: 'ReferencedOverlayPlaneSequence',\n  x20400011: 'ReferencedOverlayPlaneGroups',\n  x20400020: 'OverlayPixelDataSequence',\n  x20400060: 'OverlayMagnificationType',\n  x20400070: 'OverlaySmoothingType',\n  x20400072: 'OverlayOrImageMagnification',\n  x20400074: 'MagnifyToNumberOfColumns',\n  x20400080: 'OverlayForegroundDensity',\n  x20400082: 'OverlayBackgroundDensity',\n  x20400090: 'OverlayMode',\n  x20400100: 'ThresholdDensity',\n  x20400500: 'ReferencedImageBoxSequenceRetired',\n  x20500010: 'PresentationLUTSequence',\n  x20500020: 'PresentationLUTShape',\n  x20500500: 'ReferencedPresentationLUTSequence',\n  x21000010: 'PrintJobID',\n  x21000020: 'ExecutionStatus',\n  x21000030: 'ExecutionStatusInfo',\n  x21000040: 'CreationDate',\n  x21000050: 'CreationTime',\n  x21000070: 'Originator',\n  x21000140: 'DestinationAE',\n  x21000160: 'OwnerID',\n  x21000170: 'NumberOfFilms',\n  x21000500: 'ReferencedPrintJobSequencePullStoredPrint',\n  x21100010: 'PrinterStatus',\n  x21100020: 'PrinterStatusInfo',\n  x21100030: 'PrinterName',\n  x21100099: 'PrintQueueID',\n  x21200010: 'QueueStatus',\n  x21200050: 'PrintJobDescriptionSequence',\n  x21200070: 'ReferencedPrintJobSequence',\n  x21300010: 'PrintManagementCapabilitiesSeq',\n  x21300015: 'PrinterCharacteristicsSequence',\n  x21300030: 'FilmBoxContentSequence',\n  x21300040: 'ImageBoxContentSequence',\n  x21300050: 'AnnotationContentSequence',\n  x21300060: 'ImageOverlayBoxContentSequence',\n  x21300080: 'PresentationLUTContentSequence',\n  x213000a0: 'ProposedStudySequence',\n  x213000c0: 'OriginalImageSequence',\n  x22000001: 'LabelFromInfoExtractedFromInstance',\n  x22000002: 'LabelText',\n  x22000003: 'LabelStyleSelection',\n  x22000004: 'MediaDisposition',\n  x22000005: 'BarcodeValue',\n  x22000006: 'BarcodeSymbology',\n  x22000007: 'AllowMediaSplitting',\n  x22000008: 'IncludeNonDICOMObjects',\n  x22000009: 'IncludeDisplayApplication',\n  x2200000a: 'SaveCompInstancesAfterMediaCreate',\n  x2200000b: 'TotalNumberMediaPiecesCreated',\n  x2200000c: 'RequestedMediaApplicationProfile',\n  x2200000d: 'ReferencedStorageMediaSequence',\n  x2200000e: 'FailureAttributes',\n  x2200000f: 'AllowLossyCompression',\n  x22000020: 'RequestPriority',\n  x30020002: 'RTImageLabel',\n  x30020003: 'RTImageName',\n  x30020004: 'RTImageDescription',\n  x3002000a: 'ReportedValuesOrigin',\n  x3002000c: 'RTImagePlane',\n  x3002000d: 'XRayImageReceptorTranslation',\n  x3002000e: 'XRayImageReceptorAngle',\n  x30020010: 'RTImageOrientation',\n  x30020011: 'ImagePlanePixelSpacing',\n  x30020012: 'RTImagePosition',\n  x30020020: 'RadiationMachineName',\n  x30020022: 'RadiationMachineSAD',\n  x30020024: 'RadiationMachineSSD',\n  x30020026: 'RTImageSID',\n  x30020028: 'SourceToReferenceObjectDistance',\n  x30020029: 'FractionNumber',\n  x30020030: 'ExposureSequence',\n  x30020032: 'MetersetExposure',\n  x30020034: 'DiaphragmPosition',\n  x30020040: 'FluenceMapSequence',\n  x30020041: 'FluenceDataSource',\n  x30020042: 'FluenceDataScale',\n  x30020051: 'FluenceMode',\n  x30020052: 'FluenceModeID',\n  x30040001: 'DVHType',\n  x30040002: 'DoseUnits',\n  x30040004: 'DoseType',\n  x30040006: 'DoseComment',\n  x30040008: 'NormalizationPoint',\n  x3004000a: 'DoseSummationType',\n  x3004000c: 'GridFrameOffsetVector',\n  x3004000e: 'DoseGridScaling',\n  x30040010: 'RTDoseROISequence',\n  x30040012: 'DoseValue',\n  x30040014: 'TissueHeterogeneityCorrection',\n  x30040040: 'DVHNormalizationPoint',\n  x30040042: 'DVHNormalizationDoseValue',\n  x30040050: 'DVHSequence',\n  x30040052: 'DVHDoseScaling',\n  x30040054: 'DVHVolumeUnits',\n  x30040056: 'DVHNumberOfBins',\n  x30040058: 'DVHData',\n  x30040060: 'DVHReferencedROISequence',\n  x30040062: 'DVHROIContributionType',\n  x30040070: 'DVHMinimumDose',\n  x30040072: 'DVHMaximumDose',\n  x30040074: 'DVHMeanDose',\n  x30060002: 'StructureSetLabel',\n  x30060004: 'StructureSetName',\n  x30060006: 'StructureSetDescription',\n  x30060008: 'StructureSetDate',\n  x30060009: 'StructureSetTime',\n  x30060010: 'ReferencedFrameOfReferenceSequence',\n  x30060012: 'RTReferencedStudySequence',\n  x30060014: 'RTReferencedSeriesSequence',\n  x30060016: 'ContourImageSequence',\n  x30060020: 'StructureSetROISequence',\n  x30060022: 'ROINumber',\n  x30060024: 'ReferencedFrameOfReferenceUID',\n  x30060026: 'ROIName',\n  x30060028: 'ROIDescription',\n  x3006002a: 'ROIDisplayColor',\n  x3006002c: 'ROIVolume',\n  x30060030: 'RTRelatedROISequence',\n  x30060033: 'RTROIRelationship',\n  x30060036: 'ROIGenerationAlgorithm',\n  x30060038: 'ROIGenerationDescription',\n  x30060039: 'ROIContourSequence',\n  x30060040: 'ContourSequence',\n  x30060042: 'ContourGeometricType',\n  x30060044: 'ContourSlabThickness',\n  x30060045: 'ContourOffsetVector',\n  x30060046: 'NumberOfContourPoints',\n  x30060048: 'ContourNumber',\n  x30060049: 'AttachedContours',\n  x30060050: 'ContourData',\n  x30060080: 'RTROIObservationsSequence',\n  x30060082: 'ObservationNumber',\n  x30060084: 'ReferencedROINumber',\n  x30060085: 'ROIObservationLabel',\n  x30060086: 'RTROIIdentificationCodeSequence',\n  x30060088: 'ROIObservationDescription',\n  x300600a0: 'RelatedRTROIObservationsSequence',\n  x300600a4: 'RTROIInterpretedType',\n  x300600a6: 'ROIInterpreter',\n  x300600b0: 'ROIPhysicalPropertiesSequence',\n  x300600b2: 'ROIPhysicalProperty',\n  x300600b4: 'ROIPhysicalPropertyValue',\n  x300600b6: 'ROIElementalCompositionSequence',\n  x300600b7: 'ROIElementalCompAtomicNumber',\n  x300600b8: 'ROIElementalCompAtomicMassFraction',\n  x300600c0: 'FrameOfReferenceRelationshipSeq',\n  x300600c2: 'RelatedFrameOfReferenceUID',\n  x300600c4: 'FrameOfReferenceTransformType',\n  x300600c6: 'FrameOfReferenceTransformMatrix',\n  x300600c8: 'FrameOfReferenceTransformComment',\n  x30080010: 'MeasuredDoseReferenceSequence',\n  x30080012: 'MeasuredDoseDescription',\n  x30080014: 'MeasuredDoseType',\n  x30080016: 'MeasuredDoseValue',\n  x30080020: 'TreatmentSessionBeamSequence',\n  x30080021: 'TreatmentSessionIonBeamSequence',\n  x30080022: 'CurrentFractionNumber',\n  x30080024: 'TreatmentControlPointDate',\n  x30080025: 'TreatmentControlPointTime',\n  x3008002a: 'TreatmentTerminationStatus',\n  x3008002b: 'TreatmentTerminationCode',\n  x3008002c: 'TreatmentVerificationStatus',\n  x30080030: 'ReferencedTreatmentRecordSequence',\n  x30080032: 'SpecifiedPrimaryMeterset',\n  x30080033: 'SpecifiedSecondaryMeterset',\n  x30080036: 'DeliveredPrimaryMeterset',\n  x30080037: 'DeliveredSecondaryMeterset',\n  x3008003a: 'SpecifiedTreatmentTime',\n  x3008003b: 'DeliveredTreatmentTime',\n  x30080040: 'ControlPointDeliverySequence',\n  x30080041: 'IonControlPointDeliverySequence',\n  x30080042: 'SpecifiedMeterset',\n  x30080044: 'DeliveredMeterset',\n  x30080045: 'MetersetRateSet',\n  x30080046: 'MetersetRateDelivered',\n  x30080047: 'ScanSpotMetersetsDelivered',\n  x30080048: 'DoseRateDelivered',\n  x30080050: 'TreatmentSummaryCalcDoseRefSeq',\n  x30080052: 'CumulativeDoseToDoseReference',\n  x30080054: 'FirstTreatmentDate',\n  x30080056: 'MostRecentTreatmentDate',\n  x3008005a: 'NumberOfFractionsDelivered',\n  x30080060: 'OverrideSequence',\n  x30080061: 'ParameterSequencePointer',\n  x30080062: 'OverrideParameterPointer',\n  x30080063: 'ParameterItemIndex',\n  x30080064: 'MeasuredDoseReferenceNumber',\n  x30080065: 'ParameterPointer',\n  x30080066: 'OverrideReason',\n  x30080068: 'CorrectedParameterSequence',\n  x3008006a: 'CorrectionValue',\n  x30080070: 'CalculatedDoseReferenceSequence',\n  x30080072: 'CalculatedDoseReferenceNumber',\n  x30080074: 'CalculatedDoseReferenceDescription',\n  x30080076: 'CalculatedDoseReferenceDoseValue',\n  x30080078: 'StartMeterset',\n  x3008007a: 'EndMeterset',\n  x30080080: 'ReferencedMeasuredDoseReferenceSeq',\n  x30080082: 'ReferencedMeasuredDoseReferenceNum',\n  x30080090: 'ReferencedCalculatedDoseRefSeq',\n  x30080092: 'ReferencedCalculatedDoseRefNumber',\n  x300800a0: 'BeamLimitingDeviceLeafPairsSeq',\n  x300800b0: 'RecordedWedgeSequence',\n  x300800c0: 'RecordedCompensatorSequence',\n  x300800d0: 'RecordedBlockSequence',\n  x300800e0: 'TreatmentSummaryMeasuredDoseRefSeq',\n  x300800f0: 'RecordedSnoutSequence',\n  x300800f2: 'RecordedRangeShifterSequence',\n  x300800f4: 'RecordedLateralSpreadingDeviceSeq',\n  x300800f6: 'RecordedRangeModulatorSequence',\n  x30080100: 'RecordedSourceSequence',\n  x30080105: 'SourceSerialNumber',\n  x30080110: 'TreatmentSessionAppSetupSeq',\n  x30080116: 'ApplicationSetupCheck',\n  x30080120: 'RecordedBrachyAccessoryDeviceSeq',\n  x30080122: 'ReferencedBrachyAccessoryDeviceNum',\n  x30080130: 'RecordedChannelSequence',\n  x30080132: 'SpecifiedChannelTotalTime',\n  x30080134: 'DeliveredChannelTotalTime',\n  x30080136: 'SpecifiedNumberOfPulses',\n  x30080138: 'DeliveredNumberOfPulses',\n  x3008013a: 'SpecifiedPulseRepetitionInterval',\n  x3008013c: 'DeliveredPulseRepetitionInterval',\n  x30080140: 'RecordedSourceApplicatorSequence',\n  x30080142: 'ReferencedSourceApplicatorNumber',\n  x30080150: 'RecordedChannelShieldSequence',\n  x30080152: 'ReferencedChannelShieldNumber',\n  x30080160: 'BrachyControlPointDeliveredSeq',\n  x30080162: 'SafePositionExitDate',\n  x30080164: 'SafePositionExitTime',\n  x30080166: 'SafePositionReturnDate',\n  x30080168: 'SafePositionReturnTime',\n  x30080200: 'CurrentTreatmentStatus',\n  x30080202: 'TreatmentStatusComment',\n  x30080220: 'FractionGroupSummarySequence',\n  x30080223: 'ReferencedFractionNumber',\n  x30080224: 'FractionGroupType',\n  x30080230: 'BeamStopperPosition',\n  x30080240: 'FractionStatusSummarySequence',\n  x30080250: 'TreatmentDate',\n  x30080251: 'TreatmentTime',\n  x300a0002: 'RTPlanLabel',\n  x300a0003: 'RTPlanName',\n  x300a0004: 'RTPlanDescription',\n  x300a0006: 'RTPlanDate',\n  x300a0007: 'RTPlanTime',\n  x300a0009: 'TreatmentProtocols',\n  x300a000a: 'PlanIntent',\n  x300a000b: 'TreatmentSites',\n  x300a000c: 'RTPlanGeometry',\n  x300a000e: 'PrescriptionDescription',\n  x300a0010: 'DoseReferenceSequence',\n  x300a0012: 'DoseReferenceNumber',\n  x300a0013: 'DoseReferenceUID',\n  x300a0014: 'DoseReferenceStructureType',\n  x300a0015: 'NominalBeamEnergyUnit',\n  x300a0016: 'DoseReferenceDescription',\n  x300a0018: 'DoseReferencePointCoordinates',\n  x300a001a: 'NominalPriorDose',\n  x300a0020: 'DoseReferenceType',\n  x300a0021: 'ConstraintWeight',\n  x300a0022: 'DeliveryWarningDose',\n  x300a0023: 'DeliveryMaximumDose',\n  x300a0025: 'TargetMinimumDose',\n  x300a0026: 'TargetPrescriptionDose',\n  x300a0027: 'TargetMaximumDose',\n  x300a0028: 'TargetUnderdoseVolumeFraction',\n  x300a002a: 'OrganAtRiskFullVolumeDose',\n  x300a002b: 'OrganAtRiskLimitDose',\n  x300a002c: 'OrganAtRiskMaximumDose',\n  x300a002d: 'OrganAtRiskOverdoseVolumeFraction',\n  x300a0040: 'ToleranceTableSequence',\n  x300a0042: 'ToleranceTableNumber',\n  x300a0043: 'ToleranceTableLabel',\n  x300a0044: 'GantryAngleTolerance',\n  x300a0046: 'BeamLimitingDeviceAngleTolerance',\n  x300a0048: 'BeamLimitingDeviceToleranceSeq',\n  x300a004a: 'BeamLimitingDevicePositionTol',\n  x300a004b: 'SnoutPositionTolerance',\n  x300a004c: 'PatientSupportAngleTolerance',\n  x300a004e: 'TableTopEccentricAngleTolerance',\n  x300a004f: 'TableTopPitchAngleTolerance',\n  x300a0050: 'TableTopRollAngleTolerance',\n  x300a0051: 'TableTopVerticalPositionTolerance',\n  x300a0052: 'TableTopLongitudinalPositionTol',\n  x300a0053: 'TableTopLateralPositionTolerance',\n  x300a0055: 'RTPlanRelationship',\n  x300a0070: 'FractionGroupSequence',\n  x300a0071: 'FractionGroupNumber',\n  x300a0072: 'FractionGroupDescription',\n  x300a0078: 'NumberOfFractionsPlanned',\n  x300a0079: 'NumberFractionPatternDigitsPerDay',\n  x300a007a: 'RepeatFractionCycleLength',\n  x300a007b: 'FractionPattern',\n  x300a0080: 'NumberOfBeams',\n  x300a0082: 'BeamDoseSpecificationPoint',\n  x300a0084: 'BeamDose',\n  x300a0086: 'BeamMeterset',\n  x300a0088: 'BeamDosePointDepth',\n  x300a0089: 'BeamDosePointEquivalentDepth',\n  x300a008a: 'BeamDosePointSSD',\n  x300a00a0: 'NumberOfBrachyApplicationSetups',\n  x300a00a2: 'BrachyAppSetupDoseSpecPoint',\n  x300a00a4: 'BrachyApplicationSetupDose',\n  x300a00b0: 'BeamSequence',\n  x300a00b2: 'TreatmentMachineName',\n  x300a00b3: 'PrimaryDosimeterUnit',\n  x300a00b4: 'SourceAxisDistance',\n  x300a00b6: 'BeamLimitingDeviceSequence',\n  x300a00b8: 'RTBeamLimitingDeviceType',\n  x300a00ba: 'SourceToBeamLimitingDeviceDistance',\n  x300a00bb: 'IsocenterToBeamLimitingDeviceDist',\n  x300a00bc: 'NumberOfLeafJawPairs',\n  x300a00be: 'LeafPositionBoundaries',\n  x300a00c0: 'BeamNumber',\n  x300a00c2: 'BeamName',\n  x300a00c3: 'BeamDescription',\n  x300a00c4: 'BeamType',\n  x300a00c6: 'RadiationType',\n  x300a00c7: 'HighDoseTechniqueType',\n  x300a00c8: 'ReferenceImageNumber',\n  x300a00ca: 'PlannedVerificationImageSequence',\n  x300a00cc: 'ImagingDeviceSpecificAcqParams',\n  x300a00ce: 'TreatmentDeliveryType',\n  x300a00d0: 'NumberOfWedges',\n  x300a00d1: 'WedgeSequence',\n  x300a00d2: 'WedgeNumber',\n  x300a00d3: 'WedgeType',\n  x300a00d4: 'WedgeID',\n  x300a00d5: 'WedgeAngle',\n  x300a00d6: 'WedgeFactor',\n  x300a00d7: 'TotalWedgeTrayWaterEquivThickness',\n  x300a00d8: 'WedgeOrientation',\n  x300a00d9: 'IsocenterToWedgeTrayDistance',\n  x300a00da: 'SourceToWedgeTrayDistance',\n  x300a00db: 'WedgeThinEdgePosition',\n  x300a00dc: 'BolusID',\n  x300a00dd: 'BolusDescription',\n  x300a00e0: 'NumberOfCompensators',\n  x300a00e1: 'MaterialID',\n  x300a00e2: 'TotalCompensatorTrayFactor',\n  x300a00e3: 'CompensatorSequence',\n  x300a00e4: 'CompensatorNumber',\n  x300a00e5: 'CompensatorID',\n  x300a00e6: 'SourceToCompensatorTrayDistance',\n  x300a00e7: 'CompensatorRows',\n  x300a00e8: 'CompensatorColumns',\n  x300a00e9: 'CompensatorPixelSpacing',\n  x300a00ea: 'CompensatorPosition',\n  x300a00eb: 'CompensatorTransmissionData',\n  x300a00ec: 'CompensatorThicknessData',\n  x300a00ed: 'NumberOfBoli',\n  x300a00ee: 'CompensatorType',\n  x300a00f0: 'NumberOfBlocks',\n  x300a00f2: 'TotalBlockTrayFactor',\n  x300a00f3: 'TotalBlockTrayWaterEquivThickness',\n  x300a00f4: 'BlockSequence',\n  x300a00f5: 'BlockTrayID',\n  x300a00f6: 'SourceToBlockTrayDistance',\n  x300a00f7: 'IsocenterToBlockTrayDistance',\n  x300a00f8: 'BlockType',\n  x300a00f9: 'AccessoryCode',\n  x300a00fa: 'BlockDivergence',\n  x300a00fb: 'BlockMountingPosition',\n  x300a00fc: 'BlockNumber',\n  x300a00fe: 'BlockName',\n  x300a0100: 'BlockThickness',\n  x300a0102: 'BlockTransmission',\n  x300a0104: 'BlockNumberOfPoints',\n  x300a0106: 'BlockData',\n  x300a0107: 'ApplicatorSequence',\n  x300a0108: 'ApplicatorID',\n  x300a0109: 'ApplicatorType',\n  x300a010a: 'ApplicatorDescription',\n  x300a010c: 'CumulativeDoseReferenceCoefficient',\n  x300a010e: 'FinalCumulativeMetersetWeight',\n  x300a0110: 'NumberOfControlPoints',\n  x300a0111: 'ControlPointSequence',\n  x300a0112: 'ControlPointIndex',\n  x300a0114: 'NominalBeamEnergy',\n  x300a0115: 'DoseRateSet',\n  x300a0116: 'WedgePositionSequence',\n  x300a0118: 'WedgePosition',\n  x300a011a: 'BeamLimitingDevicePositionSequence',\n  x300a011c: 'LeafJawPositions',\n  x300a011e: 'GantryAngle',\n  x300a011f: 'GantryRotationDirection',\n  x300a0120: 'BeamLimitingDeviceAngle',\n  x300a0121: 'BeamLimitingDeviceRotateDirection',\n  x300a0122: 'PatientSupportAngle',\n  x300a0123: 'PatientSupportRotationDirection',\n  x300a0124: 'TableTopEccentricAxisDistance',\n  x300a0125: 'TableTopEccentricAngle',\n  x300a0126: 'TableTopEccentricRotateDirection',\n  x300a0128: 'TableTopVerticalPosition',\n  x300a0129: 'TableTopLongitudinalPosition',\n  x300a012a: 'TableTopLateralPosition',\n  x300a012c: 'IsocenterPosition',\n  x300a012e: 'SurfaceEntryPoint',\n  x300a0130: 'SourceToSurfaceDistance',\n  x300a0134: 'CumulativeMetersetWeight',\n  x300a0140: 'TableTopPitchAngle',\n  x300a0142: 'TableTopPitchRotationDirection',\n  x300a0144: 'TableTopRollAngle',\n  x300a0146: 'TableTopRollRotationDirection',\n  x300a0148: 'HeadFixationAngle',\n  x300a014a: 'GantryPitchAngle',\n  x300a014c: 'GantryPitchRotationDirection',\n  x300a014e: 'GantryPitchAngleTolerance',\n  x300a0180: 'PatientSetupSequence',\n  x300a0182: 'PatientSetupNumber',\n  x300a0183: 'PatientSetupLabel',\n  x300a0184: 'PatientAdditionalPosition',\n  x300a0190: 'FixationDeviceSequence',\n  x300a0192: 'FixationDeviceType',\n  x300a0194: 'FixationDeviceLabel',\n  x300a0196: 'FixationDeviceDescription',\n  x300a0198: 'FixationDevicePosition',\n  x300a0199: 'FixationDevicePitchAngle',\n  x300a019a: 'FixationDeviceRollAngle',\n  x300a01a0: 'ShieldingDeviceSequence',\n  x300a01a2: 'ShieldingDeviceType',\n  x300a01a4: 'ShieldingDeviceLabel',\n  x300a01a6: 'ShieldingDeviceDescription',\n  x300a01a8: 'ShieldingDevicePosition',\n  x300a01b0: 'SetupTechnique',\n  x300a01b2: 'SetupTechniqueDescription',\n  x300a01b4: 'SetupDeviceSequence',\n  x300a01b6: 'SetupDeviceType',\n  x300a01b8: 'SetupDeviceLabel',\n  x300a01ba: 'SetupDeviceDescription',\n  x300a01bc: 'SetupDeviceParameter',\n  x300a01d0: 'SetupReferenceDescription',\n  x300a01d2: 'TableTopVerticalSetupDisplacement',\n  x300a01d4: 'TableTopLongitudinalSetupDisplace',\n  x300a01d6: 'TableTopLateralSetupDisplacement',\n  x300a0200: 'BrachyTreatmentTechnique',\n  x300a0202: 'BrachyTreatmentType',\n  x300a0206: 'TreatmentMachineSequence',\n  x300a0210: 'SourceSequence',\n  x300a0212: 'SourceNumber',\n  x300a0214: 'SourceType',\n  x300a0216: 'SourceManufacturer',\n  x300a0218: 'ActiveSourceDiameter',\n  x300a021a: 'ActiveSourceLength',\n  x300a0222: 'SourceEncapsulationNomThickness',\n  x300a0224: 'SourceEncapsulationNomTransmission',\n  x300a0226: 'SourceIsotopeName',\n  x300a0228: 'SourceIsotopeHalfLife',\n  x300a0229: 'SourceStrengthUnits',\n  x300a022a: 'ReferenceAirKermaRate',\n  x300a022b: 'SourceStrength',\n  x300a022c: 'SourceStrengthReferenceDate',\n  x300a022e: 'SourceStrengthReferenceTime',\n  x300a0230: 'ApplicationSetupSequence',\n  x300a0232: 'ApplicationSetupType',\n  x300a0234: 'ApplicationSetupNumber',\n  x300a0236: 'ApplicationSetupName',\n  x300a0238: 'ApplicationSetupManufacturer',\n  x300a0240: 'TemplateNumber',\n  x300a0242: 'TemplateType',\n  x300a0244: 'TemplateName',\n  x300a0250: 'TotalReferenceAirKerma',\n  x300a0260: 'BrachyAccessoryDeviceSequence',\n  x300a0262: 'BrachyAccessoryDeviceNumber',\n  x300a0263: 'BrachyAccessoryDeviceID',\n  x300a0264: 'BrachyAccessoryDeviceType',\n  x300a0266: 'BrachyAccessoryDeviceName',\n  x300a026a: 'BrachyAccessoryDeviceNomThickness',\n  x300a026c: 'BrachyAccessoryDevNomTransmission',\n  x300a0280: 'ChannelSequence',\n  x300a0282: 'ChannelNumber',\n  x300a0284: 'ChannelLength',\n  x300a0286: 'ChannelTotalTime',\n  x300a0288: 'SourceMovementType',\n  x300a028a: 'NumberOfPulses',\n  x300a028c: 'PulseRepetitionInterval',\n  x300a0290: 'SourceApplicatorNumber',\n  x300a0291: 'SourceApplicatorID',\n  x300a0292: 'SourceApplicatorType',\n  x300a0294: 'SourceApplicatorName',\n  x300a0296: 'SourceApplicatorLength',\n  x300a0298: 'SourceApplicatorManufacturer',\n  x300a029c: 'SourceApplicatorWallNomThickness',\n  x300a029e: 'SourceApplicatorWallNomTrans',\n  x300a02a0: 'SourceApplicatorStepSize',\n  x300a02a2: 'TransferTubeNumber',\n  x300a02a4: 'TransferTubeLength',\n  x300a02b0: 'ChannelShieldSequence',\n  x300a02b2: 'ChannelShieldNumber',\n  x300a02b3: 'ChannelShieldID',\n  x300a02b4: 'ChannelShieldName',\n  x300a02b8: 'ChannelShieldNominalThickness',\n  x300a02ba: 'ChannelShieldNominalTransmission',\n  x300a02c8: 'FinalCumulativeTimeWeight',\n  x300a02d0: 'BrachyControlPointSequence',\n  x300a02d2: 'ControlPointRelativePosition',\n  x300a02d4: 'ControlPoint3DPosition',\n  x300a02d6: 'CumulativeTimeWeight',\n  x300a02e0: 'CompensatorDivergence',\n  x300a02e1: 'CompensatorMountingPosition',\n  x300a02e2: 'SourceToCompensatorDistance',\n  x300a02e3: 'TotalCompTrayWaterEquivThickness',\n  x300a02e4: 'IsocenterToCompensatorTrayDistance',\n  x300a02e5: 'CompensatorColumnOffset',\n  x300a02e6: 'IsocenterToCompensatorDistances',\n  x300a02e7: 'CompensatorRelStoppingPowerRatio',\n  x300a02e8: 'CompensatorMillingToolDiameter',\n  x300a02ea: 'IonRangeCompensatorSequence',\n  x300a02eb: 'CompensatorDescription',\n  x300a0302: 'RadiationMassNumber',\n  x300a0304: 'RadiationAtomicNumber',\n  x300a0306: 'RadiationChargeState',\n  x300a0308: 'ScanMode',\n  x300a030a: 'VirtualSourceAxisDistances',\n  x300a030c: 'SnoutSequence',\n  x300a030d: 'SnoutPosition',\n  x300a030f: 'SnoutID',\n  x300a0312: 'NumberOfRangeShifters',\n  x300a0314: 'RangeShifterSequence',\n  x300a0316: 'RangeShifterNumber',\n  x300a0318: 'RangeShifterID',\n  x300a0320: 'RangeShifterType',\n  x300a0322: 'RangeShifterDescription',\n  x300a0330: 'NumberOfLateralSpreadingDevices',\n  x300a0332: 'LateralSpreadingDeviceSequence',\n  x300a0334: 'LateralSpreadingDeviceNumber',\n  x300a0336: 'LateralSpreadingDeviceID',\n  x300a0338: 'LateralSpreadingDeviceType',\n  x300a033a: 'LateralSpreadingDeviceDescription',\n  x300a033c: 'LateralSpreadingDevWaterEquivThick',\n  x300a0340: 'NumberOfRangeModulators',\n  x300a0342: 'RangeModulatorSequence',\n  x300a0344: 'RangeModulatorNumber',\n  x300a0346: 'RangeModulatorID',\n  x300a0348: 'RangeModulatorType',\n  x300a034a: 'RangeModulatorDescription',\n  x300a034c: 'BeamCurrentModulationID',\n  x300a0350: 'PatientSupportType',\n  x300a0352: 'PatientSupportID',\n  x300a0354: 'PatientSupportAccessoryCode',\n  x300a0356: 'FixationLightAzimuthalAngle',\n  x300a0358: 'FixationLightPolarAngle',\n  x300a035a: 'MetersetRate',\n  x300a0360: 'RangeShifterSettingsSequence',\n  x300a0362: 'RangeShifterSetting',\n  x300a0364: 'IsocenterToRangeShifterDistance',\n  x300a0366: 'RangeShifterWaterEquivThickness',\n  x300a0370: 'LateralSpreadingDeviceSettingsSeq',\n  x300a0372: 'LateralSpreadingDeviceSetting',\n  x300a0374: 'IsocenterToLateralSpreadingDevDist',\n  x300a0380: 'RangeModulatorSettingsSequence',\n  x300a0382: 'RangeModulatorGatingStartValue',\n  x300a0384: 'RangeModulatorGatingStopValue',\n  x300a038a: 'IsocenterToRangeModulatorDistance',\n  x300a0390: 'ScanSpotTuneID',\n  x300a0392: 'NumberOfScanSpotPositions',\n  x300a0394: 'ScanSpotPositionMap',\n  x300a0396: 'ScanSpotMetersetWeights',\n  x300a0398: 'ScanningSpotSize',\n  x300a039a: 'NumberOfPaintings',\n  x300a03a0: 'IonToleranceTableSequence',\n  x300a03a2: 'IonBeamSequence',\n  x300a03a4: 'IonBeamLimitingDeviceSequence',\n  x300a03a6: 'IonBlockSequence',\n  x300a03a8: 'IonControlPointSequence',\n  x300a03aa: 'IonWedgeSequence',\n  x300a03ac: 'IonWedgePositionSequence',\n  x300a0401: 'ReferencedSetupImageSequence',\n  x300a0402: 'SetupImageComment',\n  x300a0410: 'MotionSynchronizationSequence',\n  x300a0412: 'ControlPointOrientation',\n  x300a0420: 'GeneralAccessorySequence',\n  x300a0421: 'GeneralAccessoryID',\n  x300a0422: 'GeneralAccessoryDescription',\n  x300a0423: 'GeneralAccessoryType',\n  x300a0424: 'GeneralAccessoryNumber',\n  x300c0002: 'ReferencedRTPlanSequence',\n  x300c0004: 'ReferencedBeamSequence',\n  x300c0006: 'ReferencedBeamNumber',\n  x300c0007: 'ReferencedReferenceImageNumber',\n  x300c0008: 'StartCumulativeMetersetWeight',\n  x300c0009: 'EndCumulativeMetersetWeight',\n  x300c000a: 'ReferencedBrachyAppSetupSeq',\n  x300c000c: 'ReferencedBrachyAppSetupNumber',\n  x300c000e: 'ReferencedSourceNumber',\n  x300c0020: 'ReferencedFractionGroupSequence',\n  x300c0022: 'ReferencedFractionGroupNumber',\n  x300c0040: 'ReferencedVerificationImageSeq',\n  x300c0042: 'ReferencedReferenceImageSequence',\n  x300c0050: 'ReferencedDoseReferenceSequence',\n  x300c0051: 'ReferencedDoseReferenceNumber',\n  x300c0055: 'BrachyReferencedDoseReferenceSeq',\n  x300c0060: 'ReferencedStructureSetSequence',\n  x300c006a: 'ReferencedPatientSetupNumber',\n  x300c0080: 'ReferencedDoseSequence',\n  x300c00a0: 'ReferencedToleranceTableNumber',\n  x300c00b0: 'ReferencedBolusSequence',\n  x300c00c0: 'ReferencedWedgeNumber',\n  x300c00d0: 'ReferencedCompensatorNumber',\n  x300c00e0: 'ReferencedBlockNumber',\n  x300c00f0: 'ReferencedControlPointIndex',\n  x300c00f2: 'ReferencedControlPointSequence',\n  x300c00f4: 'ReferencedStartControlPointIndex',\n  x300c00f6: 'ReferencedStopControlPointIndex',\n  x300c0100: 'ReferencedRangeShifterNumber',\n  x300c0102: 'ReferencedLateralSpreadingDevNum',\n  x300c0104: 'ReferencedRangeModulatorNumber',\n  x300e0002: 'ApprovalStatus',\n  x300e0004: 'ReviewDate',\n  x300e0005: 'ReviewTime',\n  x300e0008: 'ReviewerName',\n  x40000000: 'TextGroupLength',\n  x40000010: 'Arbitrary',\n  x40004000: 'TextComments',\n  x40080040: 'ResultsID',\n  x40080042: 'ResultsIDIssuer',\n  x40080050: 'ReferencedInterpretationSequence',\n  x40080100: 'InterpretationRecordedDate',\n  x40080101: 'InterpretationRecordedTime',\n  x40080102: 'InterpretationRecorder',\n  x40080103: 'ReferenceToRecordedSound',\n  x40080108: 'InterpretationTranscriptionDate',\n  x40080109: 'InterpretationTranscriptionTime',\n  x4008010a: 'InterpretationTranscriber',\n  x4008010b: 'InterpretationText',\n  x4008010c: 'InterpretationAuthor',\n  x40080111: 'InterpretationApproverSequence',\n  x40080112: 'InterpretationApprovalDate',\n  x40080113: 'InterpretationApprovalTime',\n  x40080114: 'PhysicianApprovingInterpretation',\n  x40080115: 'InterpretationDiagnosisDescription',\n  x40080117: 'InterpretationDiagnosisCodeSeq',\n  x40080118: 'ResultsDistributionListSequence',\n  x40080119: 'DistributionName',\n  x4008011a: 'DistributionAddress',\n  x40080200: 'InterpretationID',\n  x40080202: 'InterpretationIDIssuer',\n  x40080210: 'InterpretationTypeID',\n  x40080212: 'InterpretationStatusID',\n  x40080300: 'Impressions',\n  x40084000: 'ResultsComments',\n  x4ffe0001: 'MACParametersSequence',\n  x50xx0005: 'CurveDimensions',\n  x50xx0010: 'NumberOfPoints',\n  x50xx0020: 'TypeOfData',\n  x50xx0022: 'CurveDescription',\n  x50xx0030: 'AxisUnits',\n  x50xx0040: 'AxisLabels',\n  x50xx0103: 'DataValueRepresentation',\n  x50xx0104: 'MinimumCoordinateValue',\n  x50xx0105: 'MaximumCoordinateValue',\n  x50xx0106: 'CurveRange',\n  x50xx0110: 'CurveDataDescriptor',\n  x50xx0112: 'CoordinateStartValue',\n  x50xx0114: 'CoordinateStepValue',\n  x50xx1001: 'CurveActivationLayer',\n  x50xx2000: 'AudioType',\n  x50xx2002: 'AudioSampleFormat',\n  x50xx2004: 'NumberOfChannels',\n  x50xx2006: 'NumberOfSamples',\n  x50xx2008: 'SampleRate',\n  x50xx200a: 'TotalTime',\n  x50xx200c: 'AudioSampleData',\n  x50xx200e: 'AudioComments',\n  x50xx2500: 'CurveLabel',\n  x50xx2600: 'CurveReferencedOverlaySequence',\n  x50xx2610: 'ReferencedOverlayGroup',\n  x50xx3000: 'CurveData',\n  x52009229: 'SharedFunctionalGroupsSequence',\n  x52009230: 'PerFrameFunctionalGroupsSequence',\n  x54000100: 'WaveformSequence',\n  x54000110: 'ChannelMinimumValue',\n  x54000112: 'ChannelMaximumValue',\n  x54001004: 'WaveformBitsAllocated',\n  x54001006: 'WaveformSampleInterpretation',\n  x5400100a: 'WaveformPaddingValue',\n  x54001010: 'WaveformData',\n  x56000010: 'FirstOrderPhaseCorrectionAngle',\n  x56000020: 'SpectroscopyData',\n  x60000000: 'OverlayGroupLength',\n  x60xx0010: 'OverlayRows',\n  x60xx0011: 'OverlayColumns',\n  x60xx0012: 'OverlayPlanes',\n  x60xx0015: 'NumberOfFramesInOverlay',\n  x60xx0022: 'OverlayDescription',\n  x60xx0040: 'OverlayType',\n  x60xx0045: 'OverlaySubtype',\n  x60xx0050: 'OverlayOrigin',\n  x60xx0051: 'ImageFrameOrigin',\n  x60xx0052: 'OverlayPlaneOrigin',\n  x60xx0060: 'OverlayCompressionCode',\n  x60xx0061: 'OverlayCompressionOriginator',\n  x60xx0062: 'OverlayCompressionLabel',\n  x60xx0063: 'OverlayCompressionDescription',\n  x60xx0066: 'OverlayCompressionStepPointers',\n  x60xx0068: 'OverlayRepeatInterval',\n  x60xx0069: 'OverlayBitsGrouped',\n  x60xx0100: 'OverlayBitsAllocated',\n  x60xx0102: 'OverlayBitPosition',\n  x60xx0110: 'OverlayFormat',\n  x60xx0200: 'OverlayLocation',\n  x60xx0800: 'OverlayCodeLabel',\n  x60xx0802: 'OverlayNumberOfTables',\n  x60xx0803: 'OverlayCodeTableLocation',\n  x60xx0804: 'OverlayBitsForCodeWord',\n  x60xx1001: 'OverlayActivationLayer',\n  x60xx1100: 'OverlayDescriptorGray',\n  x60xx1101: 'OverlayDescriptorRed',\n  x60xx1102: 'OverlayDescriptorGreen',\n  x60xx1103: 'OverlayDescriptorBlue',\n  x60xx1200: 'OverlaysGray',\n  x60xx1201: 'OverlaysRed',\n  x60xx1202: 'OverlaysGreen',\n  x60xx1203: 'OverlaysBlue',\n  x60xx1301: 'ROIArea',\n  x60xx1302: 'ROIMean',\n  x60xx1303: 'ROIStandardDeviation',\n  x60xx1500: 'OverlayLabel',\n  x60xx3000: 'OverlayData',\n  x60xx4000: 'OverlayComments',\n  x7fxx0000: 'PixelDataGroupLength',\n  x7fxx0010: 'PixelData',\n  x7fxx0011: 'VariableNextDataGroup',\n  x7fxx0020: 'VariableCoefficientsSDVN',\n  x7fxx0030: 'VariableCoefficientsSDHN',\n  x7fxx0040: 'VariableCoefficientsSDDN',\n  xfffafffa: 'DigitalSignaturesSequence',\n  xfffcfffc: 'DataSetTrailingPadding',\n  xfffee000: 'StartOfItem',\n  xfffee00d: 'EndOfItems',\n  xfffee0dd: 'EndOfSequence'\n};\n\nDICOMTagDescriptions.init(initialTagDescriptionMap);\n\n// Discard original map...\ninitialTagDescriptionMap = null;\n\nexport { DICOMTagDescriptions };\n","import dicomParser from 'dicom-parser';\n\n/**\n * A small set of utilities to help parsing DICOM element values.\n * In the future the functionality provided by this library might\n * be incorporated into dicomParser library.\n */\n\nexport const parsingUtils = {\n  /**\n   * Check if supplied argument is a valid instance of the dicomParser.DataSet class.\n   * @param data {Object} An instance of the dicomParser.DataSet class.\n   * @returns {Boolean} Returns true if data is a valid instance of the dicomParser.DataSet class.\n   */\n  isValidDataSet: function(data) {\n    return data instanceof dicomParser.DataSet;\n  },\n\n  /**\n   * Parses an element tag according to the 'AT' VR definition.\n   * @param data {Object} An instance of the dicomParser.DataSet class.\n   * @param tag {String} A DICOM tag with in the format xGGGGEEEE.\n   * @returns {String} A string representation of a data element tag or null if the field is not present or data is not long enough.\n   */\n  attributeTag: function(data, tag) {\n    if (this.isValidDataSet(data) && tag in data.elements) {\n      let element = data.elements[tag];\n      if (element && element.length === 4) {\n        let parser = data.byteArrayParser.readUint16,\n          bytes = data.byteArray,\n          offset = element.dataOffset;\n        return (\n          'x' +\n          (\n            '00000000' +\n            (\n              parser(bytes, offset) * 256 * 256 +\n              parser(bytes, offset + 2)\n            ).toString(16)\n          ).substr(-8)\n        );\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Parses the string representation of a multi-valued element into an array of strings. If the parser\n   * parameter is passed and is a function, it will be applied to each element of the resulting array.\n   * @param data {Object} An instance of the dicomParser.DataSet class.\n   * @param tag {String} A DICOM tag with in the format xGGGGEEEE.\n   * @param parser {Function} An optional parser function that can be applied to each element of the array.\n   * @returns {Array} An array of floating point numbers or null if the field is not present or data is not long enough.\n   */\n  multiValue: function(data, tag, parser) {\n    if (this.isValidDataSet(data) && tag in data.elements) {\n      let element = data.elements[tag];\n      if (element && element.length > 0) {\n        let string = dicomParser.readFixedString(\n          data.byteArray,\n          element.dataOffset,\n          element.length\n        );\n        if (typeof string === 'string' && string.length > 0) {\n          if (typeof parser !== 'function') {\n            parser = null;\n          }\n\n          return string.split('\\\\').map(function(value) {\n            value = value.trim();\n            return parser !== null ? parser(value) : value;\n          });\n        }\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Parses a string to an array of floats for a multi-valued element.\n   * @param data {Object} An instance of the dicomParser.DataSet class.\n   * @param tag {String} A DICOM tag with in the format xGGGGEEEE.\n   * @returns {Array} An array of floating point numbers or null if the field is not present or data is not long enough.\n   */\n  floatArray: function(data, tag) {\n    return this.multiValue(data, tag, parseFloat);\n  }\n};\n","/**\n * Returns the specified element as a dicom attribute group/element.\n *\n * @param element - The group/element of the element (e.g. '00280009')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getAttribute(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return convertToInt(element.Value);\n}\n\nfunction convertToInt(input) {\n  function padFour(input) {\n    var l = input.length;\n\n    if (l == 0) return '0000';\n    if (l == 1) return '000' + input;\n    if (l == 2) return '00' + input;\n    if (l == 3) return '0' + input;\n\n    return input;\n  }\n\n  var output = '';\n  for (var i = 0; i < input.length; i++) {\n    for (var j = 0; j < input[i].length; j++) {\n      output += padFour(input[i].charCodeAt(j).toString(16));\n    }\n  }\n\n  return parseInt(output, 16);\n}\n","'use strict';\n\nexports.atob = function atob(val) {\n  return new Buffer(val, 'base64').toString();\n};\n\nexports.btoa = function btoa(val) {\n  return new Buffer(val).toString('base64');\n};\n","// These should be overridden by the implementation\nlet user = {\n  userLoggedIn: () => false,\n  getUserId: () => null,\n  getName: () => null,\n  getAccessToken: () => null,\n  login: () => new Promise((resolve, reject) => reject()),\n  logout: () => new Promise((resolve, reject) => reject()),\n  getData: key => null,\n  setData: (key, value) => null\n};\n\nexport default user;\n","import { btoa } from 'isomorphic-base64';\nimport user from '../user';\n\n/**\n * Returns the Authorization header as part of an Object.\n *\n * @returns {Object}\n */\nexport default function getAuthorizationHeader(server) {\n  const headers = {};\n\n  // Check for OHIF.user since this can also be run on the server\n  const accessToken = user && user.getAccessToken && user.getAccessToken();\n\n  if (server && server.requestOptions && server.requestOptions.auth) {\n    // HTTP Basic Auth (user:password)\n    headers.Authorization = `Basic ${btoa(server.requestOptions.auth)}`;\n  } else if (accessToken) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  return headers;\n}\n","export default function getModalities(modality, modalitiesInStudy) {\n  var modalities = {};\n  if (modality) {\n    modalities = modality;\n  }\n\n  if (modalitiesInStudy) {\n    // Find vr in modalities\n    if (modalities.vr && modalities.vr === modalitiesInStudy.vr) {\n      for (var i = 0; i < modalitiesInStudy.Value.length; i++) {\n        var value = modalitiesInStudy.Value[i];\n        if (modalities.Value.indexOf(value) === -1) {\n          modalities.Value.push(value);\n        }\n      }\n    } else {\n      modalities = modalitiesInStudy;\n    }\n  }\n  return modalities;\n}\n","/**\n * Returns the Alphabetic version of a PN\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element is not found\n * @returns {*}\n */\nexport default function getName(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Return the Alphabetic component group\n  if (element.Value[0].Alphabetic) {\n    return element.Value[0].Alphabetic;\n  }\n  // Orthanc does not return PN properly so this is a temporary workaround\n  return element.Value[0];\n}\n","/**\n * Returns the first string value as a Javascript Number\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nexport default function getNumber(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return parseFloat(element.Value[0]);\n}\n","/**\n * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getString(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Join the array together separated by backslash\n  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op\n  return element.Value.join('\\\\');\n}\n","import getAttribute from './getAttribute.js';\nimport getAuthorizationHeader from './getAuthorizationHeader.js';\nimport getModalities from './getModalities.js';\nimport getName from './getName.js';\nimport getNumber from './getNumber.js';\nimport getString from './getString.js';\n\nconst DICOMWeb = {\n  getAttribute,\n  getAuthorizationHeader,\n  getModalities,\n  getName,\n  getNumber,\n  getString\n};\n\nexport default DICOMWeb;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.DICOMwebClient = {})));\n}(this, (function (exports) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * Converts a Uint8Array to a String.\n   * @param {Uint8Array} array that should be converted\n   * @param {Number} offset array offset in case only subset of array items should be extracted (default: 0)\n   * @param {Number} limit maximum number of array items that should be extracted (defaults to length of array)\n   * @returns {String}\n   */\n  function uint8ArrayToString(arr, offset, limit) {\n    offset = offset || 0;\n    limit = limit || arr.length - offset;\n    var str = '';\n\n    for (var i = offset; i < offset + limit; i++) {\n      str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n  }\n  /**\n   * Converts a String to a Uint8Array.\n   * @param {String} str string that should be converted\n   * @returns {Uint8Array}\n   */\n\n\n  function stringToUint8Array(str) {\n    var arr = new Uint8Array(str.length);\n\n    for (var i = 0, j = str.length; i < j; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n\n    return arr;\n  }\n  /**\n   * Identifies the boundary in a multipart/related message header.\n   * @param {String} header message header\n   * @returns {String} boundary\n   */\n\n\n  function identifyBoundary(header) {\n    var parts = header.split('\\r\\n');\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i].substr(0, 2) === '--') {\n        return parts[i];\n      }\n    }\n  }\n  /**\n   * Checks whether a given token is contained by a message at a given offset.\n   * @param {Uint8Array} message message content\n   * @param {Uint8Array} token substring that should be present\n   * @param {String} offset offset in message content from where search should start\n   * @returns {Boolean} whether message contains token at offset\n   */\n\n\n  function containsToken(message, token) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    if (message + token.length > message.length) {\n      return false;\n    }\n\n    var index = offset;\n\n    for (var i = 0; i < token.length; i++) {\n      if (token[i] !== message[index++]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Finds a given token in a message at a given offset.\n   * @param {Uint8Array} message message content\n   * @param {Uint8Array} token substring that should be found\n   * @param {String} offset message body offset from where search should start\n   * @returns {Boolean} whether message has a part at given offset or not\n   */\n\n\n  function findToken(message, token) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var messageLength = message.length;\n\n    for (var i = offset; i < messageLength; i++) {\n      // If the first value of the message matches\n      // the first value of the token, check if\n      // this is the full token.\n      if (message[i] === token[0]) {\n        if (containsToken(message, token, i)) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * @typedef {Object} MultipartEncodedData\n   * @property {ArrayBuffer} data The encoded Multipart Data\n   * @property {String} boundary The boundary used to divide pieces of the encoded data\n   */\n\n  /**\n   * Encode one or more DICOM datasets into a single body so it can be\n   * sent using the Multipart Content-Type.\n   *\n   * @param {ArrayBuffer[]} datasets Array containing each file to be encoded in the multipart body, passed as ArrayBuffers.\n   * @param {String} [boundary] Optional string to define a boundary between each part of the multipart body. If this is not specified, a random GUID will be generated.\n   * @return {MultipartEncodedData} The Multipart encoded data returned as an Object. This contains both the data itself, and the boundary string used to divide it.\n   */\n\n\n  function multipartEncode(datasets) {\n    var boundary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : guid();\n    var contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'application/dicom';\n    var contentTypeString = \"Content-Type: \".concat(contentType);\n    var header = \"\\r\\n--\".concat(boundary, \"\\r\\n\").concat(contentTypeString, \"\\r\\n\\r\\n\");\n    var footer = \"\\r\\n--\".concat(boundary, \"--\");\n    var headerArray = stringToUint8Array(header);\n    var footerArray = stringToUint8Array(footer);\n    var headerLength = headerArray.length;\n    var footerLength = footerArray.length;\n    var length = 0; // Calculate the total length for the final array\n\n    var contentArrays = datasets.map(function (datasetBuffer) {\n      var contentArray = new Uint8Array(datasetBuffer);\n      var contentLength = contentArray.length;\n      length += headerLength + contentLength + footerLength;\n      return contentArray;\n    }); // Allocate the array\n\n    var multipartArray = new Uint8Array(length); // Set the initial header\n\n    multipartArray.set(headerArray, 0); // Write each dataset into the multipart array\n\n    var position = 0;\n    contentArrays.forEach(function (contentArray) {\n      var contentLength = contentArray.length;\n      multipartArray.set(headerArray, position);\n      multipartArray.set(contentArray, position + headerLength);\n      position += headerLength + contentArray.length;\n    });\n    multipartArray.set(footerArray, position);\n    return {\n      data: multipartArray.buffer,\n      boundary: boundary\n    };\n  }\n  /**\n   * Decode a Multipart encoded ArrayBuffer and return the components as an Array.\n   *\n   * @param {ArrayBuffer} response Data encoded as a 'multipart/related' message\n   * @returns {Array} The content\n   */\n\n  function multipartDecode(response) {\n    var message = new Uint8Array(response); // First look for the multipart mime header\n\n    var separator = stringToUint8Array('\\r\\n\\r\\n');\n    var headerIndex = findToken(message, separator);\n\n    if (headerIndex === -1) {\n      throw new Error('Response message has no multipart mime header');\n    }\n\n    var header = uint8ArrayToString(message, 0, headerIndex);\n    var boundaryString = identifyBoundary(header);\n\n    if (!boundaryString) {\n      throw new Error('Header of response message does not specify boundary');\n    }\n\n    var boundary = stringToUint8Array(boundaryString);\n    var boundaryLength = boundary.length;\n    var components = [];\n    var offset = headerIndex + separator.length; // Loop until we cannot find any more boundaries\n\n    var boundaryIndex;\n\n    while (boundaryIndex !== -1) {\n      // Search for the next boundary in the message, starting\n      // from the current offset position\n      boundaryIndex = findToken(message, boundary, offset); // If no further boundaries are found, stop here.\n\n      if (boundaryIndex === -1) {\n        break;\n      } // Extract data from response message, excluding \"\\r\\n\"\n\n\n      var spacingLength = 2;\n      var length = boundaryIndex - offset - spacingLength;\n      var data = response.slice(offset, offset + length); // Add the data to the array of results\n\n      components.push(data); // Move the offset to the end of the current section,\n      // plus the identified boundary\n\n      offset += length + spacingLength + boundaryLength;\n    }\n\n    return components;\n  }\n  /**\n   * Create a random GUID\n   *\n   * @return {string}\n   */\n\n\n  function guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  function isEmptyObject(obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  var getFirstResult = function getFirstResult(result) {\n    return result[0];\n  };\n\n  var MIMETYPES = {\n    DICOM: 'application/dicom',\n    DICOM_JSON: 'application/dicom+json',\n    OCTET_STREAM: 'application/octet-stream',\n    JPEG: 'image/jpeg',\n    PNG: 'image/png'\n  };\n  /**\n  * Class for interacting with DICOMweb RESTful services.\n  */\n\n  var DICOMwebClient =\n  /*#__PURE__*/\n  function () {\n    /**\n    * @constructor\n    * @param {Object} options (choices: \"url\", \"username\", \"password\", \"headers\")\n    */\n    function DICOMwebClient(options) {\n      _classCallCheck(this, DICOMwebClient);\n\n      this.baseURL = options.url;\n\n      if (!this.baseURL) {\n        console.error('no DICOMweb base url provided - calls will fail');\n      }\n\n      if ('username' in options) {\n        this.username = options.username;\n\n        if (!('password' in options)) {\n          console.error('no password provided to authenticate with DICOMweb service');\n        }\n\n        this.password = options.password;\n      }\n\n      if ('qidoURLPrefix' in options) {\n        console.log(\"use URL prefix for QIDO-RS: \".concat(options.qidoURLPrefix));\n        this.qidoURL = this.baseURL + '/' + options.qidoURLPrefix;\n      } else {\n        this.qidoURL = this.baseURL;\n      }\n\n      if ('wadoURLPrefix' in options) {\n        console.log(\"use URL prefix for WADO-RS: \".concat(options.wadoURLPrefix));\n        this.wadoURL = this.baseURL + '/' + options.wadoURLPrefix;\n      } else {\n        this.wadoURL = this.baseURL;\n      }\n\n      if ('stowURLPrefix' in options) {\n        console.log(\"use URL prefix for STOW-RS: \".concat(options.stowURLPrefix));\n        this.stowURL = this.baseURL + '/' + options.stowURLPrefix;\n      } else {\n        this.stowURL = this.baseURL;\n      }\n\n      this.headers = options.headers || {};\n    }\n\n    _createClass(DICOMwebClient, [{\n      key: \"_httpRequest\",\n      value: function _httpRequest(url, method, headers) {\n        var _this = this;\n\n        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        return new Promise(function (resolve, reject) {\n          var request = new XMLHttpRequest();\n          request.open(method, url, true);\n\n          if ('responseType' in options) {\n            request.responseType = options.responseType;\n          }\n\n          if (_typeof(headers) === 'object') {\n            Object.keys(headers).forEach(function (key) {\n              request.setRequestHeader(key, headers[key]);\n            });\n          } // now add custom headers from the user\n          // (e.g. access tokens)\n\n\n          var userHeaders = _this.headers;\n          Object.keys(userHeaders).forEach(function (key) {\n            request.setRequestHeader(key, userHeaders[key]);\n          }); // Event triggered when upload starts\n\n          request.onloadstart = function (event) {//console.log('upload started: ', url)\n          }; // Event triggered when upload ends\n\n\n          request.onloadend = function (event) {//console.log('upload finished')\n          }; // Handle response message\n\n\n          request.onreadystatechange = function (event) {\n            if (request.readyState === 4) {\n              if (request.status === 200) {\n                resolve(request.response);\n              } else if (request.status === 202) {\n                console.warn('some resources already existed: ', request);\n                resolve(request.response);\n              } else if (request.status === 204) {\n                console.warn('empty response for request: ', request);\n                resolve([]);\n              } else {\n                console.error('request failed: ', request);\n                var error = new Error('request failed');\n                error.request = request;\n                error.response = request.response;\n                error.status = request.status;\n                console.error(error);\n                console.error(error.response);\n                reject(error);\n              }\n            }\n          }; // Event triggered while download progresses\n\n\n          if ('progressCallback' in options) {\n            if (typeof options.progressCallback === 'function') {\n              request.onprogress = options.progressCallback;\n            }\n          } // request.onprogress = function (event) {\n          //   const loaded = progress.loaded;\n          //   let total;\n          //   let percentComplete;\n          //   if (progress.lengthComputable) {\n          //     total = progress.total;\n          //     percentComplete = Math.round((loaded / total) * 100);\n          //   j\n          //   // console.log('download progress: ', percentComplete, ' %');\n          //   return(percentComplete);\n          // };\n\n\n          if ('data' in options) {\n            request.send(options.data);\n          } else {\n            request.send();\n          }\n        });\n      }\n    }, {\n      key: \"_httpGet\",\n      value: function _httpGet(url, headers, responseType, progressCallback) {\n        return this._httpRequest(url, 'get', headers, {\n          responseType: responseType,\n          progressCallback: progressCallback\n        });\n      }\n    }, {\n      key: \"_httpGetApplicationJson\",\n      value: function _httpGetApplicationJson(url) {\n        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var progressCallback = arguments.length > 2 ? arguments[2] : undefined;\n\n        if (_typeof(params) === 'object') {\n          if (!isEmptyObject(params)) {\n            url += DICOMwebClient._parseQueryParameters(params);\n          }\n        }\n\n        var headers = {\n          'Accept': MIMETYPES.DICOM_JSON\n        };\n        var responseType = 'json';\n        return this._httpGet(url, headers, responseType, progressCallback);\n      }\n    }, {\n      key: \"_httpGetByMimeType\",\n      value: function _httpGetByMimeType(url, mimeType, params) {\n        var responseType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'arraybuffer';\n        var progressCallback = arguments.length > 4 ? arguments[4] : undefined;\n\n        if (_typeof(params) === 'object') {\n          if (!isEmptyObject(params)) {\n            url += DICOMwebClient._parseQueryParameters(params);\n          }\n        }\n\n        var headers = {\n          'Accept': \"multipart/related; type=\\\"\".concat(mimeType, \"\\\"\")\n        };\n        return this._httpGet(url, headers, responseType, progressCallback);\n      }\n    }, {\n      key: \"_httpPost\",\n      value: function _httpPost(url, headers, data, progressCallback) {\n        return this._httpRequest(url, 'post', headers, {\n          data: data,\n          progressCallback: progressCallback\n        });\n      }\n    }, {\n      key: \"_httpPostApplicationJson\",\n      value: function _httpPostApplicationJson(url, data, progressCallback) {\n        var headers = {\n          'Content-Type': MIMETYPES.DICOM_JSON\n        };\n        return this._httpPost(url, headers, data, progressCallback);\n      }\n      /**\n       * Searches for DICOM studies.\n       * @param {Object} options options object\n       * @return {Array} study representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2)\n       */\n\n    }, {\n      key: \"searchForStudies\",\n      value: function searchForStudies() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        console.log('search for studies');\n        var url = this.qidoURL + '/studies';\n\n        if ('queryParams' in options) {\n          url += DICOMwebClient._parseQueryParameters(options.queryParams);\n        }\n\n        return this._httpGetApplicationJson(url);\n      }\n      /**\n       * Retrieves metadata for a DICOM study.\n       * @param {Object} options options object\n       * @returns {Array} metadata elements in DICOM JSON format for each instance belonging to the study\n       */\n\n    }, {\n      key: \"retrieveStudyMetadata\",\n      value: function retrieveStudyMetadata(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required for retrieval of study metadata');\n        }\n\n        console.log(\"retrieve metadata of study \".concat(options.studyInstanceUID));\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/metadata';\n        return this._httpGetApplicationJson(url);\n      }\n      /**\n       * Searches for DICOM series.\n       * @param {Object} options options object\n       * @returns {Array} series representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2a)\n       */\n\n    }, {\n      key: \"searchForSeries\",\n      value: function searchForSeries() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var url = this.qidoURL;\n\n        if ('studyInstanceUID' in options) {\n          console.log(\"search series of study \".concat(options.studyInstanceUID));\n          url += '/studies/' + options.studyInstanceUID;\n        }\n\n        url += '/series';\n\n        if ('queryParams' in options) {\n          url += DICOMwebClient._parseQueryParameters(options.queryParams);\n        }\n\n        return this._httpGetApplicationJson(url);\n      }\n      /**\n       * Retrieves metadata for a DICOM series.\n       * @param {Object} options options object\n       * @returns {Array} metadata elements in DICOM JSON format for each instance belonging to the series\n       */\n\n    }, {\n      key: \"retrieveSeriesMetadata\",\n      value: function retrieveSeriesMetadata(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required for retrieval of series metadata');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required for retrieval of series metadata');\n        }\n\n        console.log(\"retrieve metadata of series \".concat(options.seriesInstanceUID));\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID + '/metadata';\n        return this._httpGetApplicationJson(url);\n      }\n      /**\n       * Searches for DICOM instances.\n       * @param {Object} options options object\n       * @returns {Array} instance representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2b)\n       */\n\n    }, {\n      key: \"searchForInstances\",\n      value: function searchForInstances() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var url = this.qidoURL;\n\n        if ('studyInstanceUID' in options) {\n          url += '/studies/' + options.studyInstanceUID;\n\n          if ('seriesInstanceUID' in options) {\n            console.log(\"search for instances of series \".concat(options.seriesInstanceUID));\n            url += '/series/' + options.seriesInstanceUID;\n          } else {\n            console.log(\"search for instances of study \".concat(options.studyInstanceUID));\n          }\n        } else {\n          console.log('search for instances');\n        }\n\n        url += '/instances';\n\n        if ('queryParams' in options) {\n          url += DICOMwebClient._parseQueryParameters(options.queryParams);\n        }\n\n        return this._httpGetApplicationJson(url);\n      }\n      /** Returns a WADO-URI URL for an instance\n       * @param {Object} options options object\n       * @returns {String} WADO-URI URL\n       */\n\n    }, {\n      key: \"buildInstanceWadoURIUrl\",\n      value: function buildInstanceWadoURIUrl(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required.');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required.');\n        }\n\n        if (!('sopInstanceUID' in options)) {\n          throw new Error('SOP Instance UID is required.');\n        }\n\n        var contentType = options.contentType || MIMETYPES.DICOM;\n        var transferSyntax = options.transferSyntax || '*';\n        var params = [];\n        params.push('requestType=WADO');\n        params.push(\"studyUID=\".concat(options.studyInstanceUID));\n        params.push(\"seriesUID=\".concat(options.seriesInstanceUID));\n        params.push(\"objectUID=\".concat(options.sopInstanceUID));\n        params.push(\"contentType=\".concat(contentType));\n        params.push(\"transferSyntax=\".concat(transferSyntax));\n        var paramString = params.join('&');\n        return \"\".concat(this.wadoURL, \"?\").concat(paramString);\n      }\n      /**\n       * Retrieves metadata for a DICOM instance.\n       *\n       * @param {Object} options object\n       * @returns {Object} metadata elements in DICOM JSON format\n       */\n\n    }, {\n      key: \"retrieveInstanceMetadata\",\n      value: function retrieveInstanceMetadata(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required for retrieval of instance metadata');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required for retrieval of instance metadata');\n        }\n\n        if (!('sopInstanceUID' in options)) {\n          throw new Error('SOP Instance UID is required for retrieval of instance metadata');\n        }\n\n        console.log(\"retrieve metadata of instance \".concat(options.sopInstanceUID));\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID + '/instances/' + options.sopInstanceUID + '/metadata';\n        return this._httpGetApplicationJson(url);\n      }\n      /**\n       * Retrieves frames for a DICOM instance.\n       * @param {Object} options options object\n       * @returns {Array} frame items as byte arrays of the pixel data element\n       */\n\n    }, {\n      key: \"retrieveInstanceFrames\",\n      value: function retrieveInstanceFrames(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required for retrieval of instance frames');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required for retrieval of instance frames');\n        }\n\n        if (!('sopInstanceUID' in options)) {\n          throw new Error('SOP Instance UID is required for retrieval of instance frames');\n        }\n\n        if (!('frameNumbers' in options)) {\n          throw new Error('frame numbers are required for retrieval of instance frames');\n        }\n\n        console.log(\"retrieve frames \".concat(options.frameNumbers.toString(), \" of instance \").concat(options.sopInstanceUID));\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID + '/instances/' + options.sopInstanceUID + '/frames/' + options.frameNumbers.toString();\n        var mimeType = options.mimeType ? \"\".concat(options.mimeType) : MIMETYPES.OCTET_STREAM;\n        return this._httpGetByMimeType(url, mimeType).then(multipartDecode);\n      }\n      /**\n       * Retrieves rendered frames for a DICOM instance.\n       * @param {Object} options options object\n       * @returns {Array} frame items as byte arrays of the pixel data element\n       */\n\n    }, {\n      key: \"retrieveInstanceFramesRendered\",\n      value: function retrieveInstanceFramesRendered(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required for retrieval of rendered instance frames');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required for retrieval of rendered instance frames');\n        }\n\n        if (!('sopInstanceUID' in options)) {\n          throw new Error('SOP Instance UID is required for retrieval of rendered instance frames');\n        }\n\n        if (!('frameNumbers' in options)) {\n          throw new Error('frame numbers are required for retrieval of rendered instance frames');\n        }\n\n        console.log(\"retrieve rendered frames \".concat(options.frameNumbers.toString(), \" of instance \").concat(options.sopInstanceUID));\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID + '/instances/' + options.sopInstanceUID + '/frames/' + options.frameNumbers.toString() + '/rendered';\n        var headers = {}; // The choice of an acceptable media type depends on a variety of things:\n        // http://dicom.nema.org/medical/dicom/current/output/chtml/part18/chapter_6.html#table_6.1.1-3\n\n        if ('mimeType' in options) {\n          headers['Accept'] = options.mimeType;\n        }\n\n        var responseType = 'arraybuffer';\n        return this._httpGet(url, headers, responseType);\n      }\n      /**\n       * Retrieves a DICOM instance.\n       * @param {Object} options options object\n       * @returns {Arraybuffer} DICOM Part 10 file as Arraybuffer\n       */\n\n    }, {\n      key: \"retrieveInstance\",\n      value: function retrieveInstance(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required');\n        }\n\n        if (!('sopInstanceUID' in options)) {\n          throw new Error('SOP Instance UID is required');\n        }\n\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID + '/instances/' + options.sopInstanceUID;\n        return this._httpGetByMimeType(url, MIMETYPES.DICOM).then(multipartDecode).then(getFirstResult);\n      }\n      /**\n       * Retrieves a set of DICOM instance for a series.\n       * @param {Object} options options object\n       * @returns {Arraybuffer[]} Array of DICOM Part 10 files as Arraybuffers\n       */\n\n    }, {\n      key: \"retrieveSeries\",\n      value: function retrieveSeries(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required');\n        }\n\n        if (!('seriesInstanceUID' in options)) {\n          throw new Error('Series Instance UID is required');\n        }\n\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID + '/series/' + options.seriesInstanceUID;\n        return this._httpGetByMimeType(url, MIMETYPES.DICOM).then(multipartDecode);\n      }\n      /**\n       * Retrieves a set of DICOM instance for a study.\n       * @param {Object} options options object\n       * @returns {Arraybuffer[]} Array of DICOM Part 10 files as Arraybuffers\n       */\n\n    }, {\n      key: \"retrieveStudy\",\n      value: function retrieveStudy(options) {\n        if (!('studyInstanceUID' in options)) {\n          throw new Error('Study Instance UID is required');\n        }\n\n        var url = this.wadoURL + '/studies/' + options.studyInstanceUID;\n        return this._httpGetByMimeType(url, MIMETYPES.DICOM).then(multipartDecode);\n      }\n      /**\n       * Retrieves and parses BulkData from a BulkDataURI location.\n       * Decodes the multipart encoded data and returns the resulting data\n       * as an ArrayBuffer.\n       *\n       * See http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.5.5.html\n       *\n       * @param {Object} options options object\n       * @return {Promise}\n       */\n\n    }, {\n      key: \"retrieveBulkData\",\n      value: function retrieveBulkData(options) {\n        if (!('BulkDataURI' in options)) {\n          throw new Error('BulkDataURI is required.');\n        }\n\n        return this._httpGetByMimeType(options.BulkDataURI, MIMETYPES.OCTET_STREAM).then(multipartDecode).then(getFirstResult);\n      }\n      /**\n       * Stores DICOM instances.\n       *\n       * @param {Object} options options object\n       */\n\n    }, {\n      key: \"storeInstances\",\n      value: function storeInstances(options) {\n        if (!('datasets' in options)) {\n          throw new Error('datasets are required for storing');\n        }\n\n        var url = \"\".concat(this.stowURL, \"/studies\");\n\n        if ('studyInstanceUID' in options) {\n          url += \"/\".concat(options.studyInstanceUID);\n        }\n\n        var _multipartEncode = multipartEncode(options.datasets),\n            data = _multipartEncode.data,\n            boundary = _multipartEncode.boundary;\n\n        var headers = {\n          'Content-Type': \"multipart/related; type=application/dicom; boundary=\".concat(boundary)\n        };\n        return this._httpPost(url, headers, data, options.progressCallback);\n      }\n    }], [{\n      key: \"_parseQueryParameters\",\n      value: function _parseQueryParameters() {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var queryString = '?';\n        Object.keys(params).forEach(function (key, index) {\n          if (index !== 0) {\n            queryString += '&';\n          }\n\n          queryString += key + '=' + encodeURIComponent(params[key]);\n        });\n        return queryString;\n      }\n    }]);\n\n    return DICOMwebClient;\n  }();\n\n  function findSubstring(str, before, after) {\n    var beforeIndex = str.lastIndexOf(before) + before.length;\n\n    if (beforeIndex < before.length) {\n      return null;\n    }\n\n    if (after !== undefined) {\n      var afterIndex = str.lastIndexOf(after);\n\n      if (afterIndex < 0) {\n        return null;\n      } else {\n        return str.substring(beforeIndex, afterIndex);\n      }\n    }\n\n    return str.substring(beforeIndex);\n  }\n\n  function getStudyInstanceUIDFromUri(uri) {\n    var uid = findSubstring(uri, \"studies/\", \"/series\");\n\n    if (!uid) {\n      uid = findSubstring(uri, \"studies/\");\n    }\n\n    if (!uid) {\n      console.debug('Study Instance UID could not be dertermined from URI \"' + uri + '\"');\n    }\n\n    return uid;\n  }\n\n  function getSeriesInstanceUIDFromUri(uri) {\n    var uid = findSubstring(uri, \"series/\", \"/instances\");\n\n    if (!uid) {\n      uid = findSubstring(uri, \"series/\");\n    }\n\n    if (!uid) {\n      console.debug('Series Instance UID could not be dertermined from URI \"' + uri + '\"');\n    }\n\n    return uid;\n  }\n\n  function getSOPInstanceUIDFromUri(uri) {\n    var uid = findSubstring(uri, \"/instances/\", \"/frames\");\n\n    if (!uid) {\n      uid = findSubstring(uri, \"/instances/\", \"/metadata\");\n    }\n\n    if (!uid) {\n      uid = findSubstring(uri, \"/instances/\");\n    }\n\n    if (!uid) {\n      console.debug('SOP Instance UID could not be dertermined from URI\"' + uri + '\"');\n    }\n\n    return uid;\n  }\n\n  function getFrameNumbersFromUri(uri) {\n    var numbers = findSubstring(uri, \"/frames/\", \"/rendered\");\n\n    if (!numbers) {\n      numbers = findSubstring(uri, \"/frames/\");\n    }\n\n    if (numbers === undefined) {\n      console.debug('Frames Numbers could not be dertermined from URI\"' + uri + '\"');\n    }\n\n    return numbers.split(',');\n  }\n\n  var version = '0.3.2';\n\n  var api = {\n    DICOMwebClient: DICOMwebClient\n  };\n  var utils = {\n    getStudyInstanceUIDFromUri: getStudyInstanceUIDFromUri,\n    getSeriesInstanceUIDFromUri: getSeriesInstanceUIDFromUri,\n    getSOPInstanceUIDFromUri: getSOPInstanceUIDFromUri,\n    getFrameNumbersFromUri: getFrameNumbersFromUri\n  };\n\n  exports.api = api;\n  exports.utils = utils;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=dicomweb-client.js.map\n","import DICOMWeb from '../../../DICOMWeb/';\nimport DICOMwebClient from 'dicomweb-client';\n\n/**\n * Parses data returned from a QIDO search and transforms it into\n * an array of series that are present in the study\n *\n * @param server The DICOM server\n * @param studyInstanceUid\n * @param resultData\n * @returns {Array} Series List\n */\nfunction resultDataToStudyMetadata(server, studyInstanceUid, resultData) {\n    const seriesMap = {};\n    const seriesList = [];\n\n    resultData.forEach(function(instance) {\n        // Use seriesMap to cache series data\n        // If the series instance UID has already been used to\n        // process series data, continue using that series\n        var seriesInstanceUid = DICOMWeb.getString(instance['0020000E']);\n        var series = seriesMap[seriesInstanceUid];\n\n        // If no series data exists in the seriesMap cache variable,\n        // process any available series data\n        if (!series) {\n            series = {\n                seriesInstanceUid: seriesInstanceUid,\n                seriesNumber: DICOMWeb.getString(instance['00200011']),\n                instances: []\n            };\n\n            // Save this data in the seriesMap cache variable\n            seriesMap[seriesInstanceUid] = series;\n            seriesList.push(series);\n        }\n\n        // The uri for the dicomweb\n        // NOTE: DCM4CHEE seems to return the data zipped\n        // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\n        //       know how to parse yet\n        //var uri = DICOMWeb.getString(instance['00081190']);\n        //uri = uri.replace('wado-rs', 'dicom-web');\n\n        // manually create a WADO-URI from the UIDs\n        // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\n        var sopInstanceUid = DICOMWeb.getString(instance['00080018']);\n        var uri = server.wadoUriRoot + '?requestType=WADO&studyUID=' + studyInstanceUid + '&seriesUID=' + seriesInstanceUid + '&objectUID=' + sopInstanceUid + '&contentType=application%2Fdicom';\n\n        // Add this instance to the current series\n        series.instances.push({\n            sopClassUid: DICOMWeb.getString(instance['00080016']),\n            sopInstanceUid: sopInstanceUid,\n            uri: uri,\n            instanceNumber: DICOMWeb.getString(instance['00200013'])\n        });\n    });\n    return seriesList;\n}\n\n/**\n * Retrieve a set of instances using a QIDO call\n * @param server\n * @param studyInstanceUid\n * @throws ECONNREFUSED\n * @returns {{wadoUriRoot: String, studyInstanceUid: String, seriesList: Array}}\n */\nexport default function Instances(server, studyInstanceUid) {\n    // TODO: Are we using this function anywhere?? Can we remove it?\n\n    const config = {\n        url: server.qidoRoot,\n        headers: DICOMWeb.getAuthorizationHeader(server)\n    };\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\n    const queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);\n    const options = {\n        studyInstanceUID: studyInstanceUid\n    };\n\n    return dicomWeb.searchForInstances(options).then(result => {\n        return {\n            wadoUriRoot: server.wadoUriRoot,\n            studyInstanceUid: studyInstanceUid,\n            seriesList: resultDataToStudyMetadata(server, studyInstanceUid, result.data)\n        };\n    });\n};\n","import DICOMwebClient from 'dicomweb-client';\nimport DICOMWeb from '../../../DICOMWeb/';\n\n/**\n * Creates a QIDO date string for a date range query\n * Assumes the year is positive, at most 4 digits long.\n *\n * @param date The Date object to be formatted\n * @returns {string} The formatted date string\n */\nfunction dateToString(date) {\n    if (!date) return '';\n    let year = date.getFullYear().toString();\n    let month = (date.getMonth() + 1).toString();\n    let day = date.getDate().toString();\n    year = '0'.repeat(4 - year.length).concat(year);\n    month = '0'.repeat(2 - month.length).concat(month);\n    day = '0'.repeat(2 - day.length).concat(day);\n    return ''.concat(year, month, day);\n}\n\n/**\n * Produces a QIDO URL given server details and a set of specified search filter\n * items\n *\n * @param filter\n * @param serverSupportsQIDOIncludeField\n * @returns {string} The URL with encoded filter query data\n */\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\n    const commaSeparatedFields = [\n        '00081030', // Study Description\n        '00080060' //Modality\n        // Add more fields here if you want them in the result\n    ].join(',');\n\n    const parameters = {\n        PatientName: filter.patientName,\n        PatientID: filter.patientId,\n        AccessionNumber: filter.accessionNumber,\n        StudyDescription: filter.studyDescription,\n        ModalitiesInStudy: filter.modalitiesInStudy,\n        limit: filter.limit,\n        offset: filter.offset,\n        includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all'\n    };\n\n    // build the StudyDate range parameter\n    if (filter.studyDateFrom || filter.studyDateTo) {\n        const dateFrom = dateToString(new Date(filter.studyDateFrom));\n        const dateTo = dateToString(new Date(filter.studyDateTo));\n        parameters.StudyDate = `${dateFrom}-${dateTo}`;\n    }\n\n    // Build the StudyInstanceUID parameter\n    if (filter.studyInstanceUid) {\n        let studyUids = filter.studyInstanceUid;\n        studyUids = Array.isArray(studyUids) ? studyUids.join() : studyUids;\n        studyUids = studyUids.replace(/[^0-9.]+/g, '\\\\');\n        parameters.StudyInstanceUID = studyUids;\n    }\n\n    // Clean query params of undefined values.\n    const params = {};\n    Object.keys(parameters).forEach(key => {\n        if (parameters[key] !== undefined &&\n            parameters[key] !== \"\") {\n            params[key] = parameters[key];\n        }\n    });\n\n    return params;\n}\n\n/**\n * Parses resulting data from a QIDO call into a set of Study MetaData\n *\n * @param resultData\n * @returns {Array} An array of Study MetaData objects\n */\nfunction resultDataToStudies(resultData) {\n    const studies = [];\n\n    if (!resultData || !resultData.length) return;\n\n    resultData.forEach(study => studies.push({\n        studyInstanceUid: DICOMWeb.getString(study['0020000D']),\n        // 00080005 = SpecificCharacterSet\n        studyDate: DICOMWeb.getString(study['00080020']),\n        studyTime: DICOMWeb.getString(study['00080030']),\n        accessionNumber: DICOMWeb.getString(study['00080050']),\n        referringPhysicianName: DICOMWeb.getString(study['00080090']),\n        // 00081190 = URL\n        patientName: DICOMWeb.getName(study['00100010']),\n        patientId: DICOMWeb.getString(study['00100020']),\n        patientBirthdate: DICOMWeb.getString(study['00100030']),\n        patientSex: DICOMWeb.getString(study['00100040']),\n        studyId: DICOMWeb.getString(study['00200010']),\n        numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\n        numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\n        studyDescription: DICOMWeb.getString(study['00081030']),\n        // modality: DICOMWeb.getString(study['00080060']),\n        // modalitiesInStudy: DICOMWeb.getString(study['00080061']),\n        modalities: DICOMWeb.getString(DICOMWeb.getModalities(study['00080060'], study['00080061']))\n    }));\n\n    return studies;\n}\n\nexport default function Studies(server, filter) {\n    const config = {\n        url: server.qidoRoot,\n        headers: DICOMWeb.getAuthorizationHeader(server)\n    };\n\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\n    const queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);\n    const options = {\n        queryParams\n    };\n\n    return dicomWeb.searchForStudies(options).then(resultDataToStudies);\n};\n","import DICOMwebClient from 'dicomweb-client';\nimport DICOMWeb from '../../../DICOMWeb/';\n\nconst WADOProxy = {\n    convertURL: (url, server) => {\n        // TODO: Remove all WADOProxy stuff from this file\n        return url;\n    }\n}\n\nfunction parseFloatArray(obj) {\n  const result = [];\n\n  if (!obj) {\n    return result;\n  }\n\n  const objs = obj.split('\\\\');\n  for (let i = 0; i < objs.length; i++) {\n    result.push(parseFloat(objs[i]));\n  }\n\n  return result;\n}\n\n/**\n * Simple cache schema for retrieved color palettes.\n */\nconst paletteColorCache = {\n    count: 0,\n    maxAge: 24 * 60 * 60 * 1000, // 24h cache?\n    entries: {},\n    isValidUID: function (paletteUID) {\n        return typeof paletteUID === 'string' && paletteUID.length > 0;\n    },\n    get: function (paletteUID) {\n        let entry = null;\n        if (this.entries.hasOwnProperty(paletteUID)) {\n            entry = this.entries[paletteUID];\n            // check how the entry is...\n            if ((Date.now() - entry.time) > this.maxAge) {\n                // entry is too old... remove entry.\n                delete this.entries[paletteUID];\n                this.count--;\n                entry = null;\n            }\n        }\n        return entry;\n    },\n    add: function (entry) {\n        if (this.isValidUID(entry.uid)) {\n            let paletteUID = entry.uid;\n            if (this.entries.hasOwnProperty(paletteUID) !== true) {\n                this.count++; // increment cache entry count...\n            }\n            entry.time = Date.now();\n            this.entries[paletteUID] = entry;\n            // @TODO: Add logic to get rid of old entries and reduce memory usage...\n        }\n    }\n};\n\n/** Returns a WADO url for an instance\n *\n * @param studyInstanceUid\n * @param seriesInstanceUid\n * @param sopInstanceUid\n * @returns  {string}\n */\nfunction buildInstanceWadoUrl(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid) {\n    // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\n    const params = [];\n\n    params.push('requestType=WADO');\n    params.push(`studyUID=${studyInstanceUid}`);\n    params.push(`seriesUID=${seriesInstanceUid}`);\n    params.push(`objectUID=${sopInstanceUid}`);\n    params.push('contentType=application/dicom');\n    params.push('transferSyntax=*');\n\n    const paramString = params.join('&');\n\n    return `${server.wadoUriRoot}?${paramString}`;\n}\n\nfunction buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid) {\n    return `${server.wadoRoot}/studies/${studyInstanceUid}/series/${seriesInstanceUid}/instances/${sopInstanceUid}`\n}\n\nfunction buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid, frame) {\n    const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\n    frame = frame != null || 1;\n\n    return `${baseWadoRsUri}/frames/${frame}`\n}\n\n/**\n * Parses the SourceImageSequence, if it exists, in order\n * to return a ReferenceSOPInstanceUID. The ReferenceSOPInstanceUID\n * is used to refer to this image in any accompanying DICOM-SR documents.\n *\n * @param instance\n * @returns {String} The ReferenceSOPInstanceUID\n */\nfunction getSourceImageInstanceUid(instance) {\n    // TODO= Parse the whole Source Image Sequence\n    // This is a really poor workaround for now.\n    // Later we should probably parse the whole sequence.\n    var SourceImageSequence = instance['00082112'];\n    if (SourceImageSequence && SourceImageSequence.Value && SourceImageSequence.Value.length) {\n        return SourceImageSequence.Value[0]['00081155'].Value[0];\n    }\n}\n\nfunction getPaletteColor(server, instance, tag, lutDescriptor) {\n    const numLutEntries = lutDescriptor[0];\n    const bits = lutDescriptor[2];\n\n    let uri = WADOProxy.convertURL(instance[tag].BulkDataURI, server)\n\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\n    // incorrect bulk data URIs\n    if (server.wadoRoot.indexOf('https') === 0 &&\n        !uri.includes('https')) {\n        uri = uri.replace('http', 'https');\n    }\n\n    const config = {\n        url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\n        headers: DICOMWeb.getAuthorizationHeader(server)\n    };\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\n    const options = {\n        BulkDataURI: uri\n    };\n\n    const readUInt16 = (byteArray, position) => {\n        return byteArray[position] + (byteArray[position + 1] * 256);\n    }\n\n    const arrayBufferToPaletteColorLUT = (arraybuffer) =>{\n        const byteArray = new Uint8Array(arraybuffer);\n        const lut = [];\n\n        for (let i = 0; i < numLutEntries; i++) {\n            if (bits === 16) {\n                lut[i] = readUInt16(byteArray, i * 2);\n            } else {\n                lut[i] = byteArray[i];\n            }\n        }\n\n        return lut;\n    }\n\n    return dicomWeb.retrieveBulkData(options).then(arrayBufferToPaletteColorLUT)\n}\n\n/**\n * Fetch palette colors for instances with \"PALETTE COLOR\" photometricInterpretation.\n *\n * @param server {Object} Current server;\n * @param instance {Object} The retrieved instance metadata;\n * @returns {String} The ReferenceSOPInstanceUID\n */\nasync function getPaletteColors(server, instance, lutDescriptor) {\n    let paletteUID = DICOMWeb.getString(instance['00281199']);\n\n    return new Promise((resolve, reject) => {\n        if (paletteColorCache.isValidUID(paletteUID)) {\n            const entry = paletteColorCache.get(paletteUID);\n\n            if (entry) {\n                return resolve(entry);\n            }\n        }\n\n        // no entry in cache... Fetch remote data.\n        const r = getPaletteColor(server, instance, '00281201', lutDescriptor);\n        const g = getPaletteColor(server, instance, '00281202', lutDescriptor);\n        const b = getPaletteColor(server, instance, '00281203', lutDescriptor);\n\n        const promises = [r, g, b];\n\n        Promise.all(promises).then((args) => {\n            entry = {\n                red: args[0],\n                green: args[1],\n                blue: args[2]\n            };\n\n            // when paletteUID is present, the entry can be cached...\n            entry.uid = paletteUID;\n            paletteColorCache.add(entry);\n\n            resolve(entry);\n        });\n    });\n}\n\nfunction getFrameIncrementPointer(element) {\n    const frameIncrementPointerNames = {\n        '00181065': 'frameTimeVector',\n        '00181063': 'frameTime'\n    };\n\n    if(!element || !element.Value || !element.Value.length) {\n        return;\n    }\n\n    const value = element.Value[0];\n    return frameIncrementPointerNames[value];\n}\n\nfunction getRadiopharmaceuticalInfo(instance) {\n    const modality = DICOMWeb.getString(instance['00080060']);\n\n    if (modality !== 'PT') {\n        return;\n    }\n\n    const radiopharmaceuticalInfo = instance['00540016'];\n    if ((radiopharmaceuticalInfo === undefined) || !radiopharmaceuticalInfo.Value || !radiopharmaceuticalInfo.Value.length) {\n        return;\n    }\n\n    const firstPetRadiopharmaceuticalInfo = radiopharmaceuticalInfo.Value[0];\n    return {\n        radiopharmaceuticalStartTime: DICOMWeb.getString(firstPetRadiopharmaceuticalInfo['00181072']),\n        radionuclideTotalDose: DICOMWeb.getNumber(firstPetRadiopharmaceuticalInfo['00181074']),\n        radionuclideHalfLife: DICOMWeb.getNumber(firstPetRadiopharmaceuticalInfo['00181075'])\n    };\n}\n\n/**\n * Parses result data from a WADO search into Study MetaData\n * Returns an object populated with study metadata, including the\n * series list.\n *\n * @param server\n * @param studyInstanceUid\n * @param resultData\n * @returns {{seriesList: Array, patientName: *, patientId: *, accessionNumber: *, studyDate: *, modalities: *, studyDescription: *, imageCount: *, studyInstanceUid: *}}\n */\nasync function resultDataToStudyMetadata(server, studyInstanceUid, resultData) {\n    if (!resultData.length) {\n        return;\n    }\n\n    const anInstance = resultData[0];\n    if (!anInstance) {\n        return;\n    }\n\n    const studyData = {\n        seriesList: [],\n        studyInstanceUid,\n        wadoUriRoot: server.wadoUriRoot,\n        patientName: DICOMWeb.getName(anInstance['00100010']),\n        patientId: DICOMWeb.getString(anInstance['00100020']),\n        patientAge: DICOMWeb.getNumber(anInstance['00101010']),\n        patientSize: DICOMWeb.getNumber(anInstance['00101020']),\n        patientWeight: DICOMWeb.getNumber(anInstance['00101030']),\n        accessionNumber: DICOMWeb.getString(anInstance['00080050']),\n        studyDate: DICOMWeb.getString(anInstance['00080020']),\n        modalities: DICOMWeb.getString(anInstance['00080061']),\n        studyDescription: DICOMWeb.getString(anInstance['00081030']),\n        imageCount: DICOMWeb.getString(anInstance['00201208']),\n        studyInstanceUid: DICOMWeb.getString(anInstance['0020000D']),\n        institutionName: DICOMWeb.getString(anInstance['00080080'])\n    };\n\n    const seriesMap = {};\n\n    await Promise.all(resultData.map(async function(instance) {\n        const seriesInstanceUid = DICOMWeb.getString(instance['0020000E']);\n        let series = seriesMap[seriesInstanceUid];\n\n        if (!series) {\n            series = {\n                seriesDescription: DICOMWeb.getString(instance['0008103E']),\n                modality: DICOMWeb.getString(instance['00080060']),\n                seriesInstanceUid: seriesInstanceUid,\n                seriesNumber: DICOMWeb.getNumber(instance['00200011']),\n                seriesDate: DICOMWeb.getString(instance['00080021']),\n                seriesTime: DICOMWeb.getString(instance['00080031']),\n                instances: []\n            };\n            seriesMap[seriesInstanceUid] = series;\n            studyData.seriesList.push(series);\n        }\n\n        const sopInstanceUid = DICOMWeb.getString(instance['00080018']);\n        const wadouri = buildInstanceWadoUrl(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\n        const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\n        const wadorsuri = buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\n\n        const instanceSummary = {\n            imageType: DICOMWeb.getString(instance['00080008']),\n            sopClassUid: DICOMWeb.getString(instance['00080016']),\n            modality: DICOMWeb.getString(instance['00080060']),\n            sopInstanceUid,\n            instanceNumber: DICOMWeb.getNumber(instance['00200013']),\n            imagePositionPatient: DICOMWeb.getString(instance['00200032']),\n            imageOrientationPatient: DICOMWeb.getString(instance['00200037']),\n            frameOfReferenceUID: DICOMWeb.getString(instance['00200052']),\n            sliceLocation: DICOMWeb.getNumber(instance['00201041']),\n            samplesPerPixel: DICOMWeb.getNumber(instance['00280002']),\n            photometricInterpretation: DICOMWeb.getString(instance['00280004']),\n            planarConfiguration: DICOMWeb.getNumber(instance['00280006']),\n            rows: DICOMWeb.getNumber(instance['00280010']),\n            columns: DICOMWeb.getNumber(instance['00280011']),\n            pixelSpacing: DICOMWeb.getString(instance['00280030']),\n            pixelAspectRatio: DICOMWeb.getString(instance['00280034']),\n            bitsAllocated: DICOMWeb.getNumber(instance['00280100']),\n            bitsStored: DICOMWeb.getNumber(instance['00280101']),\n            highBit: DICOMWeb.getNumber(instance['00280102']),\n            pixelRepresentation: DICOMWeb.getNumber(instance['00280103']),\n            smallestPixelValue: DICOMWeb.getNumber(instance['00280106']),\n            largestPixelValue: DICOMWeb.getNumber(instance['00280107']),\n            windowCenter: DICOMWeb.getString(instance['00281050']),\n            windowWidth: DICOMWeb.getString(instance['00281051']),\n            rescaleIntercept: DICOMWeb.getNumber(instance['00281052']),\n            rescaleSlope: DICOMWeb.getNumber(instance['00281053']),\n            rescaleType: DICOMWeb.getNumber(instance['00281054']),\n            sourceImageInstanceUid: getSourceImageInstanceUid(instance),\n            laterality: DICOMWeb.getString(instance['00200062']),\n            viewPosition: DICOMWeb.getString(instance['00185101']),\n            acquisitionDateTime: DICOMWeb.getString(instance['0008002A']),\n            numberOfFrames: DICOMWeb.getNumber(instance['00280008']),\n            frameIncrementPointer: getFrameIncrementPointer(instance['00280009']),\n            frameTime: DICOMWeb.getNumber(instance['00181063']),\n            frameTimeVector: parseFloatArray(DICOMWeb.getString(instance['00181065'])),\n            sliceThickness: DICOMWeb.getNumber(instance['00180050']),\n            lossyImageCompression: DICOMWeb.getString(instance['00282110']),\n            derivationDescription: DICOMWeb.getString(instance['00282111']),\n            lossyImageCompressionRatio: DICOMWeb.getString(instance['00282112']),\n            lossyImageCompressionMethod: DICOMWeb.getString(instance['00282114']),\n            echoNumber: DICOMWeb.getString(instance['00180086']),\n            contrastBolusAgent: DICOMWeb.getString(instance['00180010']),\n            radiopharmaceuticalInfo: getRadiopharmaceuticalInfo(instance),\n            baseWadoRsUri: baseWadoRsUri,\n            wadouri: WADOProxy.convertURL(wadouri, server),\n            wadorsuri: WADOProxy.convertURL(wadorsuri, server),\n            imageRendering: server.imageRendering,\n            thumbnailRendering: server.thumbnailRendering\n        };\n\n        // Get additional information if the instance uses \"PALETTE COLOR\" photometric interpretation\n        if (instanceSummary.photometricInterpretation === 'PALETTE COLOR') {\n            const redPaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281101']));\n            const greenPaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281102']));\n            const bluePaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281103']));\n            const palettes = await getPaletteColors(server, instance, redPaletteColorLookupTableDescriptor);\n\n            if (palettes) {\n                if (palettes.uid) {\n                    instanceSummary.paletteColorLookupTableUID = palettes.uid;\n                }\n\n                instanceSummary.redPaletteColorLookupTableData = palettes.red;\n                instanceSummary.greenPaletteColorLookupTableData = palettes.green;\n                instanceSummary.bluePaletteColorLookupTableData = palettes.blue;\n                instanceSummary.redPaletteColorLookupTableDescriptor = redPaletteColorLookupTableDescriptor;\n                instanceSummary.greenPaletteColorLookupTableDescriptor = greenPaletteColorLookupTableDescriptor;\n                instanceSummary.bluePaletteColorLookupTableDescriptor = bluePaletteColorLookupTableDescriptor;\n            }\n        }\n\n        series.instances.push(instanceSummary);\n    }));\n\n    return studyData;\n}\n\n/**\n * Retrieve Study MetaData from a DICOM server using a WADO call\n *\n * @param server\n * @param studyInstanceUid\n * @returns {Promise}\n */\nasync function RetrieveMetadata (server, studyInstanceUid) {\n    const config = {\n        url: server.wadoRoot,\n        headers: DICOMWeb.getAuthorizationHeader(server)\n    };\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\n    const options = {\n        studyInstanceUID: studyInstanceUid\n    };\n\n    return dicomWeb.retrieveStudyMetadata(options).then(result => {\n        return resultDataToStudyMetadata(server, studyInstanceUid, result);\n    });\n};\n\nexport default RetrieveMetadata;\n","// DICOMWeb instance, study, and metadata retrieval\nimport Instances from './qido/instances.js';\nimport Studies from './qido/studies.js';\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\n\nconst WADO = {\n  RetrieveMetadata\n};\n\nconst QIDO = {\n  Studies,\n  Instances\n};\n\nexport { QIDO, WADO };\n","const log = {\n  error: console.error,\n  warn: console.warn,\n  info: console.log,\n  debug: console.debug,\n  time: console.time,\n  timeEnd: console.timeEnd,\n};\n\nexport default log;\n","import log from '../log.js';\nimport RetrieveMetadata from './services/wado/retrieveMetadata.js';\n\n// Define the StudyMetaDataPromises object. This is used as a cache to store study meta data\n// promises and prevent unnecessary subsequent calls to the server\nconst StudyMetaDataPromises = new Map();\n\n/**\n * Delete the cached study metadata retrieval promise to ensure that the browser will\n * re-retrieve the study metadata when it is next requested\n *\n * @param {String} studyInstanceUid The UID of the Study to be removed from cache\n *\n */\nexport function deleteStudyMetadataPromise(studyInstanceUid) {\n  if (StudyMetaDataPromises.has(studyInstanceUid)) {\n    StudyMetaDataPromises.delete(studyInstanceUid);\n  }\n}\n\n/**\n * Retrieves study metadata using a server call\n *\n * @param {String} studyInstanceUid The UID of the Study to be retrieved\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport function retrieveStudyMetadata(\n  server,\n  studyInstanceUid,\n  seriesInstanceUids\n) {\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\n\n  // If the StudyMetaDataPromises cache already has a pending or resolved promise related to the\n  // given studyInstanceUid, then that promise is returned\n  if (StudyMetaDataPromises.has(studyInstanceUid)) {\n    return StudyMetaDataPromises.get(studyInstanceUid);\n  }\n\n  const seriesKeys = Array.isArray(seriesInstanceUids)\n    ? '|' + seriesInstanceUids.join('|')\n    : '';\n  const timingKey = `retrieveStudyMetadata[${studyInstanceUid}${seriesKeys}]`;\n  log.time(timingKey);\n\n  // Create a promise to handle the data retrieval\n  const promise = new Promise((resolve, reject) => {\n    // If no study metadata is in the cache variable, we need to retrieve it from\n    // the server with a call.\n    if (\n      server.type === 'dicomWeb' &&\n      server.requestOptions.requestFromBrowser === true\n    ) {\n      RetrieveMetadata(server, studyInstanceUid).then(function(data) {\n        resolve(data);\n      }, reject);\n    }\n  });\n\n  // Store the promise in cache\n  StudyMetaDataPromises.set(studyInstanceUid, promise);\n\n  return promise;\n}\n","\n/**\n * Constants\n */\n\nconst STRING = 'string';\nconst NUMBER = 'number';\nconst FUNCTION = 'function';\nconst OBJECT = 'object';\n\n/**\n * Class Definition\n */\n\nexport class Metadata {\n\n    /**\n     * Constructor and Instance Methods\n     */\n\n    constructor(data, uid) {\n        // Define the main \"_data\" private property as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_data', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: data\n        });\n\n        // Define the main \"_uid\" private property as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_uid', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: uid\n        });\n\n        // Define \"_custom\" properties as an immutable property.\n        // IMPORTANT: This property can only be set during instance construction.\n        Object.defineProperty(this, '_custom', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: Object.create(null)\n        });\n    }\n\n    getData() {\n        return this._data;\n    }\n\n    getDataProperty(propertyName) {\n        let propertyValue;\n        const _data = this._data;\n        if (_data instanceof Object || typeof _data === OBJECT && _data !== null) {\n            propertyValue = _data[propertyName];\n        }\n        return propertyValue;\n    }\n\n    /**\n     * Get unique object ID\n     */\n    getObjectID() {\n        return this._uid;\n    }\n\n    /**\n     * Set custom attribute value\n     * @param {String} attribute Custom attribute name\n     * @param {Any} value     Custom attribute value\n     */\n    setCustomAttribute(attribute, value) {\n        this._custom[attribute] = value;\n    }\n\n    /**\n     * Get custom attribute value\n     * @param  {String} attribute Custom attribute name\n     * @return {Any}              Custom attribute value\n     */\n    getCustomAttribute(attribute) {\n        return this._custom[attribute];\n    }\n\n    /**\n     * Check if a custom attribute exists\n     * @param  {String} attribute Custom attribute name\n     * @return {Boolean}          True if custom attribute exists or false if not\n     */\n    customAttributeExists(attribute) {\n        return attribute in this._custom;\n    }\n\n    /**\n     * Set custom attributes in batch mode.\n     * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\n     */\n    setCustomAttributes(attributeMap) {\n        const _hasOwn = Object.prototype.hasOwnProperty;\n        const _custom = this._custom;\n        for (let attribute in attributeMap) {\n            if (_hasOwn.call(attributeMap, attribute)) {\n                _custom[attribute] = attributeMap[attribute];\n            }\n        }\n    }\n\n    /**\n     * Static Methods\n     */\n\n    static isValidUID(uid) {\n        return typeof uid === STRING && uid.length > 0;\n    }\n\n    static isValidIndex(index) {\n        return typeof index === NUMBER && index >= 0 && (index | 0) === index;\n    }\n\n    static isValidCallback(callback) {\n        return typeof callback === FUNCTION;\n    }\n\n}\n","// @TODO: improve this object\n/**\n * Objects to be used to throw errors\n */\nclass OHIFError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n    this.stack = new Error().stack;\n    this.name = this.constructor.name;\n  }\n}\n\nexport default OHIFError;\n","import { Metadata } from './Metadata';\nimport OHIFError from '../OHIFError.js';\n\n/**\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\n * possibly cause circular dependency issues.\n */\n\nconst UNDEFINED = 'undefined';\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst STUDY_INSTANCE_UID = 'x0020000d';\nconst SERIES_INSTANCE_UID = 'x0020000e';\n\nexport class InstanceMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _sopInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n      _imageId: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null\n      }\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.sopInstanceUID\n     * Same as this.getSOPInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * sopInstanceCollection.findBy({\n     *   sopInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'sopInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getSOPInstanceUID();\n      }\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getStudyInstanceUID() {\n    return this.getTagValue(STUDY_INSTANCE_UID, null);\n  }\n\n  /**\n   * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getSeriesInstanceUID() {\n    return this.getTagValue(SERIES_INSTANCE_UID, null);\n  }\n\n  /**\n   * Returns the SOPInstanceUID of the current instance.\n   */\n  getSOPInstanceUID() {\n    return this._sopInstanceUID;\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getStringValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n\n    if (typeof value !== STRING && typeof value !== UNDEFINED) {\n      value = value.toString();\n    }\n\n    return InstanceMetadata.getIndexedValue(value, index, defaultValue);\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getFloatValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseFloat(value) : value;\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getIntValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseInt(value) : value;\n  }\n\n  /**\n   * @deprecated Please use getTagValue instead.\n   */\n  getRawValue(tagOrProperty, defaultValue) {\n    return this.getTagValue(tagOrProperty, defaultValue);\n  }\n\n  /**\n   * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\n   */\n  getTagValue(tagOrProperty, defaultValue) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Compares the current instance with another one.\n   * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same instance.\n   */\n  equals(instance) {\n    const self = this;\n    return (\n      instance === self ||\n      (instance instanceof InstanceMetadata &&\n        instance.getSOPInstanceUID() === self.getSOPInstanceUID())\n    );\n  }\n\n  /**\n   * Check if the tagOrProperty exists\n   * @param  {String} tagOrProperty tag or property be checked\n   * @return {Boolean}   True if the tag or property exists or false if doesn't\n   */\n  tagExists(tagOrProperty) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Get custom image id of a sop instance\n   * @return {Any}          sop instance image id\n   */\n  getImageId(frame) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Static Methods\n   */\n\n  /**\n   * Get an value based that can be index based. This function is called by all getters. See above functions.\n   *     - If value is a String and has indexes:\n   *         - If undefined index: returns an array of the split values.\n   *         - If defined index:\n   *             - If invalid: returns defaultValue\n   *             - If valid: returns the indexed value\n   *      - If value is not a String, returns default value.\n   */\n  static getIndexedValue(value, index, defaultValue) {\n    let result = defaultValue;\n\n    if (typeof value === STRING) {\n      const hasIndexValues = value.indexOf('\\\\') !== -1;\n\n      result = value;\n\n      if (hasIndexValues) {\n        const splitValues = value.split('\\\\');\n        if (Metadata.isValidIndex(index)) {\n          const indexedValue = splitValues[index];\n\n          result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\n        } else {\n          result = splitValues;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n","import { Metadata } from './Metadata';\nimport { InstanceMetadata } from './InstanceMetadata';\n\nexport class SeriesMetadata extends Metadata {\n\n    constructor(data, uid) {\n        super(data, uid);\n        // Initialize Private Properties\n        Object.defineProperties(this, {\n            _seriesInstanceUID: {\n                configurable: true, // configurable so that it can be redefined in sub-classes...\n                enumerable: false,\n                writable: true,\n                value: null\n            },\n            _instances: {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: []\n            },\n            _firstInstance: {\n                configurable: false,\n                enumerable: false,\n                writable: true,\n                value: null\n            }\n        });\n        // Initialize Public Properties\n        this._definePublicProperties();\n    }\n\n    /**\n     * Private Methods\n     */\n\n    /**\n     * Define Public Properties\n     * This method should only be called during initialization (inside the class constructor)\n     */\n    _definePublicProperties() {\n\n        /**\n         * Property: this.seriesInstanceUID\n         * Same as this.getSeriesInstanceUID()\n         * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n         * seriesCollection.findBy({\n         *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n         * });\n         */\n        Object.defineProperty(this, 'seriesInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            get: function() {\n                return this.getSeriesInstanceUID();\n            }\n        });\n\n    }\n\n    /**\n     * Public Methods\n     */\n\n    /**\n     * Returns the SeriesInstanceUID of the current series.\n     */\n    getSeriesInstanceUID() {\n        return this._seriesInstanceUID;\n    }\n\n    /**\n     * Append an instance to the current series.\n     * @param {InstanceMetadata} instance The instance to be added to the current series.\n     * @returns {boolean} Returns true on success, false otherwise.\n     */\n    addInstance(instance) {\n        let result = false;\n        if (instance instanceof InstanceMetadata && this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0) {\n            this._instances.push(instance);\n            result = true;\n        }\n        return result;\n    }\n\n    /**\n     * Get the first instance of the current series retaining a consistent result across multiple calls.\n     * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n     */\n    getFirstInstance() {\n        let instance = this._firstInstance;\n        if (!(instance instanceof InstanceMetadata)) {\n            instance = null;\n            const found = this.getInstanceByIndex(0);\n            if (found instanceof InstanceMetadata) {\n                this._firstInstance = found;\n                instance = found;\n            }\n        }\n        return instance;\n    }\n\n    /**\n     * Find an instance by index.\n     * @param {number} index An integer representing a list index.\n     * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n     */\n    getInstanceByIndex(index) {\n        let found; // undefined by default...\n        if (Metadata.isValidIndex(index)) {\n            found = this._instances[index];\n        }\n        return found;\n    }\n\n    /**\n     * Find an instance by SOPInstanceUID.\n     * @param {string} uid An UID string.\n     * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n     */\n    getInstanceByUID(uid) {\n        let found; // undefined by default...\n        if (Metadata.isValidUID(uid)) {\n            found = this._instances.find(instance => {\n                return instance.getSOPInstanceUID() === uid;\n            });\n        }\n        return found;\n    }\n\n    /**\n     * Retrieve the number of instances within the current series.\n     * @returns {number} The number of instances in the current series.\n     */\n    getInstanceCount() {\n        return this._instances.length;\n    }\n\n    /**\n     * Invokes the supplied callback for each instance in the current series passing\n     * two arguments: instance (an InstanceMetadata instance) and index (the integer\n     * index of the instance within the current series)\n     * @param {function} callback The callback function which will be invoked for each instance in the series.\n     * @returns {undefined} Nothing is returned.\n     */\n    forEachInstance(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            this._instances.forEach((instance, index) => {\n                callback.call(null, instance, index);\n            });\n        }\n    }\n\n    /**\n     * Find the index of an instance inside the series.\n     * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\n     * @returns {number} The index of the instance inside the series or -1 if not found.\n     */\n    indexOfInstance(instance) {\n        return this._instances.indexOf(instance);\n    }\n\n    /**\n     * Search the associated instances using the supplied callback as criteria. The callback is passed\n     * two arguments: instance (a InstanceMetadata instance) and index (the integer\n     * index of the instance within its series)\n     * @param {function} callback The callback function which will be invoked for each instance.\n     * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n     *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n     */\n    findInstance(callback) {\n        if (Metadata.isValidCallback(callback)) {\n            return this._instances.find((instance, index) => {\n                return callback.call(null, instance, index);\n            });\n        }\n    }\n\n    /**\n     * Compares the current series with another one.\n     * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n     * @returns {boolean} Returns true if both instances refer to the same series.\n     */\n    equals(series) {\n        const self = this;\n        return (\n            series === self ||\n            (\n                series instanceof SeriesMetadata &&\n                series.getSeriesInstanceUID() === self.getSeriesInstanceUID()\n            )\n        );\n    }\n\n}\n","/**\n * Create a random GUID\n *\n * @return {string}\n */\nexport default function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return (\n    s4() +\n    s4() +\n    '-' +\n    s4() +\n    '-' +\n    s4() +\n    '-' +\n    s4() +\n    '-' +\n    s4() +\n    s4() +\n    s4()\n  );\n}\n","import guid from '../utils/guid.js';\nimport OHIFError from './OHIFError';\n\nconst OBJECT = 'object';\n\n/**\n * This class defines an ImageSet object which will be used across the viewer. This object represents\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\n * indiscriminately, but this should be changed).\n */\nclass ImageSet {\n  constructor(images) {\n    if (Array.isArray(images) !== true) {\n      throw new OHIFError('ImageSet expects an array of images');\n    }\n\n    // @property \"images\"\n    Object.defineProperty(this, 'images', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: images\n    });\n\n    // @property \"uid\"\n    Object.defineProperty(this, 'uid', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: guid() // Unique ID of the instance\n    });\n  }\n\n  getUID() {\n    return this.uid;\n  }\n\n  setAttribute(attribute, value) {\n    this[attribute] = value;\n  }\n\n  getAttribute(attribute) {\n    return this[attribute];\n  }\n\n  setAttributes(attributes) {\n    if (typeof attributes === OBJECT && attributes !== null) {\n      const imageSet = this,\n        hasOwn = Object.prototype.hasOwnProperty;\n      for (let attribute in attributes) {\n        if (hasOwn.call(attributes, attribute)) {\n          imageSet[attribute] = attributes[attribute];\n        }\n      }\n    }\n  }\n\n  getImage(index) {\n    return this.images[index];\n  }\n\n  sortBy(sortingCallback) {\n    return this.images.sort(sortingCallback);\n  }\n}\n\nexport default ImageSet;\n","import { Metadata } from './Metadata';\nimport { SeriesMetadata } from './SeriesMetadata';\nimport { InstanceMetadata } from './InstanceMetadata';\nimport ImageSet from '../ImageSet';\nimport OHIFError from '../OHIFError';\n\nexport class StudyMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _studyInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: []\n      },\n      _displaySets: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: []\n      },\n      _firstSeries: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null\n      },\n      _firstInstance: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null\n      }\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.studyInstanceUID\n     * Same as this.getStudyInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * studyCollection.findBy({\n     *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'studyInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getStudyInstanceUID();\n      }\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Getter for displaySets\n   * @return {Array} Array of display set object\n   */\n  getDisplaySets() {\n    return this._displaySets.slice();\n  }\n\n  /**\n   * Set display sets\n   * @param {Array} displaySets Array of display sets (ImageSet[])\n   */\n  setDisplaySets(displaySets) {\n    displaySets.forEach(displaySet => this.addDisplaySet(displaySet));\n  }\n\n  /**\n   * Add a single display set to the list\n   * @param {Object} displaySet Display set object\n   * @returns {boolean} True on success, false on failure.\n   */\n  addDisplaySet(displaySet) {\n    if (displaySet instanceof ImageSet) {\n      this._displaySets.push(displaySet);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Invokes the supplied callback for each display set in the current study passing\n   * two arguments: display set (a ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._displaySets.forEach((displaySet, index) => {\n        callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Search the associated display sets using the supplied callback as criteria. The callback is passed\n   * two arguments: display set (a ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  findDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      return this._displaySets.find((displaySet, index) => {\n        return callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Retrieve the number of display sets within the current study.\n   * @returns {number} The number of display sets in the current study.\n   */\n  getDisplaySetCount() {\n    return this._displaySets.length;\n  }\n\n  /**\n   * Returns the StudyInstanceUID of the current study.\n   */\n  getStudyInstanceUID() {\n    return this._studyInstanceUID;\n  }\n\n  /**\n   * Getter for series\n   * @return {Array} Array of SeriesMetadata object\n   */\n  getSeries() {\n    return this._series.slice();\n  }\n\n  /**\n   * Append a series to the current study.\n   * @param {SeriesMetadata} series The series to be added to the current study.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  addSeries(series) {\n    let result = false;\n    if (\n      series instanceof SeriesMetadata &&\n      this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0\n    ) {\n      this._series.push(series);\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Find a series by index.\n   * @param {number} index An integer representing a list index.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByIndex(index) {\n    let found; // undefined by default...\n    if (Metadata.isValidIndex(index)) {\n      found = this._series[index];\n    }\n    return found;\n  }\n\n  /**\n   * Find a series by SeriesInstanceUID.\n   * @param {string} uid An UID string.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByUID(uid) {\n    let found; // undefined by default...\n    if (Metadata.isValidUID(uid)) {\n      found = this._series.find(series => {\n        return series.getSeriesInstanceUID() === uid;\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Retrieve the number of series within the current study.\n   * @returns {number} The number of series in the current study.\n   */\n  getSeriesCount() {\n    return this._series.length;\n  }\n\n  /**\n   * Retrieve the number of instances within the current study.\n   * @returns {number} The number of instances in the current study.\n   */\n  getInstanceCount() {\n    return this._series.reduce((sum, series) => {\n      return sum + series.getInstanceCount();\n    }, 0);\n  }\n\n  /**\n   * Invokes the supplied callback for each series in the current study passing\n   * two arguments: series (a SeriesMetadata instance) and index (the integer\n   * index of the series within the current study)\n   * @param {function} callback The callback function which will be invoked for each series instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachSeries(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._series.forEach((series, index) => {\n        callback.call(null, series, index);\n      });\n    }\n  }\n\n  /**\n   * Find the index of a series inside the study.\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n   * @returns {number} The index of the series inside the study or -1 if not found.\n   */\n  indexOfSeries(series) {\n    return this._series.indexOf(series);\n  }\n\n  /**\n   * It sorts the series based on display sets order. Each series must be an instance\n   * of SeriesMetadata and each display sets must be an instance of ImageSet.\n   * Useful example of usage:\n   *     Study data provided by backend does not sort series at all and client-side\n   *     needs series sorted by the same criteria used for sorting display sets.\n   */\n  sortSeriesByDisplaySets() {\n    // Object for mapping display sets' index by seriesInstanceUid\n    const displaySetsMapping = {};\n\n    // Loop through each display set to create the mapping\n    this.forEachDisplaySet((displaySet, index) => {\n      if (!(displaySet instanceof ImageSet)) {\n        throw new OHIFError(\n          `StudyMetadata::sortSeriesByDisplaySets display set at index ${index} is not an instance of ImageSet`\n        );\n      }\n\n      // In case of multiframe studies, just get the first index occurence\n      if (displaySetsMapping[displaySet.seriesInstanceUid] === void 0) {\n        displaySetsMapping[displaySet.seriesInstanceUid] = index;\n      }\n    });\n\n    // Clone of actual series\n    const actualSeries = this.getSeries();\n\n    actualSeries.forEach((series, index) => {\n      if (!(series instanceof SeriesMetadata)) {\n        throw new OHIFError(\n          `StudyMetadata::sortSeriesByDisplaySets series at index ${index} is not an instance of SeriesMetadata`\n        );\n      }\n\n      // Get the new series index\n      const seriesIndex = displaySetsMapping[series.getSeriesInstanceUID()];\n\n      // Update the series object with the new series position\n      this._series[seriesIndex] = series;\n    });\n  }\n\n  /**\n   * Compares the current study instance with another one.\n   * @param {StudyMetadata} study An instance of the StudyMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same study.\n   */\n  equals(study) {\n    const self = this;\n    return (\n      study === self ||\n      (study instanceof StudyMetadata &&\n        study.getStudyInstanceUID() === self.getStudyInstanceUID())\n    );\n  }\n\n  /**\n   * Get the first series of the current study retaining a consistent result across multiple calls.\n   * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\n   */\n  getFirstSeries() {\n    let series = this._firstSeries;\n    if (!(series instanceof SeriesMetadata)) {\n      series = null;\n      const found = this.getSeriesByIndex(0);\n      if (found instanceof SeriesMetadata) {\n        this._firstSeries = found;\n        series = found;\n      }\n    }\n    return series;\n  }\n\n  /**\n   * Get the first instance of the current study retaining a consistent result across multiple calls.\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n   */\n  getFirstInstance() {\n    let instance = this._firstInstance;\n    if (!(instance instanceof InstanceMetadata)) {\n      instance = null;\n      const firstSeries = this.getFirstSeries();\n      if (firstSeries instanceof SeriesMetadata) {\n        const found = firstSeries.getFirstInstance();\n        if (found instanceof InstanceMetadata) {\n          this._firstInstance = found;\n          instance = found;\n        }\n      }\n    }\n    return instance;\n  }\n\n  /**\n   * Search the associated series to find an specific instance using the supplied callback as criteria.\n   * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\n   * index of the instance within the current series)\n   * @param {function} callback The callback function which will be invoked for each instance instance.\n   * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)\n   *                   objects or an empty object if not found.\n   */\n  findSeriesAndInstanceByInstance(callback) {\n    let result;\n\n    if (Metadata.isValidCallback(callback)) {\n      let instance;\n\n      const series = this._series.find(series => {\n        instance = series.findInstance(callback);\n        return instance instanceof InstanceMetadata;\n      });\n\n      // No series found\n      if (series instanceof SeriesMetadata) {\n        result = {\n          series,\n          instance\n        };\n      }\n    }\n\n    return result || {};\n  }\n\n  /**\n   * Find series by instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\n   *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\n   */\n  findSeriesByInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.series;\n  }\n\n  /**\n   * Find an instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n   */\n  findInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.instance;\n  }\n}\n","export class WadoRsMetaDataBuilder {\n  constructor() {\n    this.tags = {};\n  }\n\n  addTag(tag, value, multi) {\n    this.tags[tag] = {\n      tag,\n      value,\n      multi\n    };\n\n    return this;\n  }\n\n  toJSON() {\n    const json = {};\n    const keys = Object.keys(this.tags);\n\n    keys.forEach(key => {\n      if (!this.tags.hasOwnProperty(key)) {\n        return;\n      }\n\n      const tag = this.tags[key];\n      const multi = !!tag.multi;\n      let value = tag.value;\n\n      if (value == null || (value.length === 1 && value[0] == null)) {\n        return;\n      }\n\n      if (typeof value === 'string' && multi) {\n        value = value.split('\\\\');\n      }\n\n      if (!Array.isArray(value)) {\n        value = [value];\n      }\n\n      json[key] = {\n        Value: value\n      };\n    });\n\n    return json;\n  }\n}\n","function getWADORSImageUrl(instance, frame) {\n  let wadorsuri = instance.wadorsuri;\n\n  if (!wadorsuri) {\n    return;\n  }\n\n  // We need to sum 1 because WADO-RS frame number is 1-based\n  frame = (frame || 0) + 1;\n\n  // Replaces /frame/1 by /frame/{frame}\n  wadorsuri = wadorsuri.replace(/(%2Fframes%2F)(\\d+)/, `$1${frame}`);\n\n  return wadorsuri;\n}\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getWADORSImageId(instance, frame) {\n  const uri = getWADORSImageUrl(instance, frame);\n\n  if (!uri) {\n    return;\n  }\n\n  return `wadors:${uri}`;\n}\n","let cornerstone = window.cornerstone;\nlet cornerstoneTools = window.cornerstoneTools;\nlet cornerstoneWADOImageLoader = window.cornerstoneWADOImageLoader;\n\nconst external = {\n  set cornerstone(cs) {\n    cornerstone = cs;\n  },\n  get cornerstone() {\n    return cornerstone;\n  },\n  set cornerstoneTools(tools) {\n    cornerstoneTools = tools;\n  },\n  get cornerstoneTools() {\n    return cornerstoneTools;\n  },\n  set cornerstoneWADOImageLoader(wado) {\n    cornerstoneWADOImageLoader = wado;\n  },\n  get cornerstoneWADOImageLoader() {\n    return cornerstoneWADOImageLoader;\n  }\n};\n\nexport default external;\n","import { WadoRsMetaDataBuilder } from '../classes/metadata/WadoRsMetaDataBuilder';\nimport getWADORSImageId from './getWADORSImageId';\nimport external from '../externalModules.js';\n\nfunction getRadiopharmaceuticalInfoMetaData(instance) {\n  const radiopharmaceuticalInfo = instance.radiopharmaceuticalInfo;\n\n  if (instance.modality !== 'PT' || !radiopharmaceuticalInfo) {\n    return;\n  }\n\n  return new WadoRsMetaDataBuilder()\n    .addTag('00181072', radiopharmaceuticalInfo.radiopharmaceuticalStartTime)\n    .addTag('00181074', radiopharmaceuticalInfo.radionuclideTotalDose)\n    .addTag('00181075', radiopharmaceuticalInfo.radionuclideHalfLife)\n    .toJSON();\n}\n\nconst getWadoRsInstanceMetaData = (study, series, instance) => {\n  return new WadoRsMetaDataBuilder()\n    .addTag('00080016', instance.sopClassUid)\n    .addTag('00080018', instance.sopInstanceUid)\n    .addTag('00080021', series.seriesDate)\n    .addTag('00080031', series.seriesTime)\n    .addTag('00080060', instance.modality)\n    .addTag('00101010', study.patientAge)\n    .addTag('00101020', study.patientSize)\n    .addTag('00101030', study.patientWeight)\n    .addTag('00180050', instance.sliceThickness)\n    .addTag('0020000e', series.seriesInstanceUid)\n    .addTag('00200011', series.seriesNumber)\n    .addTag('0020000d', study.studyInstanceUid)\n    .addTag('00200013', instance.instanceNumber)\n    .addTag('00200032', instance.imagePositionPatient, true)\n    .addTag('00200037', instance.imageOrientationPatient, true)\n    .addTag('00200052', instance.frameOfReferenceUID)\n    .addTag('00201041', instance.sliceLocation)\n    .addTag('00280002', instance.samplesPerPixel)\n    .addTag('00280004', instance.photometricInterpretation)\n    .addTag('00280006', instance.planarConfiguration)\n    .addTag('00280010', instance.rows)\n    .addTag('00280011', instance.columns)\n    .addTag('00280030', instance.pixelSpacing, true)\n    .addTag('00280034', instance.pixelAspectRatio, true)\n    .addTag('00280100', instance.bitsAllocated)\n    .addTag('00280101', instance.bitsStored)\n    .addTag('00280102', instance.highBit)\n    .addTag('00280103', instance.pixelRepresentation)\n    .addTag('00280106', instance.smallestPixelValue)\n    .addTag('00280107', instance.largestPixelValue)\n    .addTag('00281050', instance.windowCenter, true)\n    .addTag('00281051', instance.windowWidth, true)\n    .addTag('00281052', instance.rescaleIntercept)\n    .addTag('00281053', instance.rescaleSlope)\n    .addTag('00281054', instance.rescaleType)\n    .addTag('00281101', instance.redPaletteColorLookupTableDescriptor)\n    .addTag('00281102', instance.greenPaletteColorLookupTableDescriptor)\n    .addTag('00281103', instance.bluePaletteColorLookupTableDescriptor)\n    .addTag('00281201', instance.redPaletteColorLookupTableData)\n    .addTag('00281202', instance.greenPaletteColorLookupTableData)\n    .addTag('00281203', instance.bluePaletteColorLookupTableData)\n    .addTag('00540016', getRadiopharmaceuticalInfoMetaData(instance))\n    .toJSON();\n};\n\nexport function updateMetaDataManager(study) {\n  study.seriesList.forEach(series => {\n    series.instances.forEach(instance => {\n      // Cache just images that are going to be loaded via WADO-RS\n      if (\n        instance.imageRendering !== 'wadors' &&\n        instance.thumbnailRendering !== 'wadors'\n      ) {\n        return;\n      }\n\n      const metaData = getWadoRsInstanceMetaData(study, series, instance);\n      const numberOfFrames = instance.numberOfFrames || 1;\n\n      // We can share the same metaData with all frames because it doesn't have\n      // any frame specific data, such as frameNumber, pixelData, offset, etc.\n      // WADO-RS frame number is 1-based\n      for (let frameNumber = 0; frameNumber < numberOfFrames; frameNumber++) {\n        const imageId = getWADORSImageId(instance, frameNumber);\n\n        // TODO Drop dependency on this\n        external.cornerstoneWADOImageLoader.wadors.metaDataManager.add(\n          imageId,\n          metaData\n        );\n      }\n    });\n  });\n}\n","import log from '../log.js';\nimport { retrieveStudyMetadata } from './retrieveStudyMetadata';\n\n/**\n * Retrieves metaData for multiple studies at once.\n *\n * This function calls retrieveStudyMetadata several times, asynchronously,\n * and waits for all of the results to be returned.\n *\n * @param studyInstanceUids The UIDs of the Studies to be retrieved\n * @return Promise\n */\nexport default function retrieveStudiesMetadata(\n  server,\n  studyInstanceUids,\n  seriesInstanceUids\n) {\n  // Create an empty array to store the Promises for each metaData retrieval call\n  const promises = [];\n\n  // Loop through the array of studyInstanceUids\n  studyInstanceUids.forEach(function(studyInstanceUid) {\n    // Send the call and resolve or reject the related promise based on its outcome\n    const promise = retrieveStudyMetadata(\n      server,\n      studyInstanceUid,\n      seriesInstanceUids\n    );\n\n    // Add the current promise to the array of promises\n    promises.push(promise);\n  });\n\n  // When all of the promises are complete, this callback runs\n  const promise = Promise.all(promises);\n\n  // Warn the error on console if some retrieval failed\n  promise.catch(error => log.warn(error));\n\n  return promise;\n}\n","/**\n * Overridable namespace to allow getting study boxes data externally.\n *\n * The function must handle the first parameter as a studyInformation object containing at least the\n * studyInstanceUid attribute.\n *\n * Shall return a promise that will be resolved with an object containing those attributes:\n * - studyInstanceUid {String}: copy of studyInformation.studyInstanceUid\n * - modalities {String}: 2 uppercase letters for each modality split by any non-alphabetical char(s)\n * - studyDate {String}: date formatted as YYYYMMDD\n * - studyDescription {String}: study description string\n */\n// TODO: What is this for?\nconst getStudyBoxData = false;\n\nexport default getStudyBoxData;\n","import Studies from './services/qido/studies';\n\nconst studySearchPromises = new Map();\n\n/**\n * Search for studies information by the given filter\n *\n * @param {Object} filter Filter that will be used on search\n * @returns {Promise} resolved with an array of studies information or rejected with an error\n */\nexport default function searchStudies(server, filter) {\n  const promiseKey = JSON.stringify(filter);\n  if (studySearchPromises.has(promiseKey)) {\n    return studySearchPromises.get(promiseKey);\n  } else {\n    const promise = Studies(server, filter);\n\n    studySearchPromises.set(promiseKey, promise);\n\n    return promise;\n  }\n}\n","import { QIDO, WADO } from './services/';\nimport loadStudy from './loadStudy.js';\nimport {\n  retrieveStudyMetadata,\n  deleteStudyMetadataPromise\n} from './retrieveStudyMetadata.js';\nimport retrieveStudiesMetadata from './retrieveStudiesMetadata.js';\nimport getStudyBoxData from './getStudyBoxData';\nimport searchStudies from './searchStudies';\n\n// Create a studies loaded state dictionary to enable reactivity. Values: loading|loaded|failed\nconst studies = {\n  services: {\n    QIDO,\n    WADO\n  },\n  loadingDict: {},\n  retrieveStudyMetadata,\n  deleteStudyMetadataPromise,\n  retrieveStudiesMetadata,\n  getStudyBoxData,\n  searchStudies\n};\n\nexport default studies;\n","import log from '../log.js';\n\n// TODO: this is duplicated in TypeSafeCollection\nfunction isFunction(subject) {\n  return typeof subject === 'function';\n}\n\nexport class CommandsManager {\n  constructor() {\n    this.contexts = {};\n\n    // Enable reactivity by storing the last executed command\n    //this.last = new ReactiveVar('');\n  }\n\n  getContext(contextName) {\n    const context = this.contexts[contextName];\n    if (!context) {\n      return log.warn(`No context found with name \"${contextName}\"`);\n    }\n\n    return context;\n  }\n\n  getCurrentContext() {\n    const contextName = OHIF.context.get();\n    if (!contextName) {\n      return log.warn('There is no selected context');\n    }\n\n    return this.getContext(contextName);\n  }\n\n  createContext(contextName) {\n    if (!contextName) return;\n    if (this.contexts[contextName]) {\n      return this.clear(contextName);\n    }\n\n    this.contexts[contextName] = {};\n  }\n\n  set(contextName, definitions, extend = false) {\n    if (typeof definitions !== 'object') return;\n    const context = this.getContext(contextName);\n    if (!context) return;\n\n    if (!extend) {\n      this.clear(contextName);\n    }\n\n    Object.keys(definitions).forEach(\n      command => (context[command] = definitions[command])\n    );\n  }\n\n  register(contextName, command, definition) {\n    if (typeof definition !== 'object') return;\n    const context = this.getContext(contextName);\n    if (!context) return;\n\n    context[command] = definition;\n  }\n\n  setDisabledFunction(contextName, command, func) {\n    if (!command || typeof func !== 'function') return;\n    const context = this.getContext(contextName);\n    if (!context) return;\n    const definition = context[command];\n    if (!definition) {\n      return log.warn(\n        `Trying to set a disabled function to a command \"${command}\" that was not yet defined`\n      );\n    }\n\n    definition.disabled = func;\n  }\n\n  clear(contextName) {\n    if (!contextName) return;\n    this.contexts[contextName] = {};\n  }\n\n  getDefinition(command) {\n    const context = this.getCurrentContext();\n    if (!context) return;\n    return context[command];\n  }\n\n  isDisabled(command) {\n    const definition = this.getDefinition(command);\n    if (!definition) return false;\n    const { disabled } = definition;\n    if (isFunction(disabled) && disabled()) return true;\n    if (!isFunction(disabled) && disabled) return true;\n    return false;\n  }\n\n  run(command) {\n    const definition = this.getDefinition(command);\n    if (!definition) {\n      return log.warn(`Command \"${command}\" not found in current context`);\n    }\n\n    const { action, params } = definition;\n    if (this.isDisabled(command)) return;\n    if (typeof action !== 'function') {\n      return log.warn(`No action was defined for command \"${command}\"`);\n    } else {\n      const result = action(params);\n      /*if (this.last.get() === command) {\n        this.last.dep.changed();\n      } else {\n        this.last.set(command);\n      }*/\n\n      return result;\n    }\n  }\n}\n\nexport default CommandsManager;\n","import { CommandsManager } from './classes/CommandsManager';\n\n// Create commands namespace using a CommandsManager class instance\nconst commands = new CommandsManager();\n\n// Export relevant objects\nexport default commands;\n","import log from '../log.js';\n\nexport class HotkeysContext {\n  constructor(name, definitions, enabled) {\n    this.name = name;\n    this.definitions = Object.assign({}, definitions);\n    this.enabled = enabled;\n  }\n\n  extend(definitions = {}) {\n    if (typeof definitions !== 'object') return;\n    this.definitions = Object.assign({}, definitions);\n    Object.keys(definitions).forEach(command => {\n      const hotkey = definitions[command];\n      this.unregister(command);\n      if (hotkey) {\n        this.register(command, hotkey);\n      }\n\n      this.definitions[command] = hotkey;\n    });\n  }\n\n  register(command, hotkey) {\n    if (!hotkey) {\n      return;\n    }\n\n    if (!command) {\n      return log.warn(`No command was defined for hotkey \"${hotkey}\"`);\n    }\n\n    const bindingKey = `keydown.hotkey.${this.name}.${command}`;\n    const bind = hotkey =>\n      $(document).bind(bindingKey, hotkey, event => {\n        if (!this.enabled.get()) return;\n        OHIF.commands.run(command);\n        event.preventDefault();\n      });\n\n    if (hotkey instanceof Array) {\n      hotkey.forEach(hotkey => bind(hotkey));\n    } else {\n      bind(hotkey);\n    }\n  }\n\n  unregister(command) {\n    const bindingKey = `keydown.hotkey.${this.name}.${command}`;\n    if (this.definitions[command]) {\n      $(document).unbind(bindingKey);\n      delete this.definitions[command];\n    }\n  }\n\n  initialize() {\n    Object.keys(this.definitions).forEach(command => {\n      const hotkey = this.definitions[command];\n      this.register(command, hotkey);\n    });\n  }\n\n  destroy() {\n    $(document).unbind(`keydown.hotkey.${this.name}`);\n  }\n}\n\nexport default HotkeysContext;\n","import HotkeysContext from './HotkeysContext';\n\nexport class HotkeysManager {\n  constructor() {\n    this.contexts = {};\n    this.defaults = {};\n    this.currentContextName = null;\n    this.enabled = true;\n    this.retrieveFunction = null;\n    this.storeFunction = null;\n  }\n\n  setRetrieveFunction(retrieveFunction) {\n    this.retrieveFunction = retrieveFunction;\n  }\n\n  setStoreFunction(storeFunction) {\n    this.storeFunction = storeFunction;\n  }\n\n  store(contextName, definitions) {\n    const storageKey = `hotkeysDefinitions.${contextName}`;\n    return new Promise((resolve, reject) => {\n      if (this.storeFunction) {\n        this.storeFunction\n          .call(this, storageKey, definitions)\n          .then(resolve)\n          .catch(reject);\n        //} else if (OHIF.user.userLoggedIn()) {\n        //    OHIF.user.setData(storageKey, definitions).then(resolve).catch(reject);\n      } else {\n        const definitionsJSON = JSON.stringify(definitions);\n        localStorage.setItem(storageKey, definitionsJSON);\n        resolve();\n      }\n    });\n  }\n\n  retrieve(contextName) {\n    const storageKey = `hotkeysDefinitions.${contextName}`;\n    return new Promise((resolve, reject) => {\n      if (this.retrieveFunction) {\n        this.retrieveFunction(contextName)\n          .then(resolve)\n          .catch(reject);\n      } else if (OHIF.user.userLoggedIn()) {\n        try {\n          resolve(OHIF.user.getData(storageKey));\n        } catch (error) {\n          reject(error);\n        }\n      } else {\n        const definitionsJSON = localStorage.getItem(storageKey) || '';\n        const definitions = JSON.parse(definitionsJSON) || undefined;\n        resolve(definitions);\n      }\n    });\n  }\n\n  disable() {\n    this.enabled.set(false);\n  }\n\n  enable() {\n    this.enabled.set(true);\n  }\n\n  getContext(contextName) {\n    return this.contexts[contextName];\n  }\n\n  getCurrentContext() {\n    return this.getContext(this.currentContextName);\n  }\n\n  load(contextName) {\n    return new Promise((resolve, reject) => {\n      const context = this.getContext(contextName);\n      if (!context) return reject();\n      this.retrieve(contextName)\n        .then(defs => {\n          const definitions = defs || this.defaults[contextName];\n          if (!definitions) {\n            this.changeObserver.changed();\n            return reject();\n          }\n\n          context.destroy();\n          context.definitions = definitions;\n          context.initialize();\n          this.changeObserver.changed();\n          resolve(definitions);\n        })\n        .catch(reject);\n    });\n  }\n\n  set(contextName, contextDefinitions, isDefaultDefinitions = false) {\n    const enabled = this.enabled;\n    const context = new HotkeysContext(\n      contextName,\n      contextDefinitions,\n      enabled\n    );\n    const currentContext = this.getCurrentContext();\n    if (currentContext && currentContext.name === contextName) {\n      currentContext.destroy();\n      context.initialize();\n    }\n\n    this.contexts[contextName] = context;\n    if (isDefaultDefinitions) {\n      this.defaults[contextName] = contextDefinitions;\n    }\n  }\n\n  register(contextName, command, hotkey) {\n    if (!command || !hotkey) return;\n    const context = this.getContext(contextName);\n    if (!context) {\n      this.set(contextName, {});\n    }\n\n    context.register(command, hotkey);\n  }\n\n  unsetContext(contextName) {\n    if (contextName === this.currentContextName) {\n      this.getCurrentContext().destroy();\n    }\n\n    delete this.contexts[contextName];\n    delete this.defaults[contextName];\n  }\n\n  resetDefaults(contextName) {\n    const context = this.getContext(contextName);\n    const definitions = this.defaults[contextName];\n    if (!context || !definitions) return;\n    context.extend(definitions);\n    return this.store(contextName, definitions);\n  }\n\n  switchToContext(contextName) {\n    const currentContext = this.getCurrentContext();\n    if (currentContext) {\n      currentContext.destroy();\n    }\n\n    const newContext = this.contexts[contextName];\n    if (!newContext) return;\n\n    this.currentContextName = contextName;\n    newContext.initialize();\n    this.load(contextName).catch(() => {});\n  }\n}\n\nexport default HotkeysManager;\n","import { HotkeysManager } from './classes/HotkeysManager';\n//import 'jquery';\n//import 'jquery.hotkeys';\n\n// Create hotkeys namespace using a HotkeysManager class instance\nconst hotkeys = new HotkeysManager();\n\n// Export relevant objects\nexport default hotkeys;\n","const FUNCTION = 'function';\nconst STRING = 'string';\nconst UNDEFINED = 'undefined';\nconst WILDCARD = '*'; // \"*\" is a special name which means \"all children\".\nconst SEPARATOR = '.';\n\n/**\n * Main Namespace Component Class\n */\n\nclass Node {\n  constructor() {\n    this.value = 0;\n    this.children = {};\n    this.handlers = {};\n  }\n\n  getPathComponents(path) {\n    return typeof path === STRING ? path.split(SEPARATOR) : null;\n  }\n\n  getNodeUpToIndex(path, index) {\n    let node = this;\n\n    for (let i = 0; i < index; ++i) {\n      let item = path[i];\n      if (node.children.hasOwnProperty(item)) {\n        node = node.children[item];\n      } else {\n        node = null;\n        break;\n      }\n    }\n\n    return node;\n  }\n\n  append(name, value) {\n    const children = this.children;\n    let node = null;\n\n    if (children.hasOwnProperty(name)) {\n      node = children[name];\n    } else if (typeof name === STRING && name !== WILDCARD) {\n      node = new Node();\n      children[name] = node;\n    }\n\n    if (node !== null) {\n      node.value += value > 0 ? parseInt(value) : 0;\n    }\n\n    return node;\n  }\n\n  probe(recursively) {\n    let value = this.value;\n\n    // Calculate entire tree value recursively?\n    if (recursively === true) {\n      const children = this.children;\n      for (let item in children) {\n        if (children.hasOwnProperty(item)) {\n          value += children[item].probe(recursively);\n        }\n      }\n    }\n\n    return value;\n  }\n\n  clear(recursively) {\n    this.value = 0;\n\n    // Clear entire tree recursively?\n    if (recursively === true) {\n      const children = this.children;\n      for (let item in children) {\n        if (children.hasOwnProperty(item)) {\n          children[item].clear(recursively);\n        }\n      }\n    }\n  }\n\n  appendPath(path, value) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      const last = path.length - 1;\n      let node = this;\n      for (let i = 0; i < last; ++i) {\n        node = node.append(path[i], 0);\n        if (node === null) {\n          return false;\n        }\n      }\n\n      return node.append(path[last], value) !== null;\n    }\n\n    return false;\n  }\n\n  clearPath(path, recursively) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      const last = path.length - 1;\n      let node = this.getNodeUpToIndex(path, last);\n      if (node !== null) {\n        let item = path[last];\n        if (item !== WILDCARD) {\n          if (node.children.hasOwnProperty(item)) {\n            node.children[item].clear(recursively);\n            return true;\n          }\n        } else {\n          const children = node.children;\n          for (item in children) {\n            if (children.hasOwnProperty(item)) {\n              children[item].clear(recursively);\n            }\n          }\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  probePath(path, recursively) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      const last = path.length - 1;\n      let node = this.getNodeUpToIndex(path, last);\n      if (node !== null) {\n        let item = path[last];\n        if (item !== WILDCARD) {\n          if (node.children.hasOwnProperty(item)) {\n            return node.children[item].probe(recursively);\n          }\n        } else {\n          const children = node.children;\n          let value = 0;\n          for (item in children) {\n            if (children.hasOwnProperty(item)) {\n              value += children[item].probe(recursively);\n            }\n          }\n\n          return value;\n        }\n      }\n    }\n\n    return 0;\n  }\n\n  attachHandler(type, handler) {\n    let result = false;\n\n    if (typeof type === STRING && typeof handler === FUNCTION) {\n      const handlers = this.handlers;\n      const list = handlers.hasOwnProperty(type)\n        ? handlers[type]\n        : (handlers[type] = []);\n      const length = list.length;\n\n      let notFound = true;\n\n      for (let i = 0; i < length; ++i) {\n        if (handler === list[i]) {\n          notFound = false;\n          break;\n        }\n      }\n\n      if (notFound) {\n        list[length] = handler;\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  removeHandler(type, handler) {\n    let result = false;\n\n    if (typeof type === STRING && typeof handler === FUNCTION) {\n      const handlers = this.handlers;\n      if (handlers.hasOwnProperty(type)) {\n        const list = handlers[type];\n        const length = list.length;\n        for (let i = 0; i < length; ++i) {\n          if (handler === list[i]) {\n            list.splice(i, 1);\n            result = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  trigger(type, nonRecursively) {\n    if (typeof type === STRING) {\n      const handlers = this.handlers;\n\n      if (handlers.hasOwnProperty(type)) {\n        const list = handlers[type];\n        const length = list.length;\n        for (let i = 0; i < length; ++i) {\n          list[i].call(null);\n        }\n      }\n\n      if (nonRecursively !== true) {\n        const children = this.children;\n        for (let item in children) {\n          if (children.hasOwnProperty(item)) {\n            children[item].trigger(type);\n          }\n        }\n      }\n    }\n  }\n\n  attachHandlerForPath(path, type, handler) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      let node = this.getNodeUpToIndex(path, path.length);\n      if (node !== null) {\n        return node.attachHandler(type, handler);\n      }\n    }\n\n    return false;\n  }\n\n  removeHandlerForPath(path, type, handler) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      let node = this.getNodeUpToIndex(path, path.length);\n      if (node !== null) {\n        return node.removeHandler(type, handler);\n      }\n    }\n\n    return false;\n  }\n\n  triggerHandlersForPath(path, type, nonRecursively) {\n    path = this.getPathComponents(path);\n\n    if (path !== null) {\n      let node = this.getNodeUpToIndex(path, path.length);\n      if (node !== null) {\n        node.trigger(type, nonRecursively);\n      }\n    }\n  }\n}\n\n/**\n * Root Namespace Node and API\n */\n\nconst rootNode = new Node();\n\nexport const unsavedChanges = {\n  rootNode: rootNode,\n\n  observer: null, //new Tracker.Dependency(),\n\n  hooks: new Map(),\n\n  /**\n   * Register a reactive dependency on every change any path suffers\n   */\n  depend: function() {\n    return; // this.observer.depend();\n  },\n\n  /**\n   * Signal an unsaved change for a given namespace.\n   * @param {String} path A string (e.g., \"viewer.studyViewer.measurements.targets\") that identifies the namespace of the signaled changes.\n   * @return {Boolean} Returns false if the signal could not be saved or the supplied namespace is invalid. Otherwise, true is returned.\n   */\n  set: function(path) {\n    const result = rootNode.appendPath(path, 1);\n    //this.observer.changed();\n    return result;\n  },\n\n  /**\n   * Clear all signaled unsaved changes for a given namespace. If the supplied namespace is a wildcard, all signals below that namespace\n   * are cleared.\n   * @param {String} path A string that identifies the namespace of the signaled changes (e.g., \"viewer.studyViewer.measurements.targets\"\n   *  for clearing the \"targets\" item of the \"viewer.studyViewer.measurements\" namespace or \"viewer.studyViewer.*\" to specify all signaled\n   *  changes for the \"viewer.studyViewer\" namespace).\n   * @param {Boolean} recursively Clear node and all its children recursively. If not specified defaults to true.\n   * @return {Boolean} Returns false if the signal could not be removed or the supplied namespace is invalid. Otherwise, true is returned.\n   */\n  clear: function(path, recursively) {\n    const result = rootNode.clearPath(\n      path,\n      typeof recursively === UNDEFINED ? true : recursively\n    );\n    //this.observer.changed();\n    return result;\n  },\n\n  /**\n   * Count the amount of signaled unsaved changes for a given namespace. If the supplied namespace is a wildcard, all signals below that\n   * namespace will also be accounted.\n   * @param {String} path A string that identifies the namespace of the signaled changes (e.g., \"viewer.studyViewer.measurements.targets\"\n   *  for counting the amount of signals for the \"targets\" item of the \"viewer.studyViewer.measurements\" namespace or \"viewer.studyViewer.*\"\n   *  to count all signaled changes for the \"viewer.studyViewer\" namespace).\n   * @param {Boolean} recursively Probe node and all its children recursively. If not specified defaults to true.\n   * @return {Number} Returns the amount of signaled changes for a given namespace. If the supplied namespace is a wildcard, the sum of all\n   *  changes for that namespace are returned.\n   */\n  probe: function(path, recursively) {\n    return rootNode.probePath(\n      path,\n      typeof recursively === UNDEFINED ? true : recursively\n    );\n  },\n\n  /**\n   * Attach an event handler to the specified namespace.\n   * @param {String} name A string that identifies the namespace to which the event handler will be attached (e.g.,\n   *  \"viewer.studyViewer.measurements\" to attach an event handler for that namespace).\n   * @param {String} type A string that identifies the event type to which the event handler will be attached.\n   * @param {Function} handler The handler that will be executed when the specifed event is triggered.\n   * @return {Boolean} Returns true on success and false on failure.\n   */\n  attachHandler: function(path, type, handler) {\n    return (\n      rootNode.appendPath(path, 0) &&\n      rootNode.attachHandlerForPath(path, type, handler)\n    );\n  },\n\n  /**\n   * Detach an event handler from the specified namespace.\n   * @param {String} name A string that identifies the namespace from which the event handler will be detached (e.g.,\n   *  \"viewer.studyViewer.measurements\" to remove an event handler from that namespace).\n   * @param {String} type A string that identifies the event type to which the event handler was attached.\n   * @param {Function} handler The handler that will be removed from execution list.\n   * @return {Boolean} Returns true on success and false on failure.\n   */\n  removeHandler: function(path, type, handler) {\n    return rootNode.removeHandlerForPath(path, type, handler);\n  },\n\n  /**\n   * Trigger all event handlers for the specified namespace and type.\n   * @param {String} name A string that identifies the namespace from which the event handler will be detached (e.g.,\n   *  \"viewer.studyViewer.measurements\" to remove an event handler from that namespace).\n   * @param {String} type A string that identifies the event type which will be triggered.\n   * @param {Boolean} nonRecursively If set to true, prevents triggering event handlers from descending tree.\n   * @return {Void} No value is returned.\n   */\n  trigger: function(path, type, nonRecursively) {\n    rootNode.triggerHandlersForPath(path, type, nonRecursively);\n  },\n\n  /**\n   * UI utility that presents a confirmation dialog to the user if any unsaved changes where signaled for the given namespace.\n   * @param {String} path A string that identifies the namespace of the signaled changes (e.g., \"viewer.studyViewer.measurements.targets\"\n   *  for considering only the signals for the \"targets\" item of the \"viewer.studyViewer.measurements\" namespace or \"viewer.studyViewer.*\"\n   *  to consider all signaled changes for the \"viewer.studyViewer\" namespace).\n   * @param {Function} callback A callback function (e.g, function(shouldProceed, hasChanges) { ... }) that will be executed after assessment.\n   *  Upon execution, the callback will receive two boolean arguments (shouldProceed and hasChanges) indicating if the action can be performed\n   *  or not and if changes that need to be cleared exist.\n   * @param {Object} options (Optional) An object with UI presentation options.\n   * @param {String} options.title The string that will be used as a title for confirmation dialog.\n   * @param {String} options.message The string that will be used as a message for confirmation dialog.\n   * @return {void} No value is returned.\n   */\n  checkBeforeAction: function(path, callback, options) {\n    let probe, hasChanges, shouldProceed;\n\n    if (typeof callback !== 'function') {\n      // nothing to do if no callback function is supplied...\n      return;\n    }\n\n    probe = this.probe(path);\n    if (probe > 0) {\n      // Unsaved changes exist...\n      hasChanges = true;\n      let dialogOptions = Object.assign(\n        {\n          title: 'You have unsaved changes!',\n          message:\n            \"Your changes will be lost if you don't save them before leaving the current page... Are you sure you want to proceed?\"\n        },\n        options\n      );\n      OHIF.ui.showDialog('dialogConfirm', dialogOptions).then(\n        function() {\n          // Unsaved changes exist but user confirms action...\n          shouldProceed = true;\n          callback.call(null, shouldProceed, hasChanges);\n        },\n        function() {\n          // Unsaved changes exist and user does NOT confirm action...\n          shouldProceed = false;\n          callback.call(null, shouldProceed, hasChanges);\n        }\n      );\n    } else {\n      // No unsaved changes, action can be performed...\n      hasChanges = false;\n      shouldProceed = true;\n      callback.call(null, shouldProceed, hasChanges);\n    }\n  },\n\n  /**\n   * UI utility that presents a \"proactive\" dialog (with three options: stay, abandon-changes, save-changes) to the user if any unsaved changes where signaled for the given namespace.\n   * @param {String} path A string that identifies the namespace of the signaled changes (e.g., \"viewer.studyViewer.measurements.targets\"\n   *  for considering only the signals for the \"targets\" item of the \"viewer.studyViewer.measurements\" namespace or \"viewer.studyViewer.*\"\n   *  to consider all signaled changes for the \"viewer.studyViewer\" namespace).\n   * @param {Function} callback A callback function (e.g, function(hasChanges, userChoice) { ... }) that will be executed after assessment.\n   *  Upon execution, the callback will receive two arguments: one boolean (hasChanges) indicating that unsaved changes exist and one string with the ID of the\n   *  option picked by the user on the dialog ('abort-action', 'abandon-changes' and 'save-changes'). If no unsaved changes exist, the second argument is null.\n   * @param {Object} options (Optional) An object with UI presentation options.\n   * @param {Object} options.position An object with optimal position (e.g., { x: ..., y: ... }) for the dialog.\n   * @return {void} No value is returned.\n   */\n  presentProactiveDialog: function(path, callback, options) {\n    let probe, hasChanges;\n\n    if (typeof callback !== 'function') {\n      // nothing to do if no callback function is supplied...\n      return;\n    }\n\n    probe = this.probe(path, true);\n    if (probe > 0) {\n      // Unsaved changes exist...\n      hasChanges = true;\n      OHIF.ui.unsavedChangesDialog(function(choice) {\n        callback.call(null, hasChanges, choice);\n      }, options);\n    } else {\n      // No unsaved changes, action can be performed...\n      hasChanges = false;\n      callback.call(null, hasChanges, null);\n    }\n  },\n\n  addHook(saveCallback, options = {}) {\n    if (!options.path) {\n      options.path = '*';\n    }\n\n    if (!options.message) {\n      options.message = 'There are unsaved changes';\n    }\n\n    this.hooks.set(saveCallback, options);\n  },\n\n  removeHook(saveCallback) {\n    this.hooks.delete(saveCallback);\n  },\n\n  confirmNavigation(navigateCallback, event) {\n    let dialogPresented = false;\n    Array.from(this.hooks.keys()).every(saveCallback => {\n      const options = this.hooks.get(saveCallback);\n      const probe = this.probe(options.path, true);\n      if (!probe) return true;\n\n      const dialogOptions = Object.assign({ class: 'themed' }, options);\n      if (event) {\n        dialogOptions.position = {\n          x: event.clientX + 15,\n          y: event.clientY + 15\n        };\n      }\n\n      OHIF.ui.unsavedChanges.presentProactiveDialog(\n        options.path,\n        (hasChanges, userChoice) => {\n          if (!hasChanges) return;\n\n          const clear = () => this.clear(options.path, true);\n          switch (userChoice) {\n            case 'abort-action':\n              return;\n            case 'save-changes':\n              const result = saveCallback();\n              if (result instanceof Promise) {\n                return result.then(() => {\n                  clear();\n                  this.confirmNavigation(navigateCallback, event);\n                });\n              }\n\n              clear();\n              return this.confirmNavigation(navigateCallback, event);\n            case 'abandon-changes':\n              clear();\n              break;\n          }\n\n          navigateCallback();\n        },\n        dialogOptions\n      );\n\n      dialogPresented = true;\n      return false;\n    });\n\n    if (!dialogPresented) {\n      navigateCallback();\n    }\n  }\n};\n\nexport default unsavedChanges;\n","import log from '../log.js';\n\nexport default function handleError(error) {\n  let { title, message } = error;\n\n  if (!title) {\n    if (error instanceof Error) {\n      title = error.name;\n    }\n  }\n\n  if (!message) {\n    if (error instanceof Error) {\n      message = error.message;\n    }\n  }\n\n  const data = Object.assign(\n    {\n      title,\n      message,\n      class: 'themed',\n      hideConfirm: true,\n      cancelLabel: 'Dismiss',\n      cancelClass: 'btn-secondary'\n    },\n    error || {}\n  );\n\n  log.error(error);\n  // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.\n  // OHIF.ui.showDialog('dialogForm', data);\n}\n","/**\n * Check if the pressed key combination will result in a character input\n * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text\n *\n * @returns {Boolean} Whether the pressed key combination will input a character or not\n */\nexport default function isCharacterKeyPress(event) {\n  if (typeof event.which === 'undefined') {\n    // This is IE, which only fires keypress events for printable keys\n    return true;\n  } else if (typeof event.which === 'number' && event.which > 0) {\n    // In other browsers except old versions of WebKit, event.which is\n    // only greater than zero if the keypress is a printable key.\n    // We need to filter out backspace and ctrl/alt/meta key combinations\n    return (\n      !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8\n    );\n  }\n\n  return false;\n}\n","/**\n * Get the offset for the given element\n *\n * @param {Object} element DOM element which will have the offser calculated\n * @returns {Object} Object containing the top and left offset\n */\nexport default function getOffset(element) {\n  let top = 0;\n  let left = 0;\n  if (element.offsetParent) {\n    do {\n      left += element.offsetLeft;\n      top += element.offsetTop;\n    } while ((element = element.offsetParent));\n  }\n\n  return {\n    left,\n    top\n  };\n}\n","/**\n * Get the vertical and horizontal scrollbar sizes\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n *\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\n */\nexport default function getScrollbarSize() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '100%';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.height = '100px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  const w1 = inner.offsetWidth;\n  const h1 = inner.offsetHeight;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  let h2 = inner.offsetHeight;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  if (h1 === h2) {\n    h2 = outer.clientHeight;\n  }\n\n  document.body.removeChild(outer);\n\n  return [w1 - w2, h1 - h2];\n}\n","import unsavedChanges from './unsavedChanges.js';\nimport handleError from './handleError.js';\nimport isCharacterKeyPress from './isCharacterKeyPress.js';\nimport getOffset from './getOffset.js';\nimport getScrollbarSize from './getScrollbarSize.js';\n\nconst ui = {\n  getScrollbarSize,\n  getOffset,\n  isCharacterKeyPress,\n  handleError\n};\n\nexport default ui;\n","//import Dropdown from './ui/dropdown/class.js';\n\n/*\n * Defines the base OHIF header object\n */\n//const dropdown = new OHIF.ui.Dropdown();\nconst header = {};\n\nexport default header;\n","export class ObjectPath {\n  /**\n   * Set an object property based on \"path\" (namespace) supplied creating\n   * ... intermediary objects if they do not exist.\n   * @param object {Object} An object where the properties specified on path should be set.\n   * @param path {String} A string representing the property to be set, e.g. \"user.study.series.timepoint\".\n   * @param value {Any} The value of the property that will be set.\n   * @return {Boolean} Returns \"true\" on success, \"false\" if any intermediate component of the supplied path\n   * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.\n   */\n  static set(object, path, value) {\n    let components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0,\n      result = false;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        if (field in currentObject) {\n          if (!ObjectPath.isValidObject(currentObject[field])) {\n            break;\n          }\n        } else {\n          currentObject[field] = {};\n        }\n\n        currentObject = currentObject[field];\n        i++;\n      }\n\n      if (i === last) {\n        currentObject[components[last]] = value;\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get an object property based on \"path\" (namespace) supplied traversing the object\n   * ... tree as necessary.\n   * @param object {Object} An object where the properties specified might exist.\n   * @param path {String} A string representing the property to be searched for, e.g. \"user.study.series.timepoint\".\n   * @return {Any} The value of the property if found. By default, returns the special type \"undefined\".\n   */\n  static get(object, path) {\n    let found, // undefined by default\n      components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        const isValid = ObjectPath.isValidObject(currentObject[field]);\n        if (field in currentObject && isValid) {\n          currentObject = currentObject[field];\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      if (i === last && components[last] in currentObject) {\n        found = currentObject[components[last]];\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * Check if the supplied argument is a real JavaScript Object instance.\n   * @param object {Any} The subject to be tested.\n   * @return {Boolean} Returns \"true\" if the object is a real Object instance and \"false\" otherwise.\n   */\n  static isValidObject(object) {\n    return (\n      typeof object === 'object' && object !== null && object instanceof Object\n    );\n  }\n\n  static getPathComponents(path) {\n    return typeof path === 'string' ? path.split('.') : null;\n  }\n}\n\nexport default ObjectPath;\n","export default function absoluteUrl(path) {\n  let absolutePath = '/';\n\n  // TODO: Find another way to get root url\n  const absoluteUrl = window.location.origin;\n  const absoluteUrlParts = absoluteUrl.split('/');\n\n  if (absoluteUrlParts.length > 4) {\n    const rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);\n    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;\n  } else {\n    absolutePath += path;\n  }\n\n  return absolutePath.replace(/\\/\\/+/g, '/');\n}\n","// TODO: figure out where else to put this function\nexport default function addServers(servers, store) {\n  Object.keys(servers).forEach(serverType => {\n    const endpoints = servers[serverType];\n    endpoints.forEach(endpoint => {\n      const server = Object.assign({}, endpoint);\n      server.type = serverType;\n\n      store.dispatch({\n        type: 'ADD_SERVER',\n        server\n      });\n    });\n  });\n}\n","// Return the array sorting function for its object's properties\nexport default function sortBy() {\n  var fields = [].slice.call(arguments),\n    n_fields = fields.length;\n\n  return function(A, B) {\n    var a, b, field, key, primer, reverse, result, i;\n\n    for (i = 0; i < n_fields; i++) {\n      result = 0;\n      field = fields[i];\n\n      key = typeof field === 'string' ? field : field.name;\n\n      a = A[key];\n      b = B[key];\n\n      if (typeof field.primer !== 'undefined') {\n        a = field.primer(a);\n        b = field.primer(b);\n      }\n\n      reverse = field.reverse ? -1 : 1;\n\n      if (a < b) {\n        result = reverse * -1;\n      }\n\n      if (a > b) {\n        result = reverse * 1;\n      }\n\n      if (result !== 0) {\n        break;\n      }\n    }\n\n    return result;\n  };\n}\n","/* jshint -W060 */\nimport absoluteUrl from './absoluteUrl';\n\nexport default function writeScript(fileName, callback) {\n  const script = document.createElement('script');\n  script.src = absoluteUrl(fileName);\n  script.onload = () => {\n    if (typeof callback === 'function') {\n      callback(script);\n    }\n  };\n\n  document.body.appendChild(script);\n}\n","import getWADORSImageId from './getWADORSImageId';\n\n// https://stackoverflow.com/a/6021027/3895126\nfunction updateQueryStringParameter(uri, key, value) {\n  const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(regex)) {\n    return uri.replace(regex, '$1' + key + '=' + value + '$2');\n  } else {\n    return uri + separator + key + '=' + value;\n  }\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getImageId(instance, frame, thumbnail = false) {\n  if (!instance) {\n    return;\n  }\n\n  if (typeof instance.getImageId === 'function') {\n    return instance.getImageId();\n  }\n\n  if (instance.url) {\n    if (frame !== undefined) {\n      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\n    }\n\n    return instance.url;\n  }\n\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n  if (\n    !instance[renderingAttr] ||\n    instance[renderingAttr] === 'wadouri' ||\n    !instance.wadorsuri\n  ) {\n    let imageId = 'dicomweb:' + instance.wadouri;\n    if (frame !== undefined) {\n      imageId += '&frame=' + frame;\n    }\n\n    return imageId;\n  } else {\n    return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\n  }\n}\n","import OHIFError from '../classes/OHIFError.js';\nimport getImageId from './getImageId';\n\nlet stackMap = {};\nlet configuration = {};\nlet stackManagerMetaDataProvider;\nconst stackUpdatedCallbacks = [];\n\n/**\n * Loop through the current series and add metadata to the\n * Cornerstone meta data provider. This will be used to fill information\n * into the viewport overlays, and to calculate reference lines and orientation markers\n * @param  {Object} stackMap              stackMap object\n * @param  {Object} study                 Study object\n * @param  {Object} displaySet            The set of images to make the stack from\n * @return {Array}                        Array with image IDs\n */\nfunction createAndAddStack(\n  stackMap,\n  study,\n  displaySet,\n  stackUpdatedCallbacks,\n  metadataProvider\n) {\n  const numImages = displaySet.images.length;\n  const imageIds = [];\n  let imageId;\n\n  displaySet.images.forEach((instance, imageIndex) => {\n    const image = instance.getData();\n    const metaData = {\n      instance: image, // in this context, instance will be the data of the InstanceMetadata object...\n      series: displaySet, // TODO: Check this\n      study,\n      numImages,\n      imageIndex: imageIndex + 1\n    };\n\n    const numberOfFrames = image.numberOfFrames;\n    if (numberOfFrames > 1) {\n      OHIF.log.info('Multiframe image detected');\n      for (let i = 0; i < numberOfFrames; i++) {\n        metaData.frameNumber = i;\n        imageId = getImageId(image, i);\n        imageIds.push(imageId);\n        metadataProvider.addMetadata(imageId, metaData);\n      }\n    } else {\n      metaData.frameNumber = 1;\n      imageId = getImageId(image);\n      imageIds.push(imageId);\n      metadataProvider.addMetadata(imageId, metaData);\n    }\n  });\n\n  const stack = {\n    displaySetInstanceUid: displaySet.displaySetInstanceUid,\n    imageIds,\n    frameRate: displaySet.frameRate,\n    isClip: displaySet.isClip\n  };\n\n  stackMap[displaySet.displaySetInstanceUid] = stack;\n\n  return stack;\n}\n\nconfiguration = {\n  createAndAddStack\n};\n\n/**\n * This object contains all the functions needed for interacting with the stack manager.\n * Generally, findStack is the only function used. If you want to know when new stacks\n * come in, you can register a callback with addStackUpdatedCallback.\n */\nconst StackManager = {\n  setMetadataProvider(provider) {\n    stackManagerMetaDataProvider = provider;\n  },\n  /**\n   * Removes all current stacks\n   */\n  clearStacks() {\n    stackMap = {};\n  },\n  /**\n   * Create a stack from an image set, as well as add in the metadata on a per image bases.\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  makeAndAddStack(study, displaySet) {\n    if (!stackManagerMetaDataProvider) {\n      throw new Error(\n        'Please call StackManager.setMetadataProvider(provider) first.'\n      );\n    }\n\n    return configuration.createAndAddStack(\n      stackMap,\n      study,\n      displaySet,\n      stackUpdatedCallbacks,\n      stackManagerMetaDataProvider\n    );\n  },\n  /**\n   * Find a stack from the currently created stacks.\n   * @param displaySetInstanceUid The UID of the stack to find.\n   * @returns {*} undefined if not found, otherwise the stack object is returned.\n   */\n  findStack(displaySetInstanceUid) {\n    return stackMap[displaySetInstanceUid];\n  },\n  /**\n   * Find a stack or reate one if it has not been created yet\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  findOrCreateStack(study, displaySet) {\n    let stack = this.findStack(displaySet.displaySetInstanceUid);\n\n    if (!stack || !stack.imageIds) {\n      stack = this.makeAndAddStack(study, displaySet);\n    }\n\n    return stack;\n  },\n  /**\n   * Gets the underlying map of displaySetInstanceUid to stack object.\n   * WARNING: Do not change this object. It directly affects the manager.\n   * @returns {{}} map of displaySetInstanceUid -> stack.\n   */\n  getAllStacks() {\n    return stackMap;\n  },\n  /**\n   * Adds in a callback to be called on a stack being added / updated.\n   * @param callback must accept at minimum one argument,\n   * which is the stack that was added / updated.\n   */\n  addStackUpdatedCallback(callback) {\n    if (typeof callback !== 'function') {\n      throw new OHIFError('callback must be provided as a function');\n    }\n    stackUpdatedCallbacks.push(callback);\n  },\n  /**\n   * Return configuration\n   */\n  getConfiguration() {\n    return configuration;\n  },\n  /**\n   * Set configuration, in order to provide compatibility\n   * with other systems by overriding this functions\n   * @param {Object} config object with functions to be overrided\n   *\n   * For now, only makeAndAddStack can be overrided\n   */\n  setConfiguration(config) {\n    configuration = config;\n  }\n};\n\nexport { StackManager };\nexport default StackManager;\n","// TODO: Deprecate since we have the same thing in dcmjs?\nexport const sopClassDictionary = {\n  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',\n  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',\n  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',\n  DigitalMammographyXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.2',\n  DigitalMammographyXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.2.1',\n  DigitalIntraOralXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.3',\n  DigitalIntraOralXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.3.1',\n  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',\n  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',\n  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',\n  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',\n  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',\n  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',\n  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',\n  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',\n  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',\n  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',\n  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',\n  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',\n  MultiframeSingleBitSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.1',\n  MultiframeGrayscaleByteSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.2',\n  MultiframeGrayscaleWordSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.3',\n  MultiframeTrueColorSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.4',\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',\n  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',\n  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',\n  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',\n  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',\n  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',\n  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',\n  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',\n  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',\n  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',\n  XAXRFGrayscaleSoftcopyPresentationStateStorage:\n    '1.2.840.10008.5.1.4.1.1.11.5',\n  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',\n  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',\n  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',\n  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',\n  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',\n  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',\n  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',\n  BreastProjectionXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.13.1.4',\n  BreastProjectionXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.13.1.5',\n  IntravascularOpticalCoherenceTomographyImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.14.1',\n  IntravascularOpticalCoherenceTomographyImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.14.2',\n  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',\n  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',\n  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',\n  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',\n  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',\n  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',\n  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',\n  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',\n  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',\n  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',\n  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',\n  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',\n  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',\n  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',\n  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',\n  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',\n  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',\n  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',\n  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',\n  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',\n  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',\n  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',\n  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',\n  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',\n  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',\n  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',\n  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',\n  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',\n  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',\n  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',\n  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',\n  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage:\n    '1.2.840.10008.5.1.4.1.1.80.1',\n  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',\n  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',\n  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',\n  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',\n  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',\n  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',\n  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',\n  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',\n  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',\n  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',\n  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',\n  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',\n  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',\n  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',\n  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',\n  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',\n  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',\n  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',\n  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',\n  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',\n  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',\n  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',\n  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',\n  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',\n  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',\n  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',\n  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',\n  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',\n  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',\n  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',\n  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',\n  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',\n  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1'\n};\n","import { sopClassDictionary } from './sopClassDictionary';\n\n/**\n * Checks whether dicom files with specified SOP Class UID have image data\n * @param {string} sopClassUid - SOP Class UID to be checked\n * @returns {boolean} - true if it has image data\n */\nexport function isImage(sopClassUid) {\n  if (\n    sopClassUid === sopClassDictionary.ComputedRadiographyImageStorage ||\n    sopClassUid === sopClassDictionary.DigitalXRayImageStorageForPresentation ||\n    sopClassUid === sopClassDictionary.DigitalXRayImageStorageForProcessing ||\n    sopClassUid ===\n      sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation ||\n    sopClassUid ===\n      sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing ||\n    sopClassUid ===\n      sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation ||\n    sopClassUid ===\n      sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing ||\n    sopClassUid === sopClassDictionary.CTImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedCTImageStorage ||\n    sopClassUid === sopClassDictionary.LegacyConvertedEnhancedCTImageStorage ||\n    sopClassUid === sopClassDictionary.UltrasoundMultiframeImageStorage ||\n    sopClassUid === sopClassDictionary.MRImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedMRImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedMRColorImageStorage ||\n    sopClassUid === sopClassDictionary.LegacyConvertedEnhancedMRImageStorage ||\n    sopClassUid === sopClassDictionary.UltrasoundImageStorage ||\n    sopClassUid === sopClassDictionary.SecondaryCaptureImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage ||\n    sopClassUid === sopClassDictionary.XRayAngiographicImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedXAImageStorage ||\n    sopClassUid === sopClassDictionary.XRayRadiofluoroscopicImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedXRFImageStorage ||\n    sopClassUid === sopClassDictionary.XRay3DAngiographicImageStorage ||\n    sopClassUid === sopClassDictionary.XRay3DCraniofacialImageStorage ||\n    sopClassUid === sopClassDictionary.BreastTomosynthesisImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.BreastProjectionXRayImageStorageForPresentation ||\n    sopClassUid ===\n      sopClassDictionary.BreastProjectionXRayImageStorageForProcessing ||\n    sopClassUid ===\n      sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation ||\n    sopClassUid ===\n      sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing ||\n    sopClassUid === sopClassDictionary.NuclearMedicineImageStorage ||\n    sopClassUid === sopClassDictionary.VLEndoscopicImageStorage ||\n    sopClassUid === sopClassDictionary.VideoEndoscopicImageStorage ||\n    sopClassUid === sopClassDictionary.VLMicroscopicImageStorage ||\n    sopClassUid === sopClassDictionary.VideoMicroscopicImageStorage ||\n    sopClassUid ===\n      sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage ||\n    sopClassUid === sopClassDictionary.VLPhotographicImageStorage ||\n    sopClassUid === sopClassDictionary.VideoPhotographicImageStorage ||\n    sopClassUid === sopClassDictionary.OphthalmicPhotography8BitImageStorage ||\n    sopClassUid === sopClassDictionary.OphthalmicPhotography16BitImageStorage ||\n    sopClassUid === sopClassDictionary.OphthalmicTomographyImageStorage ||\n    sopClassUid === sopClassDictionary.VLWholeSlideMicroscopyImageStorage ||\n    sopClassUid === sopClassDictionary.PositronEmissionTomographyImageStorage ||\n    sopClassUid === sopClassDictionary.EnhancedPETImageStorage ||\n    sopClassUid === sopClassDictionary.LegacyConvertedEnhancedPETImageStorage ||\n    sopClassUid === sopClassDictionary.RTImageStorage\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import ImageSet from '../classes/ImageSet';\nimport { isImage } from './isImage';\n\nconst isMultiFrame = instance => {\n  // NumberOfFrames (0028,0008)\n  return instance.getRawValue('x00280008') > 1;\n};\n\nconst makeDisplaySet = (series, instances) => {\n  const instance = instances[0];\n\n  const imageSet = new ImageSet(instances);\n  const seriesData = series.getData();\n\n  // set appropriate attributes to image set...\n  imageSet.setAttributes({\n    displaySetInstanceUid: imageSet.uid, // create a local alias for the imageSet UID\n    seriesDate: seriesData.seriesDate,\n    seriesTime: seriesData.seriesTime,\n    seriesInstanceUid: series.getSeriesInstanceUID(),\n    seriesNumber: instance.getRawValue('x00200011'),\n    seriesDescription: instance.getRawValue('x0008103e'),\n    numImageFrames: instances.length,\n    frameRate: instance.getRawValue('x00181063'),\n    modality: instance.getRawValue('x00080060'),\n    isMultiFrame: isMultiFrame(instance)\n  });\n\n  // Sort the images in this series if needed\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\n  if (shallSort) {\n    imageSet.sortBy((a, b) => {\n      // Sort by InstanceNumber (0020,0013)\n      return (\n        (parseInt(a.getRawValue('x00200013', 0)) || 0) -\n        (parseInt(b.getRawValue('x00200013', 0)) || 0)\n      );\n    });\n  }\n\n  // Include the first image instance number (after sorted)\n  imageSet.setAttribute(\n    'instanceNumber',\n    imageSet.getImage(0).getRawValue('x00200013')\n  );\n\n  return imageSet;\n};\n\nconst isSingleImageModality = modality => {\n  return modality === 'CR' || modality === 'MG' || modality === 'DX';\n};\n\n/**\n * Creates a set of series to be placed in the Study Metadata\n * The series that appear in the Study Metadata must represent\n * imaging modalities.\n *\n * Furthermore, for drag/drop functionality,\n * it is easiest if the stack objects also contain information about\n * which study they are linked to.\n *\n * @param study The study instance metadata to be used\n * @returns {Array} An array of series to be placed in the Study Metadata\n */\nfunction createStacks(study) {\n  // Define an empty array of display sets\n  const displaySets = [];\n\n  if (!study || !study.getSeriesCount()) {\n    return displaySets;\n  }\n\n  // Loop through the series (SeriesMetadata)\n  study.forEachSeries(series => {\n    // If the series has no instances, skip it\n    if (!series.getInstanceCount()) {\n      return;\n    }\n\n    // Search through the instances (InstanceMedatada object) of this series\n    // Split Multi-frame instances and Single-image modalities\n    // into their own specific display sets. Place the rest of each\n    // series into another display set.\n    const stackableInstances = [];\n    series.forEachInstance(instance => {\n      // All imaging modalities must have a valid value for sopClassUid (x00080016) or rows (x00280010)\n      if (\n        !isImage(instance.getRawValue('x00080016')) &&\n        !instance.getRawValue('x00280010')\n      ) {\n        return;\n      }\n\n      let displaySet;\n      if (isMultiFrame(instance)) {\n        displaySet = makeDisplaySet(series, [instance]);\n        displaySet.setAttributes({\n          isClip: true,\n          studyInstanceUid: study.getStudyInstanceUID(), // Include the study instance Uid for drag/drop purposes\n          numImageFrames: instance.getRawValue('x00280008'), // Override the default value of instances.length\n          instanceNumber: instance.getRawValue('x00200013'), // Include the instance number\n          acquisitionDatetime: instance.getRawValue('x0008002a') // Include the acquisition datetime\n        });\n        displaySets.push(displaySet);\n      } else if (isSingleImageModality(instance.modality)) {\n        displaySet = makeDisplaySet(series, [instance]);\n        displaySet.setAttributes({\n          studyInstanceUid: study.getStudyInstanceUID(), // Include the study instance Uid\n          instanceNumber: instance.getRawValue('x00200013'), // Include the instance number\n          acquisitionDatetime: instance.getRawValue('x0008002a') // Include the acquisition datetime\n        });\n        displaySets.push(displaySet);\n      } else {\n        stackableInstances.push(instance);\n      }\n    });\n\n    if (stackableInstances.length) {\n      const displaySet = makeDisplaySet(series, stackableInstances);\n      displaySet.setAttribute('studyInstanceUid', study.getStudyInstanceUID());\n      displaySets.push(displaySet);\n    }\n  });\n\n  return displaySets;\n}\n\n/**\n * Expose \"createStacks\"...\n */\n\nexport default createStacks;\n","import { InstanceMetadata } from './InstanceMetadata';\nimport { DICOMTagDescriptions } from '../../lib/DICOMTagDescriptions.js';\nimport getImageId from '../../utils/getImageId.js';\n\nexport class OHIFInstanceMetadata extends InstanceMetadata {\n  /**\n   * @param {Object} Instance object.\n   */\n  constructor(data, series, study, uid) {\n    super(data, uid);\n    this.init(series, study);\n  }\n\n  init(series, study) {\n    const instance = this.getData();\n\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _sopInstanceUID: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance.sopInstanceUid\n      },\n      _study: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: study\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: series\n      },\n      _instance: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance\n      },\n      _cache: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Object.create(null)\n      }\n    });\n  }\n\n  // Override\n  getTagValue(tagOrProperty, defaultValue, bypassCache) {\n    // check if this property has been cached...\n    if (tagOrProperty in this._cache && bypassCache !== true) {\n      return this._cache[tagOrProperty];\n    }\n\n    const propertyName = OHIFInstanceMetadata.getPropertyName(tagOrProperty);\n\n    // Search property value in the whole study metadata chain...\n    let rawValue;\n    if (propertyName in this._instance) {\n      rawValue = this._instance[propertyName];\n    } else if (propertyName in this._series) {\n      rawValue = this._series[propertyName];\n    } else if (propertyName in this._study) {\n      rawValue = this._study[propertyName];\n    }\n\n    if (rawValue !== void 0) {\n      // if rawValue value is not undefined, cache result...\n      this._cache[tagOrProperty] = rawValue;\n      return rawValue;\n    }\n\n    return defaultValue;\n  }\n\n  // Override\n  tagExists(tagOrProperty) {\n    const propertyName = OHIFInstanceMetadata.getPropertyName(tagOrProperty);\n\n    return (\n      propertyName in this._instance ||\n      propertyName in this._series ||\n      propertyName in this._study\n    );\n  }\n\n  // Override\n  getImageId(frame, thumbnail) {\n    // If _imageID is not cached, create it\n    if (this._imageId === null) {\n      this._imageId = getImageId(this.getData(), frame, thumbnail);\n    }\n\n    return this._imageId;\n  }\n\n  /**\n   * Static methods\n   */\n\n  // @TODO: The current mapping of standard DICOM property names to local property names is not optimal.\n  // The inconsistency in property naming makes this function increasingly complex.\n  // A possible solution to improve this would be adapt retriveMetadata names to use DICOM standard names as in dicomTagDescriptions.js\n  static getPropertyName(tagOrProperty) {\n    let propertyName;\n    const tagInfo = DICOMTagDescriptions.find(tagOrProperty);\n\n    if (tagInfo !== void 0) {\n      // This function tries to translate standard DICOM property names into local naming convention.\n      propertyName = tagInfo.keyword\n        .replace(/^SOP/, 'sop')\n        .replace(/UID$/, 'Uid')\n        .replace(/ID$/, 'Id');\n      propertyName =\n        propertyName.charAt(0).toLowerCase() + propertyName.substr(1);\n    }\n\n    return propertyName;\n  }\n}\n","import { SeriesMetadata } from './SeriesMetadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\n\nexport class OHIFSeriesMetadata extends SeriesMetadata {\n\n    /**\n     * @param {Object} Series object.\n     */\n    constructor(data, study, uid) {\n        super(data, uid);\n        this.init(study);\n    }\n\n    init(study) {\n        const series = this.getData();\n\n        // define \"_seriesInstanceUID\" protected property...\n        Object.defineProperty(this, '_seriesInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: series.seriesInstanceUid\n        });\n\n        // populate internal list of instances...\n        series.instances.forEach(instance => {\n            this.addInstance(new OHIFInstanceMetadata(instance, series, study));\n        });\n    }\n\n}\n\n","import { StudyMetadata } from './StudyMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\n\nexport class OHIFStudyMetadata extends StudyMetadata {\n\n    /**\n     * @param {Object} Study object.\n     */\n    constructor(data, uid) {\n        super(data, uid);\n        this.init();\n    }\n\n    init() {\n        const study = this.getData();\n\n        // define \"_studyInstanceUID\" protected property\n        Object.defineProperty(this, '_studyInstanceUID', {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: study.studyInstanceUid\n        });\n\n        // populate internal list of series\n        study.seriesList.forEach(series => {\n            this.addSeries(new OHIFSeriesMetadata(series, study));\n        });\n    }\n\n}\n","import createStacks from './createStacks';\n\nconst getDisplaySets = (studyMetadata, seriesNumber, iteratorFunction) => {\n  const iteratorFn =\n    typeof iteratorFunction !== 'function' ? createStacks : iteratorFunction;\n\n  return iteratorFn(studyMetadata, seriesNumber);\n};\n\nconst sortingManager = {\n  getDisplaySets\n};\n\nexport { sortingManager };\n","import { OHIFStudyMetadata } from '../classes/metadata/OHIFStudyMetadata';\nimport { sortingManager } from './sortingManager.js';\nimport { updateMetaDataManager } from './updateMetaDataManager.js';\n\nexport default function createDisplaySets(studies) {\n  // Define the OHIF.viewer.data global object\n  // TODO: Save all data that is currently in OHIF.viewer in redux instead\n  //OHIF.viewer.data = OHIF.viewer.data || {};\n\n  // @TypeSafeStudies\n  // Clears OHIF.viewer.Studies collection\n  //OHIF.viewer.Studies.removeAll();\n\n  // @TypeSafeStudies\n  // Clears OHIF.viewer.StudyMetadataList collection\n  //OHIF.viewer.StudyMetadataList.removeAll();\n\n  //OHIF.viewer.data.studyInstanceUids = [];\n\n  const updatedStudies = studies.map(study => {\n    const studyMetadata = new OHIFStudyMetadata(study, study.studyInstanceUid);\n    let displaySets = study.displaySets;\n\n    if (!study.displaySets) {\n      displaySets = sortingManager.getDisplaySets(studyMetadata);\n      study.displaySets = displaySets;\n    }\n\n    studyMetadata.setDisplaySets(displaySets);\n\n    study.selected = true;\n    //OHIF.viewer.Studies.insert(study);\n    //OHIF.viewer.StudyMetadataList.insert(studyMetadata);\n    //OHIF.viewer.data.studyInstanceUids.push(study.studyInstanceUid);\n\n    // Updates WADO-RS metaDataManager\n    updateMetaDataManager(study);\n\n    return study;\n  });\n\n  return updatedStudies;\n}\n","import ObjectPath from './objectPath';\nimport guid from './guid';\nimport absoluteUrl from './absoluteUrl';\nimport addServers from './addServers';\nimport sortBy from './sortBy.js';\nimport writeScript from './writeScript.js';\nimport StackManager from './StackManager.js';\nimport createStacks from './createStacks.js';\nimport createDisplaySets from './createDisplaySets.js';\n\nconst utils = {\n  guid,\n  ObjectPath,\n  absoluteUrl,\n  addServers,\n  sortBy,\n  writeScript,\n  StackManager,\n  createStacks,\n  createDisplaySets\n};\n\nexport default utils;\n","import { StudyMetadata } from './StudyMetadata';\nimport { SeriesMetadata } from './SeriesMetadata';\nimport { InstanceMetadata } from './InstanceMetadata';\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\nimport { Metadata } from './Metadata';\nimport { WadoRsMetaDataBuilder } from './WadoRsMetaDataBuilder';\n\nconst metadata = {\n    Metadata,\n    WadoRsMetaDataBuilder,\n    StudyMetadata,\n    SeriesMetadata,\n    InstanceMetadata,\n    OHIFStudyMetadata,\n    OHIFSeriesMetadata,\n    OHIFInstanceMetadata\n}\n\nexport default metadata;\n","import cornerstoneMath from 'cornerstone-math';\nimport { parsingUtils } from '../lib/parsingUtils';\n\nconst FUNCTION = 'function';\n\nclass MetadataProvider {\n  constructor() {\n    // Define the main \"metadataLookup\" private property as an immutable property.\n    Object.defineProperty(this, 'metadataLookup', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: new Map()\n    });\n\n    // Local reference to provider function bound to current instance.\n    Object.defineProperty(this, '_provider', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n  }\n\n  /**\n   * Cornerstone Metadata provider to store image meta data\n   * Data from instances, series, and studies are associated with\n   * imageIds to facilitate usage of this information by Cornerstone's Tools\n   *\n   * e.g. the imagePlane metadata object contains instance information about\n   * row/column pixel spacing, patient position, and patient orientation. It\n   * is used in CornerstoneTools to position reference lines and orientation markers.\n   *\n   * @param {String} imageId The Cornerstone ImageId\n   * @param {Object} data An object containing instance, series, and study metadata\n   */\n  addMetadata(imageId, data) {\n    const instanceMetadata = data.instance;\n    const seriesMetadata = data.series;\n    const studyMetadata = data.study;\n    const numImages = data.numImages;\n    const metadata = {};\n\n    metadata.frameNumber = data.frameNumber;\n\n    metadata.study = {\n      accessionNumber: studyMetadata.accessionNumber,\n      patientId: studyMetadata.patientId,\n      studyInstanceUid: studyMetadata.studyInstanceUid,\n      studyDate: studyMetadata.studyDate,\n      studyTime: studyMetadata.studyTime,\n      studyDescription: studyMetadata.studyDescription,\n      institutionName: studyMetadata.institutionName,\n      patientHistory: studyMetadata.patientHistory\n    };\n\n    metadata.series = {\n      seriesDescription: seriesMetadata.seriesDescription,\n      seriesNumber: seriesMetadata.seriesNumber,\n      seriesDate: seriesMetadata.seriesDate,\n      seriesTime: seriesMetadata.seriesTime,\n      modality: seriesMetadata.modality,\n      seriesInstanceUid: seriesMetadata.seriesInstanceUid,\n      numImages: numImages\n    };\n\n    metadata.instance = instanceMetadata;\n\n    metadata.patient = {\n      name: studyMetadata.patientName,\n      id: studyMetadata.patientId,\n      birthDate: studyMetadata.patientBirthDate,\n      sex: studyMetadata.patientSex,\n      age: studyMetadata.patientAge\n    };\n\n    // If there is sufficient information, populate\n    // the imagePlane object for easier use in the Viewer\n    metadata.imagePlane = this.getImagePlane(instanceMetadata);\n\n    // Add the metadata to the imageId lookup object\n    this.metadataLookup.set(imageId, metadata);\n  }\n\n  /**\n   * Return the metadata for the given imageId\n   * @param {String} imageId The Cornerstone ImageId\n   * @returns image metadata\n   */\n  getMetadata(imageId) {\n    return this.metadataLookup.get(imageId);\n  }\n\n  /**\n   * Adds a set of metadata to the Cornerstone metadata provider given a specific\n   * imageId, type, and dataset\n   *\n   * @param imageId\n   * @param type (e.g. series, instance, tagDisplay)\n   * @param data\n   */\n  addSpecificMetadata(imageId, type, data) {\n    const metadata = {};\n    metadata[type] = data;\n\n    const oldMetadata = this.metadataLookup.get(imageId);\n    this.metadataLookup.set(imageId, Object.assign(oldMetadata, metadata));\n  }\n\n  getFromImage(image, type, tag, attrName, defaultValue) {\n    let value;\n\n    if (image.data) {\n      value = this.getFromDataSet(image.data, type, tag);\n    } else {\n      value = image.instance[attrName];\n    }\n\n    return value === null ? defaultValue : value;\n  }\n\n  getFromDataSet(dataSet, type, tag) {\n    if (!dataSet) {\n      return;\n    }\n\n    const fn = dataSet[type];\n    if (!fn) {\n      return;\n    }\n\n    return fn.call(dataSet, tag);\n  }\n\n  getFrameIncrementPointer(image) {\n    const dataSet = image.data;\n    let frameInstancePointer = '';\n\n    if (parsingUtils.isValidDataSet(dataSet)) {\n      const frameInstancePointerNames = {\n        x00181063: 'frameTime',\n        x00181065: 'frameTimeVector'\n      };\n\n      // (0028,0009) = Frame Increment Pointer\n      const frameInstancePointerTag = parsingUtils.attributeTag(\n        dataSet,\n        'x00280009'\n      );\n      frameInstancePointer = frameInstancePointerNames[frameInstancePointerTag];\n    } else {\n      frameInstancePointer = image.instance.frameIncrementPointer;\n    }\n\n    return frameInstancePointer || '';\n  }\n\n  getFrameTimeVector(image) {\n    const dataSet = image.data;\n\n    if (parsingUtils.isValidDataSet(dataSet)) {\n      // Frame Increment Pointer points to Frame Time Vector (0018,1065) field\n      return parsingUtils.floatArray(dataSet, 'x00181065');\n    }\n\n    return image.instance.frameTimeVector;\n  }\n\n  getFrameTime(image) {\n    const dataSet = image.data;\n\n    if (parsingUtils.isValidDataSet(dataSet)) {\n      // Frame Increment Pointer points to Frame Time (0018,1063) field or is not defined (for addtional flexibility).\n      // Yet another value is possible for this field (5200,9230 for Multi-frame Functional Groups)\n      // but that case is currently not supported.\n      return dataSet.floatString('x00181063', -1);\n    }\n\n    return image.instance.frameTime;\n  }\n\n  /**\n   * Updates the related metadata for missing fields given a specified image\n   *\n   * @param image\n   */\n  updateMetadata(image) {\n    const imageMetadata = this.metadataLookup.get(image.imageId);\n    if (!imageMetadata) {\n      return;\n    }\n\n    imageMetadata.patient.age =\n      imageMetadata.patient.age ||\n      this.getFromDataSet(image.data, 'string', 'x00101010');\n\n    imageMetadata.instance.rows = imageMetadata.instance.rows || image.rows;\n    imageMetadata.instance.columns =\n      imageMetadata.instance.columns || image.columns;\n\n    imageMetadata.instance.sopClassUid =\n      imageMetadata.instance.sopClassUid ||\n      this.getFromDataSet(image.data, 'string', 'x00080016');\n    imageMetadata.instance.sopInstanceUid =\n      imageMetadata.instance.sopInstanceUid ||\n      this.getFromDataSet(image.data, 'string', 'x00080018');\n\n    imageMetadata.instance.pixelSpacing =\n      imageMetadata.instance.pixelSpacing ||\n      this.getFromDataSet(image.data, 'string', 'x00280030');\n    imageMetadata.instance.frameOfReferenceUID =\n      imageMetadata.instance.frameOfReferenceUID ||\n      this.getFromDataSet(image.data, 'string', 'x00200052');\n    imageMetadata.instance.imageOrientationPatient =\n      imageMetadata.instance.imageOrientationPatient ||\n      this.getFromDataSet(image.data, 'string', 'x00200037');\n    imageMetadata.instance.imagePositionPatient =\n      imageMetadata.instance.imagePositionPatient ||\n      this.getFromDataSet(image.data, 'string', 'x00200032');\n\n    imageMetadata.instance.sliceThickness =\n      imageMetadata.instance.sliceThickness ||\n      this.getFromDataSet(image.data, 'string', 'x00180050');\n    imageMetadata.instance.sliceLocation =\n      imageMetadata.instance.sliceLocation ||\n      this.getFromDataSet(image.data, 'string', 'x00201041');\n    imageMetadata.instance.tablePosition =\n      imageMetadata.instance.tablePosition ||\n      this.getFromDataSet(image.data, 'string', 'x00189327');\n    imageMetadata.instance.spacingBetweenSlices =\n      imageMetadata.instance.spacingBetweenSlices ||\n      this.getFromDataSet(image.data, 'string', 'x00180088');\n\n    imageMetadata.instance.lossyImageCompression =\n      imageMetadata.instance.lossyImageCompression ||\n      this.getFromDataSet(image.data, 'string', 'x00282110');\n    imageMetadata.instance.lossyImageCompressionRatio =\n      imageMetadata.instance.lossyImageCompressionRatio ||\n      this.getFromDataSet(image.data, 'string', 'x00282112');\n\n    imageMetadata.instance.frameIncrementPointer =\n      imageMetadata.instance.frameIncrementPointer ||\n      this.getFromDataSet(image.data, 'string', 'x00280009');\n    imageMetadata.instance.frameTime =\n      imageMetadata.instance.frameTime ||\n      this.getFromDataSet(image.data, 'string', 'x00181063');\n    imageMetadata.instance.frameTimeVector =\n      imageMetadata.instance.frameTimeVector ||\n      this.getFromDataSet(image.data, 'string', 'x00181065');\n\n    if (\n      (image.data || image.instance) &&\n      !imageMetadata.instance.multiframeMetadata\n    ) {\n      imageMetadata.instance.multiframeMetadata = this.getMultiframeModuleMetadata(\n        image\n      );\n    }\n\n    imageMetadata.imagePlane =\n      imageMetadata.imagePlane || this.getImagePlane(imageMetadata.instance);\n  }\n\n  /**\n   * Constructs and returns the imagePlane given the metadata instance\n   *\n   * @param metadataInstance The metadata instance (InstanceMetadata class) containing information to construct imagePlane\n   * @returns imagePlane The constructed imagePlane to be used in viewer easily\n   */\n  getImagePlane(instance) {\n    if (\n      !instance.rows ||\n      !instance.columns ||\n      !instance.pixelSpacing ||\n      !instance.frameOfReferenceUID ||\n      !instance.imageOrientationPatient ||\n      !instance.imagePositionPatient\n    ) {\n      return;\n    }\n\n    const imageOrientation = instance.imageOrientationPatient.split('\\\\');\n    const imagePosition = instance.imagePositionPatient.split('\\\\');\n\n    let columnPixelSpacing = 1.0;\n    let rowPixelSpacing = 1.0;\n    if (instance.pixelSpacing) {\n      const split = instance.pixelSpacing.split('\\\\');\n      rowPixelSpacing = parseFloat(split[0]);\n      columnPixelSpacing = parseFloat(split[1]);\n    }\n\n    return {\n      frameOfReferenceUID: instance.frameOfReferenceUID,\n      rows: instance.rows,\n      columns: instance.columns,\n      rowCosines: new cornerstoneMath.Vector3(\n        parseFloat(imageOrientation[0]),\n        parseFloat(imageOrientation[1]),\n        parseFloat(imageOrientation[2])\n      ),\n      columnCosines: new cornerstoneMath.Vector3(\n        parseFloat(imageOrientation[3]),\n        parseFloat(imageOrientation[4]),\n        parseFloat(imageOrientation[5])\n      ),\n      imagePositionPatient: new cornerstoneMath.Vector3(\n        parseFloat(imagePosition[0]),\n        parseFloat(imagePosition[1]),\n        parseFloat(imagePosition[2])\n      ),\n      rowPixelSpacing,\n      columnPixelSpacing\n    };\n  }\n\n  /**\n   * This function extracts miltiframe information from a dicomParser.DataSet object.\n   *\n   * @param dataSet {Object} An instance of dicomParser.DataSet object where multiframe information can be found.\n   * @return {Object} An object containing multiframe image metadata (frameIncrementPointer, frameTime, frameTimeVector, etc).\n   */\n  getMultiframeModuleMetadata(image) {\n    const imageInfo = {\n      isMultiframeImage: false,\n      frameIncrementPointer: null,\n      numberOfFrames: 0,\n      frameTime: 0,\n      frameTimeVector: null,\n      averageFrameRate: 0 // backwards compatibility only... it might be useless in the future\n    };\n\n    let frameTime;\n\n    const numberOfFrames = this.getFromImage(\n      image,\n      'intString',\n      'x00280008',\n      'numberOfFrames',\n      -1\n    );\n\n    if (numberOfFrames > 0) {\n      // set multi-frame image indicator\n      imageInfo.isMultiframeImage = true;\n      imageInfo.numberOfFrames = numberOfFrames;\n\n      // (0028,0009) = Frame Increment Pointer\n      const frameIncrementPointer = this.getFrameIncrementPointer(image);\n\n      if (frameIncrementPointer === 'frameTimeVector') {\n        // Frame Increment Pointer points to Frame Time Vector (0018,1065) field\n        const frameTimeVector = this.getFrameTimeVector(image);\n\n        if (frameTimeVector instanceof Array && frameTimeVector.length > 0) {\n          imageInfo.frameIncrementPointer = frameIncrementPointer;\n          imageInfo.frameTimeVector = frameTimeVector;\n          frameTime =\n            frameTimeVector.reduce((a, b) => a + b) / frameTimeVector.length;\n          imageInfo.averageFrameRate = 1000 / frameTime;\n        }\n      } else if (\n        frameIncrementPointer === 'frameTime' ||\n        frameIncrementPointer === ''\n      ) {\n        frameTime = this.getFrameTime(image);\n\n        if (frameTime > 0) {\n          imageInfo.frameIncrementPointer = frameIncrementPointer;\n          imageInfo.frameTime = frameTime;\n          imageInfo.averageFrameRate = 1000 / frameTime;\n        }\n      }\n    }\n\n    return imageInfo;\n  }\n\n  /**\n   * Get a bound reference to the provider function.\n   */\n  getProvider() {\n    let provider = this._provider;\n    if (typeof this._provider !== FUNCTION) {\n      provider = this.provider.bind(this);\n      this._provider = provider;\n    }\n\n    return provider;\n  }\n\n  /**\n   * Looks up metadata for Cornerstone Tools given a specified type and imageId\n   * A type may be, e.g. 'study', or 'patient', or 'imagePlane'. These types\n   * are keys in the stored metadata objects.\n   *\n   * @param type\n   * @param imageId\n   * @returns {Object} Relevant metadata of the specified type\n   */\n  provider(type, imageId) {\n    // TODO: Cornerstone Tools use 'imagePlaneModule', but OHIF use 'imagePlane'. It must be consistent.\n    if (type === 'imagePlaneModule') {\n      type = 'imagePlane';\n    }\n\n    const imageMetadata = this.metadataLookup.get(imageId);\n    if (!imageMetadata) {\n      return;\n    }\n\n    if (imageMetadata.hasOwnProperty(type)) {\n      return imageMetadata[type];\n    }\n  }\n}\n\nexport default MetadataProvider;\n","import MetadataProvider from './classes/MetadataProvider';\nimport {\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox\n} from './lib/cornerstone.js';\n\nconst cornerstone = {\n\tMetadataProvider,\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox\n};\n\nexport default cornerstone;\n\n","import log from '../log.js';\nimport OHIFError from './OHIFError';\nimport getImageId from '../utils/getImageId.js';\nimport external from '../externalModules.js';\n\nexport class StudyPrefetcher {\n  constructor(studies) {\n    this.studies = studies || [];\n    this.prefetchDisplaySetsTimeout = 300;\n    this.lastActiveViewportElement = null;\n\n    external.cornerstone.events.addEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  destroy() {\n    this.stopPrefetching();\n    external.cornerstone.events.removeEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  static getInstance() {\n    if (!StudyPrefetcher.instance) {\n      StudyPrefetcher.instance = new StudyPrefetcher([]);\n    }\n\n    return StudyPrefetcher.instance;\n  }\n\n  setStudies(studies) {\n    this.stopPrefetching();\n    this.studies = studies;\n  }\n\n  prefetch() {\n    if (!this.studies || !this.studies.length) {\n      return;\n    }\n\n    this.stopPrefetching();\n    this.prefetchDisplaySets();\n  }\n\n  stopPrefetching() {\n    external.cornerstoneTools.requestPoolManager.clearRequestStack('prefetch');\n  }\n\n  prefetchDisplaySetsAsync(timeout) {\n    timeout = timeout || this.prefetchDisplaySetsTimeout;\n\n    clearTimeout(this.prefetchDisplaySetsHandler);\n    this.prefetchDisplaySetsHandler = setTimeout(() => {\n      this.prefetchDisplaySets();\n    }, timeout);\n  }\n\n  prefetchDisplaySets() {\n    // TODO: Allow passing in config\n    let config = {\n      order: 'closest',\n      displaySetCount: 1\n    };\n\n    const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(config);\n    const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\n\n    this.prefetchImageIds(imageIds);\n  }\n\n  prefetchImageIds(imageIds) {\n    const nonCachedImageIds = this.filterCachedImageIds(imageIds);\n    const requestPoolManager = external.cornerstoneTools.requestPoolManager;\n    const requestType = 'prefetch';\n    const preventCache = false;\n    const noop = () => {};\n\n    nonCachedImageIds.forEach(imageId => {\n      requestPoolManager.addRequest(\n        {},\n        imageId,\n        requestType,\n        preventCache,\n        noop,\n        noop\n      );\n    });\n\n    requestPoolManager.startGrabbing();\n  }\n\n  getStudy(image) {\n    const studyMetadata = external.cornerstone.metaData.get(\n      'study',\n      image.imageId\n    );\n    return OHIF.viewer.Studies.find(\n      study => study.studyInstanceUid === studyMetadata.studyInstanceUid\n    );\n  }\n\n  getSeries(study, image) {\n    const seriesMetadata = external.cornerstone.metaData.get(\n      'series',\n      image.imageId\n    );\n    const studyMetadata = OHIF.viewerbase.getStudyMetadata(study);\n\n    return studyMetadata.getSeriesByUID(seriesMetadata.seriesInstanceUid);\n  }\n\n  getInstance(series, image) {\n    const instanceMetadata = external.cornerstone.metaData.get(\n      'instance',\n      image.imageId\n    );\n    return series.getInstanceByUID(instanceMetadata.sopInstanceUid);\n  }\n\n  getActiveDisplaySet(displaySets, instance) {\n    return displaySets.find(displaySet => {\n      return displaySet.images.some(displaySetImage => {\n        return displaySetImage.sopInstanceUid === instance.sopInstanceUid;\n      });\n    });\n  }\n\n  getDisplaySetsToPrefetch(config) {\n    const image = this.getActiveViewportImage();\n\n    if (!image || !config || !config.displaySetCount) {\n      return [];\n    }\n\n    /*const study = this.getStudy(image);\n    const series = this.getSeries(study, image);\n    const instance = this.getInstance(series, image);*/\n    const displaySets = study.displaySets;\n    const activeDisplaySet = null; //this.getActiveDisplaySet(displaySets, instance);\n    const prefetchMethodMap = {\n      topdown: 'getFirstDisplaySets',\n      downward: 'getNextDisplaySets',\n      closest: 'getClosestDisplaySets'\n    };\n\n    const prefetchOrder = config.order;\n    const methodName = prefetchMethodMap[prefetchOrder];\n    const getDisplaySets = this[methodName];\n\n    if (!getDisplaySets) {\n      if (prefetchOrder) {\n        log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\n      }\n\n      return [];\n    }\n\n    return getDisplaySets.call(\n      this,\n      displaySets,\n      activeDisplaySet,\n      config.displaySetCount\n    );\n  }\n\n  getFirstDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n\n    for (let i = 0; i < length && displaySetCount; i++) {\n      const displaySet = displaySets[i];\n\n      if (displaySet !== activeDisplaySet) {\n        selectedDisplaySets.push(displaySet);\n        displaySetCount--;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  getNextDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const begin = activeDisplaySetIndex + 1;\n    const end = Math.min(begin + displaySetCount, displaySets.length);\n\n    return displaySets.slice(begin, end);\n  }\n\n  getClosestDisplaySets(displaySets, activeDisplaySet, displaySetCount) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n    let left = activeDisplaySetIndex - 1;\n    let right = activeDisplaySetIndex + 1;\n\n    while ((left >= 0 || right < length) && displaySetCount) {\n      if (left >= 0) {\n        selectedDisplaySets.push(displaySets[left]);\n        displaySetCount--;\n        left--;\n      }\n\n      if (right < length && displaySetCount) {\n        selectedDisplaySets.push(displaySets[right]);\n        displaySetCount--;\n        right++;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  getImageIdsFromDisplaySets(displaySets) {\n    let imageIds = [];\n\n    displaySets.forEach(displaySet => {\n      imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\n    });\n\n    return imageIds;\n  }\n\n  getImageIdsFromDisplaySet(displaySet) {\n    const imageIds = [];\n\n    // TODO: This duplicates work done by the stack manager\n    displaySet.images.forEach(image => {\n      const numFrames = image.numFrames;\n      if (numFrames > 1) {\n        for (let i = 0; i < numFrames; i++) {\n          let imageId = getImageId(image, i);\n          imageIds.push(imageId);\n        }\n      } else {\n        let imageId = getImageId(image);\n        imageIds.push(imageId);\n      }\n    });\n\n    return imageIds;\n  }\n\n  filterCachedImageIds(imageIds) {\n    return imageIds.filter(imageId => !this.isImageCached(imageId));\n  }\n\n  isImageCached(imageId) {\n    const image = external.cornerstone.imageCache.imageCache[imageId];\n    return image && image.sizeInBytes;\n  }\n\n  cacheFullHandler = () => {\n    log.warn('Cache full');\n    this.stopPrefetching();\n  };\n}\n","export const setToolActive = tool => ({\n  type: 'SET_TOOL_ACTIVE',\n  tool\n});\n\nexport const setViewportActive = viewportIndex => ({\n  type: 'SET_VIEWPORT_ACTIVE',\n  viewportIndex\n});\n\nexport const setLayout = layout => ({\n  type: 'SET_LAYOUT',\n  layout\n});\n\nexport const setStudyLoadingProgress = (progressId, progressData) => ({\n  type: 'SET_STUDY_LOADING_PROGRESS',\n  progressId,\n  progressData\n});\n\nexport const clearStudyLoadingProgress = progressId => ({\n  type: 'CLEAR_STUDY_LOADING_PROGRESS',\n  progressId\n});\n\nexport const setUserPreferences = state => ({\n  type: 'SET_USER_PREFERENCES',\n  state\n});\n\nconst actions = {\n  setToolActive,\n  setViewportActive,\n  setLayout,\n  setStudyLoadingProgress,\n  clearStudyLoadingProgress,\n  setUserPreferences\n};\n\nexport default actions;\n","import {\n  clearStudyLoadingProgress,\n  setStudyLoadingProgress\n} from '../redux/actions';\nimport StackManager from '../utils/StackManager';\nimport external from '../externalModules.js';\n\nclass BaseLoadingListener {\n  constructor(stack, options) {\n    options = options || {};\n\n    this.id = BaseLoadingListener.getNewId();\n    this.stack = stack;\n    this.startListening();\n    this.statsItemsLimit = options.statsItemsLimit || 2;\n    this.stats = {\n      items: [],\n      total: 0,\n      elapsedTime: 0,\n      speed: 0\n    };\n\n    // Register the start point to make it possible to calculate\n    // bytes/s or frames/s when the first byte or frame is received\n    this._addStatsData(0);\n\n    // Update the progress before starting the download\n    // to make it possible to update the UI\n    this._updateProgress();\n  }\n\n  _addStatsData(value) {\n    const date = new Date();\n    const stats = this.stats;\n    const items = stats.items;\n    const newItem = {\n      value,\n      date\n    };\n\n    items.push(newItem);\n    stats.total += newItem.value;\n\n    // Remove items until it gets below the limit\n    while (items.length > this.statsItemsLimit) {\n      const item = items.shift();\n      stats.total -= item.value;\n    }\n\n    // Update the elapsedTime (seconds) based on first and last\n    // elements and recalculate the speed (bytes/s or frames/s)\n    if (items.length > 1) {\n      const oldestItem = items[0];\n      stats.elapsedTime =\n        (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\n      stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\n    }\n  }\n\n  _getProgressId() {\n    const displaySetInstanceUid = this.stack.displaySetInstanceUid;\n    return 'StackProgress:' + displaySetInstanceUid;\n  }\n\n  _clearProgress() {\n    const progressId = this._getProgressId();\n    this._clearProgressById(progressId);\n  }\n\n  startListening() {\n    throw new Error('`startListening` must be implemented by child clases');\n  }\n\n  stopListening() {\n    throw new Error('`stopListening` must be implemented by child clases');\n  }\n\n  destroy() {\n    this.stopListening();\n    this._clearProgress();\n  }\n\n  static getNewId() {\n    const timeSlice = new Date()\n      .getTime()\n      .toString()\n      .slice(-8);\n    const randomNumber = parseInt(Math.random() * 1000000000);\n\n    return timeSlice.toString() + randomNumber.toString();\n  }\n}\n\nclass DICOMFileLoadingListener extends BaseLoadingListener {\n  constructor(stack) {\n    super(stack, null);\n    this._dataSetUrl = this._getDataSetUrl(stack);\n    this._lastLoaded = 0;\n\n    // Check how many instances has already been download (cached)\n    this._checkCachedData();\n  }\n\n  _checkCachedData() {\n    const dataSet = external.cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(\n      this._dataSetUrl\n    );\n\n    if (dataSet) {\n      const dataSetLength = dataSet.byteArray.length;\n\n      this._updateProgress({\n        percentComplete: 100,\n        loaded: dataSetLength,\n        total: dataSetLength\n      });\n    }\n  }\n\n  _getImageLoadProgressEventName() {\n    return 'cornerstoneimageloadprogress.' + this.id;\n  }\n\n  startListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n\n    this.stopListening();\n\n    external.cornerstone.events.addEventListener(\n      imageLoadProgressEventName,\n      this.imageLoadProgressEventHandle\n    );\n  }\n\n  stopListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n    external.cornerstone.events.removeEventListener(imageLoadProgressEventName);\n  }\n\n  imageLoadProgressEventHandle = e => {\n    const eventData = e.detail;\n    const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\n    const bytesDiff = eventData.loaded - this._lastLoaded;\n\n    if (!this._dataSetUrl === dataSetUrl) {\n      return;\n    }\n\n    // Add the bytes downloaded to the stats\n    this._addStatsData(bytesDiff);\n\n    // Update the download progress\n    this._updateProgress(eventData);\n\n    // Cache the last eventData.loaded value\n    this._lastLoaded = eventData.loaded;\n  };\n\n  _updateProgress(eventData) {\n    const progressId = this._getProgressId();\n    eventData = eventData || {};\n\n    const progressData = {\n      multiFrame: false,\n      percentComplete: eventData.percentComplete,\n      bytesLoaded: eventData.loaded,\n      bytesTotal: eventData.total,\n      bytesPerSecond: this.stats.speed\n    };\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _convertImageIdToDataSetUrl(imageId) {\n    // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\n    imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\n\n    // Remove \"frame=999&\" from the imageId\n    imageId = imageId.replace(/frame=\\d+&?/i, '');\n\n    // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\n    imageId = imageId.replace(/&$/, '');\n\n    return imageId;\n  }\n\n  _getDataSetUrl(stack) {\n    const imageId = stack.imageIds[0];\n    return this._convertImageIdToDataSetUrl(imageId);\n  }\n}\n\nclass StackLoadingListener extends BaseLoadingListener {\n  constructor(stack) {\n    super(stack, { statsItemsLimit: 20 });\n\n    this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\n    this.framesStatus = this._createArray(stack.imageIds.length, false);\n    this.loadedCount = 0;\n\n    // Check how many instances has already been download (cached)\n    this._checkCachedData();\n  }\n\n  _convertImageIdsArrayToMap(imageIds) {\n    const imageIdsMap = new Map();\n\n    for (let i = 0; i < imageIds.length; i++) {\n      imageIdsMap.set(imageIds[i], {\n        index: i,\n        loaded: false\n      });\n    }\n\n    return imageIdsMap;\n  }\n\n  _createArray(length, defaultValue) {\n    // `new Array(length)` is an anti-pattern in javascript because its\n    // funny API. Otherwise I would go for `new Array(length).fill(false)`\n    const array = [];\n\n    for (let i = 0; i < length; i++) {\n      array[i] = defaultValue;\n    }\n\n    return array;\n  }\n\n  _checkCachedData() {\n    // const imageIds = this.stack.imageIds;\n    // TODO: No way to check status of Promise.\n    /*for(let i = 0; i < imageIds.length; i++) {\n            const imageId = imageIds[i];\n\n            const imagePromise = cornerstone.imageCache.getImageLoadObject(imageId).promise;\n\n            if (imagePromise && (imagePromise.state() === 'resolved')) {\n                this._updateFrameStatus(imageId, true);\n            }\n        }*/\n  }\n\n  _getImageLoadedEventName() {\n    return 'cornerstoneimageloaded.' + this.id;\n  }\n\n  _getImageCachePromiseRemoveEventName() {\n    return 'cornerstoneimagecachepromiseremoved.' + this.id;\n  }\n\n  _imageLoadedEventHandle(e) {\n    this._updateFrameStatus(e.detail.image.imageId, true);\n  }\n\n  _imageCachePromiseRemovedEventHandle(e) {\n    this._updateFrameStatus(e.detail.imageId, false);\n  }\n\n  startListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    this.imageLoadedEventHandle = this._imageLoadedEventHandle.bind(this);\n    this.imageCachePromiseRemovedEventHandle = this._imageCachePromiseRemovedEventHandle.bind(\n      this\n    );\n\n    this.stopListening();\n\n    external.cornerstone.events.addEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandle\n    );\n    external.cornerstone.events.addEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandle\n    );\n  }\n\n  stopListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    external.cornerstone.events.removeEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandle\n    );\n    external.cornerstone.events.removeEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandle\n    );\n  }\n\n  _updateFrameStatus(imageId, loaded) {\n    const imageData = this.imageDataMap.get(imageId);\n\n    if (!imageData || imageData.loaded === loaded) {\n      return;\n    }\n\n    // Add one more frame to the stats\n    if (loaded) {\n      this._addStatsData(1);\n    }\n\n    imageData.loaded = loaded;\n    this.framesStatus[imageData.index] = loaded;\n    this.loadedCount += loaded ? 1 : -1;\n    this._updateProgress();\n  }\n\n  _setProgressData(progressId, progressData) {\n    window.store.dispatch(setStudyLoadingProgress(progressId, progressData));\n  }\n\n  _clearProgressById(progressId) {\n    window.store.dispatch(clearStudyLoadingProgress(progressId));\n  }\n\n  _updateProgress() {\n    const totalFramesCount = this.stack.imageIds.length;\n    const loadedFramesCount = this.loadedCount;\n    const loadingFramesCount = totalFramesCount - loadedFramesCount;\n    const percentComplete = Math.round(\n      (loadedFramesCount / totalFramesCount) * 100\n    );\n    const progressId = this._getProgressId();\n    const progressData = {\n      multiFrame: true,\n      totalFramesCount,\n      loadedFramesCount,\n      loadingFramesCount,\n      percentComplete,\n      framesPerSecond: this.stats.speed,\n      framesStatus: this.framesStatus\n    };\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _logProgress() {\n    const totalFramesCount = this.stack.imageIds.length;\n    const displaySetInstanceUid = this.stack.displaySetInstanceUid;\n    let progressBar = '[';\n\n    for (let i = 0; i < totalFramesCount; i++) {\n      const ch = this.framesStatus[i] ? '|' : '.';\n      progressBar += `${ch}`;\n    }\n\n    progressBar += ']';\n    log.info(`${displaySetInstanceUid}: ${progressBar}`);\n  }\n}\n\nclass StudyLoadingListener {\n  constructor() {\n    this.listeners = {};\n  }\n\n  addStack(stack, stackMetaData) {\n    const displaySetInstanceUid = stack.displaySetInstanceUid;\n\n    if (!this.listeners[displaySetInstanceUid]) {\n      const listener = this._createListener(stack, stackMetaData);\n      if (listener) {\n        this.listeners[displaySetInstanceUid] = listener;\n      }\n    }\n  }\n\n  addStudy(study) {\n    study.displaySets.forEach(displaySet => {\n      const stack = StackManager.findOrCreateStack(study, displaySet);\n      this.addStack(stack, {\n        isMultiFrame: displaySet.isMultiFrame\n      });\n    });\n  }\n\n  addStudies(studies) {\n    if (!studies || !studies.length) {\n      return;\n    }\n\n    studies.forEach(study => this.addStudy(study));\n  }\n\n  clear() {\n    const displaySetInstanceUids = Object.keys(this.listeners);\n    const length = displaySetInstanceUids.length;\n\n    for (let i = 0; i < length; i++) {\n      const displaySetInstanceUid = displaySetInstanceUids[i];\n      const displaySet = this.listeners[displaySetInstanceUid];\n\n      displaySet.destroy();\n    }\n\n    this.listeners = {};\n  }\n\n  _createListener(stack, stackMetaData) {\n    const schema = this._getSchema(stack);\n\n    // A StackLoadingListener can be created if it's wadors or not a multiframe\n    // wadouri instance (single file) that means \"N\" files will have to be\n    // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\n    // is created only if it's a single DICOM file and there's no way to know\n    // how many frames has already been loaded (bytes/s instead of frames/s).\n    if (schema === 'wadors' || !stackMetaData.isMultiFrame) {\n      return new StackLoadingListener(stack);\n    } else {\n      return new DICOMFileLoadingListener(stack);\n    }\n  }\n\n  _getSchema(stack) {\n    const imageId = stack.imageIds[0];\n    const colonIndex = imageId.indexOf(':');\n    return imageId.substring(0, colonIndex);\n  }\n\n  // Singleton\n  static getInstance() {\n    if (!StudyLoadingListener._instance) {\n      StudyLoadingListener._instance = new StudyLoadingListener();\n    }\n\n    return StudyLoadingListener._instance;\n  }\n}\n\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\n","/**\n * Constants\n */\nconst PROPERTY_SEPARATOR = '.';\nconst ORDER_ASC = 'asc';\nconst ORDER_DESC = 'desc';\nconst MIN_COUNT = 0x00000000;\nconst MAX_COUNT = 0x7fffffff;\n\n/**\n * Class Definition\n */\nexport class TypeSafeCollection {\n  constructor() {\n    this._operationCount = MIN_COUNT;\n    this._elementList = [];\n    this._handlers = Object.create(null);\n  }\n\n  /**\n   * Private Methods\n   */\n\n  _invalidate() {\n    let count = this._operationCount;\n    this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;\n  }\n\n  _elements(silent) {\n    silent === true || this._operationCount;\n    return this._elementList;\n  }\n\n  _elementWithPayload(payload, silent) {\n    return this._elements(silent).find(item => item.payload === payload);\n  }\n\n  _elementWithId(id, silent) {\n    return this._elements(silent).find(item => item.id === id);\n  }\n\n  _trigger(event, data) {\n    let handlers = this._handlers;\n    if (event in handlers) {\n      handlers = handlers[event];\n      if (!(handlers instanceof Array)) {\n        return;\n      }\n      for (let i = 0, limit = handlers.length; i < limit; ++i) {\n        let handler = handlers[i];\n        if (_isFunction(handler)) {\n          handler.call(null, data);\n        }\n      }\n    }\n  }\n\n  /**\n   * Public Methods\n   */\n\n  onInsert(callback) {\n    if (_isFunction(callback)) {\n      let handlers = this._handlers.insert;\n      if (!(handlers instanceof Array)) {\n        handlers = [];\n        this._handlers.insert = handlers;\n      }\n      handlers.push(callback);\n    }\n  }\n\n  /**\n   * Update the payload associated with the given ID to be the new supplied payload.\n   * @param {string} id The ID of the entry that will be updated.\n   * @param {any} payload The element that will replace the previous payload.\n   * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\n   */\n  updateById(id, payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      if (found.id === id) {\n        // set result to true since the ids match...\n        result = true;\n        this._invalidate();\n      }\n    } else {\n      found = this._elementWithId(id, true);\n      if (found) {\n        found.payload = payload;\n        result = true;\n        this._invalidate();\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Signal that the given element has been changed by notifying reactive data-source observers.\n   * This method is basically a means to invalidate the inernal reactive data-source.\n   * @param {any} payload The element that has been altered.\n   * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\n   */\n  update(payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      result = true;\n      this._invalidate();\n    }\n    return result;\n  }\n\n  /**\n   * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\n   * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\n   * @param {any} payload The element to be stored.\n   * @returns {string} The ID of the inserted element or null if the element already exists...\n   */\n  insert(payload) {\n    let id = null,\n      found = this._elementWithPayload(payload, true);\n    if (!found) {\n      id = OHIF.utils.guid();\n      this._elements(true).push({ id, payload });\n      this._invalidate();\n      this._trigger('insert', { id, data: payload });\n    }\n    return id;\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @returns {void} No meaningful value is returned.\n   */\n  removeAll() {\n    let all = this._elements(true),\n      length = all.length;\n    for (let i = length - 1; i >= 0; i--) {\n      let item = all[i];\n      delete item.id;\n      delete item.payload;\n      all[i] = null;\n    }\n    all.splice(0, length);\n    this._invalidate();\n  }\n\n  /**\n   * Remove elements from the collection that match the criteria given in the property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} A list with all removed elements.\n   */\n  remove(propertyMap) {\n    let found = this.findAllEntriesBy(propertyMap),\n      foundCount = found.length,\n      removed = [];\n    if (foundCount > 0) {\n      const all = this._elements(true);\n      for (let i = foundCount - 1; i >= 0; i--) {\n        let item = found[i];\n        all.splice(item[2], 1);\n        removed.push(item[0]);\n      }\n      this._invalidate();\n    }\n    return removed;\n  }\n\n  /**\n   * Provides the ID of the given element inside the collection.\n   * @param {any} payload The element being searched for.\n   * @returns {string} The ID of the given element or undefined if the element is not present.\n   */\n  getElementId(payload) {\n    let found = this._elementWithPayload(payload);\n    return found && found.id;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  findById(id) {\n    let found = this._elementWithId(id);\n    return found && found.payload;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfElement(payload) {\n    return this._elements().indexOf(this._elementWithPayload(payload, true));\n  }\n\n  /**\n   * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\n   * @param {string} id The index of the element.\n   * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfId(id) {\n    return this._elements().indexOf(this._elementWithId(id, true));\n  }\n\n  /**\n   * Provides a list-like approach to the collection returning an element by index.\n   * @param {number} index The index of the element.\n   * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\n   */\n  getElementByIndex(index) {\n    let found = this._elements()[index >= 0 ? index : -1];\n    return found && found.payload;\n  }\n\n  /**\n   * Find an element by a criteria defined by the given callback function.\n   * Attention!!! The reactive source will not be notified if no valid callback is supplied...\n   * @param {function} callback A callback function which will define the search criteria. The callback\n   * function will be passed the collection element, its ID and its index in this very order. The callback\n   * shall return true when its criterea has been fulfilled.\n   * @returns {any} The matched element or undefined if not match was found.\n   */\n  find(callback) {\n    let found;\n    if (_isFunction(callback)) {\n      found = this._elements().find((item, index) => {\n        return callback.call(this, item.payload, item.id, index);\n      });\n    }\n    return found && found.payload;\n  }\n\n  /**\n   * Find the first element that strictly matches the specified property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Any} The matched element or undefined if not match was found.\n   */\n  findBy(propertyMap, options) {\n    let found;\n    if (_isObject(options)) {\n      // if the \"options\" argument is provided and is a valid object,\n      // it must be applied to the dataset before search...\n      const all = this.all(options);\n      if (all.length > 0) {\n        if (_isObject(propertyMap)) {\n          found = all.find(item =>\n            _compareToPropertyMapStrict(propertyMap, item)\n          );\n        } else {\n          found = all[0]; // simply extract the first element...\n        }\n      }\n    } else if (_isObject(propertyMap)) {\n      found = this._elements().find(item =>\n        _compareToPropertyMapStrict(propertyMap, item.payload)\n      );\n      if (found) {\n        found = found.payload;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that strictly match the specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\n   * in the array has the following format: [ elementData, elementId, elementIndex ].\n   */\n  findAllEntriesBy(propertyMap) {\n    const found = [];\n    if (_isObject(propertyMap)) {\n      this._elements().forEach((item, index) => {\n        if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\n          // Match! Add it to the found list...\n          found.push([item.payload, item.id, index]);\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that match a specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\n   */\n  findAllBy(propertyMap, options) {\n    const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(found, options.sort);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Executes the supplied callback function for each element of the collection.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {function} callback The callback function to be executed. The callback is passed the element,\n   * its ID and its index in this very order.\n   * @returns {void} Nothing is returned.\n   */\n  forEach(callback) {\n    if (_isFunction(callback)) {\n      this._elements().forEach((item, index) => {\n        callback.call(this, item.payload, item.id, index);\n      });\n    }\n  }\n\n  /**\n   * Count the number of elements currently in the collection.\n   * @returns {number} The current number of elements in the collection.\n   */\n  count() {\n    return this._elements().length;\n  }\n\n  /**\n   * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements stored in the collection.\n   */\n  all(options) {\n    let list = this._elements().map(item => item.payload);\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(list, options.sort);\n      }\n    }\n    return list;\n  }\n}\n\n/**\n * Utility Functions\n */\n\n/**\n * Test if supplied argument is a valid object for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n/**\n * Test if supplied argument is a valid string for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isString(subject) {\n  return typeof subject === 'string';\n}\n\n/**\n * Test if supplied argument is a valid function for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isFunction(subject) {\n  return typeof subject === 'function';\n}\n\n/**\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\n * @param {Object} targetObject The object we want read the property from...\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\n * to read object.address.street.name or object.address.street.number, respectively);\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\n */\nfunction _getPropertyValue(targetObject, propertyName) {\n  let propertyValue; // undefined (the default return value)\n  if (_isObject(targetObject) && _isString(propertyName)) {\n    const fragments = propertyName.split(PROPERTY_SEPARATOR);\n    const fragmentCount = fragments.length;\n    if (fragmentCount > 0) {\n      const firstFragment = fragments[0];\n      const remainingFragments =\n        fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\n      propertyValue = targetObject[firstFragment];\n      if (remainingFragments !== null) {\n        propertyValue = _getPropertyValue(propertyValue, remainingFragments);\n      }\n    }\n  }\n  return propertyValue;\n}\n\n/**\n * Compare a property map with a target object using strict comparison.\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\n * @param {Object} targetObject The target object whose properties will be tested.\n * @returns {boolean} Returns true if the properties match, false otherwise.\n */\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\n  let result = false;\n  // \"for in\" loops do not thown exceptions for invalid data types...\n  for (let propertyName in propertyMap) {\n    if (_hasOwnProperty.call(propertyMap, propertyName)) {\n      if (\n        propertyMap[propertyName] !==\n        _getPropertyValue(targetObject, propertyName)\n      ) {\n        result = false;\n        break;\n      } else if (result !== true) {\n        result = true;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if a sorting specifier is valid.\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\n * in the format [\"property name\", \"sorting order\"].\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\n * @param {Array} specifiers The sorting specifier to be tested.\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\n */\nfunction _isValidSortingSpecifier(specifiers) {\n  let result = true;\n  if (specifiers instanceof Array && specifiers.length > 0) {\n    for (let i = specifiers.length - 1; i >= 0; i--) {\n      const item = specifiers[i];\n      if (item instanceof Array) {\n        const property = item[0];\n        const order = item[1];\n        if (\n          _isString(property) &&\n          (order === ORDER_ASC || order === ORDER_DESC)\n        ) {\n          continue;\n        }\n      }\n      result = false;\n      break;\n    }\n  }\n  return result;\n}\n\n/**\n * Sorts an array based on sorting specifier options.\n * @param {Array} list The that needs to be sorted.\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\n * @returns {void} No value is returned. The array is sorted in place.\n */\nfunction _sortListBy(list, specifiers) {\n  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\n    const specifierCount = specifiers.length;\n    list.sort(function _sortListByCallback(a, b) {\n      // callback name for stack traces...\n      let index = 0;\n      while (index < specifierCount) {\n        const specifier = specifiers[index];\n        const property = specifier[0];\n        const order = specifier[1] === ORDER_DESC ? -1 : 1;\n        const aValue = _getPropertyValue(a, property);\n        const bValue = _getPropertyValue(b, property);\n        // @TODO: should we check for the types being compared, like:\n        // ~~ if (typeof aValue !== typeof bValue) continue;\n        // Not sure because dates, for example, can be correctly compared to numbers...\n        if (aValue < bValue) {\n          return order * -1;\n        }\n        if (aValue > bValue) {\n          return order * 1;\n        }\n        if (++index >= specifierCount) {\n          return 0;\n        }\n      }\n    });\n  } else {\n    throw new Error('Invalid Arguments');\n  }\n}\n","import OHIFError from './OHIFError';\n\n/**\n * Abstract class to fetch study metadata.\n */\nexport class StudyMetadataSource {\n  /**\n   * Get study metadata for a study with given study InstanceUID.\n   * @param {String} studyInstanceUID Study InstanceUID.\n   */\n  getByInstanceUID(studyInstanceUID) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n\n  /**\n   * Load study info and study metadata for a given study into the viewer.\n   * @param {StudySummary|StudyMetadata} study of StudySummary or StudyMetadata object.\n   */\n  loadStudy(study) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n}\n","import MetadataProvider from './MetadataProvider.js';\nimport CommandsManager from './CommandsManager.js';\nimport HotkeysContext from './HotkeysContext.js';\nimport HotkeysManager from './HotkeysManager.js';\nimport ImageSet from './ImageSet';\nimport { StudyPrefetcher } from './StudyPrefetcher';\nimport { StudyLoadingListener } from './StudyLoadingListener';\nimport { StackLoadingListener } from './StudyLoadingListener';\nimport { DICOMFileLoadingListener } from './StudyLoadingListener';\nimport { StudyMetadata } from './metadata/StudyMetadata';\nimport { SeriesMetadata } from './metadata/SeriesMetadata';\nimport { InstanceMetadata } from './metadata/InstanceMetadata';\n//import { StudySummary } from './metadata/StudySummary';\n//import { plugins } from './plugins/';\nimport { TypeSafeCollection } from './TypeSafeCollection';\nimport OHIFError from './OHIFError.js';\nimport { StudyMetadataSource } from './StudyMetadataSource';\n\nexport {\n  MetadataProvider,\n  CommandsManager,\n  HotkeysContext,\n  HotkeysManager,\n  ImageSet,\n  StudyPrefetcher,\n  //StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  //StudySummary,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource\n};\n\nconst classes = {\n  MetadataProvider,\n  CommandsManager,\n  HotkeysContext,\n  HotkeysManager,\n  ImageSet,\n  StudyPrefetcher,\n  StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  //StudySummary,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource\n};\n\nexport default classes;\n","const defaultButtons = [\n    {\n        command: 'Pan',\n        type: 'tool',\n        text: 'Pan',\n        svgUrl: '/icons.svg#icon-tools-pan',\n        active: false\n    },\n    {\n        command: 'Zoom',\n        type: 'tool',\n        text: 'Zoom',\n        svgUrl: '/icons.svg#icon-tools-zoom',\n        active: false\n    },\n    {\n        command: 'Bidirectional',\n        type: 'tool',\n        text: 'Bidirectional',\n        svgUrl: '/icons.svg#icon-tools-measure-target',\n        active: false\n    },\n    {\n        command: 'StackScroll',\n        type: 'tool',\n        text: 'Stack Scroll',\n        svgUrl: '/icons.svg#icon-tools-stack-scroll',\n        active: false\n    },\n    {\n        command: 'reset',\n        type: 'command',\n        text: 'Reset',\n        svgUrl: '/icons.svg#icon-tools-reset',\n        active: false\n    },\n    {\n        command: 'Wwwc',\n        type: 'tool',\n        text: 'Manual',\n        svgUrl: '/icons.svg#icon-tools-levels',\n        active: true\n    },\n    {\n        command: 'setWLPresetSoftTissue',\n        type: 'command',\n        text: 'Soft Tissue',\n        svgUrl: '/icons.svg#icon-wl-soft-tissue',\n        active: false\n    },\n    {\n        command: 'setWLPresetLung',\n        type: 'command',\n        text: 'Lung',\n        svgUrl: '/icons.svg#icon-wl-lung',\n        active: false\n    },\n    {\n        command: 'setWLPresetLiver',\n        type: 'command',\n        text: 'Liver',\n        svgUrl: '/icons.svg#icon-wl-liver',\n        active: false\n    },\n    {\n        command: 'setWLPresetBrain',\n        type: 'command',\n        text: 'Brain',\n        svgUrl: '/icons.svg#icon-wl-brain',\n        active: false\n    }\n];\n\nconst tools = (state = { buttons: defaultButtons }, action) => {\n    switch (action.type) {\n        case 'SET_TOOL_ACTIVE':\n            const item = state.buttons.find(button => button.command === action.tool);\n\n            let buttons = [];\n\n            if (item.type === 'tool') {\n                buttons = state.buttons.map(button => {\n                    if (button.command === action.tool) {\n                        button.active = true;\n                    } else if (button.type === 'tool') {\n                        button.active = false;\n                    }\n\n                    return button;\n                });\n            }\n\n            return {\n                buttons\n            };\n        case 'SET_AVAILABLE_BUTTONS':\n            return {\n              buttons: action.buttons\n            };\n        default:\n            return state;\n    }\n};\n\nexport default tools;\n","const defaultState = {\n    activeViewportIndex: 0,\n    layout: {\n      viewports: [\n        {\n          height: '100%',\n          width: '100%'\n        }\n      ]\n    }\n}\n\nconst viewports = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_VIEWPORT_ACTIVE':\n            return Object.assign({}, state, { activeViewportIndex: action.viewportIndex });\n        case 'SET_LAYOUT':\n            return Object.assign({}, state, { layout: action.layout });\n        default:\n            return state;\n    }\n};\n\nexport default viewports;\n","const defaultState = {\n    servers: []\n}\n\nconst servers = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'ADD_SERVER':\n            const { servers } = state;\n            const alreadyExists = servers.find(server => server.id === action.server.id);\n\n            if (alreadyExists) {\n                return state;\n            }\n\n            servers.push(action.server);\n\n            if (servers.length === 1) {\n                servers[0].active = true;\n            }\n\n            return Object.assign({}, state, { servers });\n        default:\n            return state;\n    }\n};\n\nexport default servers;\n","const defaultState = {\n  progress: {},\n  lastUpdated: null\n};\n\nconst loading = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_STUDY_LOADING_PROGRESS':\n      const progress = state.progress;\n      progress[action.progressId] = action.progressData;\n\n      // This is a workaround so we can easily identify changes\n      // to the progress object without doing deep comparison.\n      // See FlexboxLayout\n      const date = new Date();\n      const lastUpdated = date.getTime();\n\n      return Object.assign({}, state, { progress, lastUpdated });\n    case 'CLEAR_STUDY_LOADING_PROGRESS':\n      const updatedState = Object.assign({}, state);\n      delete updatedState.progress[action.progressId];\n\n      return updatedState;\n    default:\n      return state;\n  }\n};\n\nexport default loading;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","import cloneDeep from 'lodash.clonedeep';\n\nconst defaultState = {\n  hotKeysData: {\n    defaultTool: { label: 'Default Tool', command: 'ESC', column: 0 },\n    zoom: { label: 'Zoom', command: 'Z', column: 0 },\n    wwwc: { label: 'W/L', command: 'W', column: 0 },\n    pan: { label: 'Pan', command: 'P', column: 0 },\n    angle: { label: 'Angle measurement', command: 'A', column: 0 },\n    stackScroll: { label: 'Scroll stack', command: 'S', column: 0 },\n    magnify: { label: 'Magnify', command: 'M', column: 0 },\n    length: { label: 'Length measurement', command: '', column: 0 },\n    annotate: { label: 'Annotate', command: '', column: 0 },\n    dragProbe: { label: 'Pixel probe', command: '', column: 0 },\n    ellipticalRoi: { label: 'Elliptical ROI', command: '', column: 0 },\n    rectangleRoi: { label: 'Rectangle ROI', command: '', column: 0 },\n\n    // Viewport hotkeys\n    flipH: { label: 'Flip Horizontally', command: 'H', column: 0 },\n    flipV: { label: 'Flip Vertically', command: 'V', column: 0 },\n    rotateR: { label: 'Rotate Right', command: 'R', column: 0 },\n    rotateL: { label: 'Rotate Left', command: 'L', column: 0 },\n    invert: { label: 'Invert', command: 'I', column: 0 },\n    zoomIn: { label: 'Zoom In', command: '', column: 0 },\n    zoomOut: { label: 'Zoom Out', command: '', column: 0 },\n    zoomToFit: { label: 'Zoom to Fit', command: '', column: 0 },\n    resetViewport: { label: 'Reset', command: '', column: 0 },\n    clearTools: { label: 'Clear Tools', command: '', column: 0 },\n\n    // 2nd column\n\n    // Viewport navigation hotkeys\n    scrollDown: { label: 'Scroll Down', command: 'DOWN', column: 1 },\n    scrollUp: { label: 'Scroll Up', command: 'UP', column: 1 },\n    scrollLastImage: {\n      label: 'Scroll to Last Image',\n      command: 'END',\n      column: 1\n    },\n    scrollFirstImage: {\n      label: 'Scroll to First Image',\n      command: 'HOME',\n      column: 1\n    },\n    previousDisplaySet: {\n      label: 'Previous Series',\n      command: 'PAGEUP',\n      column: 1\n    },\n    nextDisplaySet: { label: 'Next Series', command: 'PAGEDOWN', column: 1 },\n    nextPanel: { label: 'Next Image Viewport', command: 'RIGHT', column: 1 },\n    previousPanel: {\n      label: 'Previous Image Viewport',\n      command: 'LEFT',\n      column: 1\n    },\n\n    // Miscellaneous hotkeys\n    toggleOverlayTags: {\n      label: 'Toggle Image Info Overlay',\n      command: 'O',\n      column: 1\n    },\n    toggleCinePlay: { label: 'Play/Pause Cine', command: 'SPACE', column: 1 },\n    toggleCineDialog: {\n      label: 'Show/Hide Cine Controls',\n      command: '',\n      column: 1\n    },\n    toggleDownloadDialog: {\n      label: 'Show/Hide Download Dialog',\n      command: '',\n      column: 1\n    },\n\n    // Preset hotkeys\n    WLPreset0: {\n      label: 'W/L Preset 0  (Soft Tissue)',\n      command: '1',\n      column: 1\n    },\n    WLPreset1: { label: 'W/L Preset 1 (Lung)', command: '2', column: 1 },\n    WLPreset2: { label: 'W/L Preset 2 (Liver)', command: '3', column: 1 },\n    WLPreset3: { label: 'W/L Preset 3 (Bone)', command: '4', column: 1 },\n    WLPreset4: { label: 'W/L Preset 4 (Brain)', command: '5', column: 1 },\n    WLPreset5: { label: 'W/L Preset 5', command: '6', column: 1 },\n    WLPreset6: { label: 'W/L Preset 6', command: '7', column: 1 },\n    WLPreset7: { label: 'W/L Preset 7', command: '8', column: 1 },\n    WLPreset8: { label: 'W/L Preset 8', command: '9', column: 1 },\n    WLPreset9: { label: 'W/L Preset 0', command: '0', column: 1 }\n  },\n  windowLevelData: {\n    0: { description: 'Soft tissue', window: 400, level: 40 },\n    1: { description: 'Lung', window: 1500, level: -600 },\n    2: { description: 'Liver', window: 150, level: 90 },\n    3: { description: 'Bone', window: 2500, level: 480 },\n    4: { description: 'Brain', window: 80, level: 40 },\n    5: { description: '', window: '', level: '' },\n    6: { description: '', window: '', level: '' },\n    7: { description: '', window: '', level: '' },\n    8: { description: '', window: '', level: '' },\n    9: { description: '', window: '', level: '' },\n    10: { description: '', window: '', level: '' }\n  }\n};\n\nconst preferences = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER_PREFERENCES':\n      let newState = action.state;\n\n      // If no value is provided, reset to defaults\n      if (!action.state) {\n        newState = cloneDeep(defaultState);\n      }\n\n      return Object.assign({}, state, newState);\n    default:\n      return cloneDeep(state) || cloneDeep(defaultState);\n  }\n};\n\nexport default preferences;\n","import tools from './tools.js';\nimport viewports from './viewports.js';\nimport servers from './servers.js';\nimport loading from './loading.js';\nimport preferences from './preferences.js';\n\nconst reducers = {\n  tools,\n  viewports,\n  servers,\n  loading,\n  preferences\n};\n\nexport default reducers;\n","import actions from './actions.js';\nimport reducers from './reducers';\n\nconst redux = {\n  reducers,\n  actions\n};\n\nexport default redux;\n","// TODO: This is duplicated in TypeSafeCollection\nfunction isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n// TODO: This is duplicated in TypeSafeCollection\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\n\n// Search for some string inside any object or array\nfunction search(object, query, property = null, result = []) {\n  // Create the search pattern\n  const pattern = new RegExp(query.trim(), 'i');\n\n  Object.keys(object).forEach(key => {\n    const item = object[key];\n\n    // Stop here if item is empty\n    if (!item) {\n      return;\n    }\n\n    // Get the value to be compared\n    const value = isString(property) ? item[property] : item;\n\n    // Check if the value match the pattern\n    if (isString(value) && pattern.test(value)) {\n      // Add the current item to the result\n      result.push(item);\n    }\n\n    if (isObject(item)) {\n      // Search recursively the item if the current item is an object\n      search(item, query, property, result);\n    }\n  });\n\n  // Return the found items\n  return result;\n}\n\n// Encode any string into a safe format for HTML id attribute\nfunction encodeId(input) {\n  const string = input && input.toString ? input.toString() : input;\n\n  // Return an underscore if the given string is empty or if it's not a string\n  if (string === '' || typeof string !== 'string') {\n    return '_';\n  }\n\n  // Create a converter to replace non accepted chars\n  const converter = match => '_' + match[0].charCodeAt(0).toString(16) + '_';\n\n  // Encode the given string and return it\n  return string.replace(/[^a-zA-Z0-9-]/g, converter);\n}\n\nconst string = {\n  search,\n  encodeId\n};\n\nexport default string;\n","// Transforms a shallow object with keys separated by \".\" into a nested object\nfunction getNestedObject(shallowObject) {\n  const nestedObject = {};\n  for (let key in shallowObject) {\n    if (!shallowObject.hasOwnProperty(key)) continue;\n    const value = shallowObject[key];\n    const propertyArray = key.split('.');\n    let currentObject = nestedObject;\n    while (propertyArray.length) {\n      const currentProperty = propertyArray.shift();\n      if (!propertyArray.length) {\n        currentObject[currentProperty] = value;\n      } else {\n        if (!currentObject[currentProperty]) {\n          currentObject[currentProperty] = {};\n        }\n\n        currentObject = currentObject[currentProperty];\n      }\n    }\n  }\n\n  return nestedObject;\n};\n\n// Transforms a nested object into a shallowObject merging its keys with \".\" character\nfunction getShallowObject(nestedObject) {\n  const shallowObject = {};\n  const putValues = (baseKey, nestedObject, resultObject) => {\n    for (let key in nestedObject) {\n      if (!nestedObject.hasOwnProperty(key)) continue;\n      let currentKey = baseKey ? `${baseKey}.${key}` : key;\n      const currentValue = nestedObject[key];\n      if (typeof currentValue === 'object') {\n        if (currentValue instanceof Array) {\n          currentKey += '[]';\n        }\n\n        putValues(currentKey, currentValue, resultObject);\n      } else {\n        resultObject[currentKey] = currentValue;\n      }\n    }\n  };\n\n  putValues('', nestedObject, shallowObject);\n  return shallowObject;\n};\n\nconst object = {\n  getNestedObject,\n  getShallowObject\n};\n\nexport default object;\n","import './lib';\n//import './schema.js';\nimport studies from './studies/';\nimport commands from './commands';\nimport hotkeys from './hotkeys';\nimport ui from './ui';\nimport header from './header.js';\nimport utils from './utils/';\nimport metadata from './classes/metadata/';\nimport cornerstone from './cornerstone.js';\nimport classes from './classes/';\nimport redux from './redux/';\nimport string from './string.js';\nimport user from './user.js';\nimport object from './object.js';\nimport DICOMWeb from './DICOMWeb';\nimport log from './log.js';\nimport external from './externalModules.js';\n\nconst viewer = {};\n\nconst OHIF = {\n  viewer,\n  utils,\n  studies,\n  redux,\n  classes,\n  metadata,\n  hotkeys,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  object,\n  commands,\n  log,\n  external,\n  DICOMWeb\n};\n\nexport {\n  viewer, // TODO: Remove this\n  utils,\n  studies,\n  redux,\n  classes,\n  metadata,\n  hotkeys,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  object,\n  commands,\n  log,\n  DICOMWeb\n};\n\nexport { OHIF };\n\nexport default OHIF;\n"],"names":["getBoundingBox","context","textLines","x","y","options","Object","prototype","toString","call","padding","font","cornerstoneTools","textStyle","getFont","fontSize","getFontSize","save","textBaseline","maxWidth","forEach","text","width","measureText","Math","max","boundingBox","height","length","centering","left","top","restore","pixelToPage","element","position","enabledElement","cornerstone","getEnabledElement","result","canvas","canvasOffset","$","offset","canvasPosition","pixelToCanvas","repositionTextBox","eventData","measurementData","config","isCreating","image","allowedBorders","OHIF","uiSettings","autoPositionMeasurementsTextCallOuts","allow","T","includes","R","B","L","getAvailableBlankAreas","labelWidth","labelHeight","topLeft","bottomRight","$canvas","canvasWidth","outerWidth","canvasHeight","outerHeight","x1","y1","getRenderingInformation","limits","tool","mid","directions","diffX","diffY","cornerAxis","map","current","calculateAxisCenter","axis","start","end","a","b","lowest","min","highest","getTextBoxSizeInPixels","bounds","pageToPixel","getTextBoxOffset","toolAxis","boxSize","centerX","centerY","halfBoxSizeX","halfBoxSizeY","offsetY","offsetX","handles","textBox","canvasDimensions","getHandlePosition","key","availableAreas","tempDirections","assign","tempCornerAxis","foundPlace","cornerAxisPosition","toolPositionOnCanvas","renderingInformation","pixelPosition","textBoxOffset","canvasBorders","x0","y0","NUMBER","STRING","REGEX_TAG","DICOMTagDescriptions","create","_descriptions","configurable","enumerable","writable","value","tagNumberToString","tag","string","isValidTagNumber","substr","isValidTag","test","find","name","description","init","descriptionMap","_hasOwn","hasOwnProperty","console","info","keyword","entry","freeze","currentEntry","initialTagDescriptionMap","x00020000","x00020001","x00020002","x00020003","x00020010","x00020012","x00020013","x00020016","x00020100","x00020102","x00041130","x00041141","x00041142","x00041200","x00041202","x00041212","x00041220","x00041400","x00041410","x00041420","x00041430","x00041432","x00041500","x00041504","x00041510","x00041511","x00041512","x0004151a","x00041600","x00080000","x00080001","x00080005","x00080006","x00080008","x00080010","x00080012","x00080013","x00080014","x00080016","x00080018","x0008001a","x0008001b","x00080020","x00080021","x00080022","x00080023","x00080024","x00080025","x0008002a","x00080030","x00080031","x00080032","x00080033","x00080034","x00080035","x00080040","x00080041","x00080042","x00080050","x00080052","x00080054","x00080056","x00080058","x00080060","x00080061","x00080062","x00080064","x00080068","x00080070","x00080080","x00080081","x00080082","x00080090","x00080092","x00080094","x00080096","x00080100","x00080102","x00080103","x00080104","x00080105","x00080106","x00080107","x0008010b","x0008010c","x0008010d","x0008010f","x00080110","x00080112","x00080114","x00080115","x00080116","x00080117","x00080201","x00081000","x00081010","x00081030","x00081032","x0008103e","x00081040","x00081048","x00081049","x00081050","x00081052","x00081060","x00081062","x00081070","x00081072","x00081080","x00081084","x00081090","x00081100","x00081110","x00081111","x00081115","x00081120","x00081125","x00081130","x0008113a","x00081140","x00081145","x0008114a","x00081150","x00081155","x0008115a","x00081160","x00081161","x00081162","x00081163","x00081164","x00081195","x00081197","x00081198","x00081199","x00081200","x00081250","x00082110","x00082111","x00082112","x00082120","x00082122","x00082124","x00082127","x00082128","x00082129","x0008212a","x00082130","x00082132","x00082133","x00082134","x00082135","x00082142","x00082143","x00082144","x00082200","x00082204","x00082208","x00082218","x00082220","x00082228","x00082229","x00082230","x00082240","x00082242","x00082244","x00082246","x00082253","x00082255","x00082256","x00082257","x00083001","x00083010","x00084000","x00089007","x00089092","x00089121","x00089123","x00089124","x00089154","x00089205","x00089206","x00089207","x00089208","x00089209","x00089215","x00089237","x00089410","x00089458","x00089459","x00089460","x00100000","x00100010","x00100020","x00100021","x00100022","x00100030","x00100032","x00100040","x00100050","x00100101","x00100102","x00101000","x00101001","x00101002","x00101005","x00101010","x00101020","x00101030","x00101040","x00101050","x00101060","x00101080","x00101081","x00101090","x00102000","x00102110","x00102150","x00102152","x00102154","x00102160","x00102180","x001021a0","x001021b0","x001021c0","x001021d0","x001021f0","x00102201","x00102202","x00102203","x00102210","x00102292","x00102293","x00102294","x00102295","x00102296","x00102297","x00102298","x00102299","x00104000","x00109431","x00111010","x00120010","x00120020","x00120021","x00120030","x00120031","x00120040","x00120042","x00120050","x00120051","x00120060","x00120062","x00120063","x00120064","x00120071","x00120072","x00120084","x00120085","x00180000","x00180010","x00180012","x00180014","x00180015","x00180020","x00180021","x00180022","x00180023","x00180024","x00180025","x00180026","x00180027","x00180028","x00180029","x0018002a","x00180030","x00180031","x00180032","x00180033","x00180034","x00180035","x00180036","x00180037","x00180038","x00180039","x0018003a","x00180040","x00180042","x00180050","x00180060","x00180070","x00180071","x00180072","x00180073","x00180074","x00180075","x00180080","x00180081","x00180082","x00180083","x00180084","x00180085","x00180086","x00180087","x00180088","x00180089","x00180090","x00180091","x00180093","x00180094","x00180095","x00181000","x00181002","x00181003","x00181004","x00181005","x00181006","x00181007","x00181008","x00181010","x00181011","x00181012","x00181014","x00181016","x00181017","x00181018","x00181019","x0018101a","x0018101b","x00181020","x00181022","x00181023","x00181030","x00181040","x00181041","x00181042","x00181043","x00181044","x00181045","x00181046","x00181047","x00181048","x00181049","x00181050","x00181060","x00181061","x00181062","x00181063","x00181064","x00181065","x00181066","x00181067","x00181068","x00181069","x0018106a","x0018106c","x0018106e","x00181070","x00181071","x00181072","x00181073","x00181074","x00181075","x00181076","x00181077","x00181078","x00181079","x00181080","x00181081","x00181082","x00181083","x00181084","x00181085","x00181086","x00181088","x00181090","x00181094","x00181100","x00181110","x00181111","x00181114","x00181120","x00181121","x00181130","x00181131","x00181134","x00181135","x00181136","x00181137","x00181138","x0018113a","x00181140","x00181141","x00181142","x00181143","x00181144","x00181145","x00181146","x00181147","x00181149","x00181150","x00181151","x00181152","x00181153","x00181154","x00181155","x00181156","x0018115a","x0018115e","x00181160","x00181161","x00181162","x00181164","x00181166","x00181170","x00181180","x00181181","x00181182","x00181183","x00181184","x00181190","x00181191","x001811a0","x001811a2","x00181200","x00181201","x00181210","x00181240","x00181242","x00181243","x00181244","x00181250","x00181251","x00181260","x00181261","x00181300","x00181301","x00181302","x00181310","x00181312","x00181314","x00181315","x00181316","x00181318","x00181400","x00181401","x00181402","x00181403","x00181404","x00181405","x00181450","x00181460","x00181470","x00181480","x00181490","x00181491","x00181495","x00181500","x00181508","x00181510","x00181511","x00181520","x00181521","x00181530","x00181531","x00181600","x00181602","x00181604","x00181606","x00181608","x00181610","x00181612","x00181620","x00181622","x00181623","x00181624","x00181700","x00181702","x00181704","x00181706","x00181708","x00181710","x00181712","x00181720","x00181800","x00181801","x00181802","x00181803","x00182001","x00182002","x00182003","x00182004","x00182005","x00182006","x00182010","x00182020","x00182030","x00183100","x00183101","x00183102","x00183103","x00183104","x00183105","x00184000","x00185000","x00185010","x00185012","x00185020","x00185021","x00185022","x00185024","x00185026","x00185027","x00185028","x00185029","x00185030","x00185040","x00185050","x00185100","x00185101","x00185104","x00185210","x00185212","x00186000","x00186011","x00186012","x00186014","x00186016","x00186018","x0018601a","x0018601c","x0018601e","x00186020","x00186022","x00186024","x00186026","x00186028","x0018602a","x0018602c","x0018602e","x00186030","x00186031","x00186032","x00186034","x00186036","x00186038","x00186039","x0018603a","x0018603b","x0018603c","x0018603d","x0018603e","x0018603f","x00186040","x00186041","x00186042","x00186043","x00186044","x00186046","x00186048","x0018604a","x0018604c","x0018604e","x00186050","x00186052","x00186054","x00186056","x00186058","x0018605a","x00186060","x00187000","x00187001","x00187004","x00187005","x00187006","x00187008","x0018700a","x0018700c","x0018700e","x00187010","x00187011","x00187012","x00187014","x00187016","x0018701a","x00187020","x00187022","x00187024","x00187026","x00187028","x0018702a","x0018702b","x00187030","x00187032","x00187034","x00187040","x00187041","x00187042","x00187044","x00187046","x00187048","x0018704c","x00187050","x00187052","x00187054","x00187060","x00187062","x00187064","x00187065","x00188150","x00188151","x00189004","x00189005","x00189006","x00189008","x00189009","x00189010","x00189011","x00189012","x00189014","x00189015","x00189016","x00189017","x00189018","x00189019","x00189020","x00189021","x00189022","x00189024","x00189025","x00189026","x00189027","x00189028","x00189029","x00189030","x00189032","x00189033","x00189034","x00189035","x00189036","x00189037","x00189041","x00189042","x00189043","x00189044","x00189045","x00189046","x00189047","x00189048","x00189049","x00189050","x00189051","x00189052","x00189053","x00189054","x00189058","x00189059","x00189060","x00189061","x00189062","x00189063","x00189064","x00189065","x00189066","x00189067","x00189069","x00189070","x00189073","x00189074","x00189075","x00189076","x00189077","x00189078","x00189079","x00189080","x00189081","x00189082","x00189083","x00189084","x00189085","x00189087","x00189089","x00189090","x00189091","x00189093","x00189094","x00189095","x00189096","x00189098","x00189100","x00189101","x00189103","x00189104","x00189105","x00189106","x00189107","x00189112","x00189114","x00189115","x00189117","x00189118","x00189119","x00189125","x00189126","x00189127","x00189147","x00189151","x00189152","x00189155","x00189159","x00189166","x00189168","x00189169","x00189170","x00189171","x00189172","x00189173","x00189174","x00189175","x00189176","x00189177","x00189178","x00189179","x00189180","x00189181","x00189182","x00189183","x00189184","x00189185","x00189186","x00189195","x00189196","x00189197","x00189198","x00189199","x00189200","x00189214","x00189217","x00189218","x00189219","x00189220","x00189226","x00189227","x00189231","x00189232","x00189234","x00189236","x00189239","x00189240","x00189241","x00189295","x00189296","x00189301","x00189302","x00189303","x00189304","x00189305","x00189306","x00189307","x00189308","x00189309","x00189310","x00189311","x00189312","x00189313","x00189314","x00189315","x00189316","x00189317","x00189318","x00189319","x00189320","x00189321","x00189322","x00189323","x00189324","x00189325","x00189326","x00189327","x00189328","x00189329","x00189330","x00189332","x00189333","x00189334","x00189335","x00189337","x00189338","x00189340","x00189341","x00189342","x00189343","x00189344","x00189345","x00189346","x00189351","x00189352","x00189353","x00189360","x00189401","x00189402","x00189403","x00189404","x00189405","x00189406","x00189407","x00189412","x00189417","x00189420","x00189423","x00189424","x00189425","x00189426","x00189427","x00189428","x00189429","x00189430","x00189432","x00189433","x00189434","x00189435","x00189436","x00189437","x00189440","x00189441","x00189447","x00189449","x00189451","x00189452","x00189455","x00189456","x00189457","x00189461","x00189462","x00189463","x00189464","x00189465","x00189466","x00189467","x00189468","x00189469","x00189470","x00189471","x00189472","x00189473","x00189474","x00189476","x00189477","x00189504","x00189506","x00189507","x00189508","x00189509","x00189510","x00189511","x00189514","x00189515","x00189516","x00189517","x00189524","x00189525","x00189526","x00189527","x00189528","x00189530","x00189531","x00189538","x00189601","x00189602","x00189603","x00189604","x00189605","x00189606","x00189607","x00189701","x00189715","x00189722","x00189725","x00189727","x00189735","x00189739","x00189740","x00189751","x00189756","x00189758","x00189759","x00189760","x00189761","x00189762","x00189763","x00189765","x00189767","x00189801","x00189804","x00189805","x00189807","x00189808","x0018980b","x0018a001","x0018a002","x0018a003","x00200000","x0020000d","x0020000e","x00200010","x00200011","x00200012","x00200013","x00200014","x00200015","x00200016","x00200017","x00200018","x00200019","x00200020","x00200022","x00200024","x00200026","x00200030","x00200032","x00200035","x00200037","x00200050","x00200052","x00200060","x00200062","x00200070","x00200080","x00200100","x00200105","x00200110","x00200200","x00201000","x00201001","x00201002","x00201003","x00201004","x00201005","x00201020","x00201040","x00201041","x00201070","x00201200","x00201202","x00201204","x00201206","x00201208","x00201209","x002031xx","x00203401","x00203402","x00203403","x00203404","x00203405","x00203406","x00204000","x00205000","x00205002","x00209056","x00209057","x00209071","x00209072","x00209111","x00209113","x00209116","x00209128","x00209153","x00209156","x00209157","x00209158","x00209161","x00209162","x00209163","x00209164","x00209165","x00209167","x00209213","x00209221","x00209222","x00209228","x00209238","x00209241","x00209245","x00209246","x00209247","x00209248","x00209249","x00209250","x00209251","x00209252","x00209253","x00209254","x00209255","x00209256","x00209257","x00209301","x00209302","x00209308","x00209421","x00209450","x00209453","x00209518","x00209529","x00209536","x00220001","x00220002","x00220003","x00220004","x00220005","x00220006","x00220007","x00220008","x00220009","x0022000a","x0022000b","x0022000c","x0022000d","x0022000e","x00220010","x00220011","x00220012","x00220013","x00220014","x00220015","x00220016","x00220017","x00220018","x00220019","x0022001a","x0022001b","x0022001c","x0022001d","x00220020","x00220021","x00220022","x00220030","x00220031","x00220032","x00220035","x00220036","x00220037","x00220038","x00220039","x00220041","x00220042","x00220048","x00220049","x0022004e","x00220055","x00220056","x00220057","x00220058","x00280000","x00280002","x00280003","x00280004","x00280005","x00280006","x00280008","x00280009","x0028000a","x00280010","x00280011","x00280012","x00280014","x00280030","x00280031","x00280032","x00280034","x00280040","x00280050","x00280051","x0028005f","x00280060","x00280061","x00280062","x00280063","x00280065","x00280066","x00280068","x00280069","x00280070","x00280071","x00280080","x00280081","x00280082","x00280090","x00280091","x00280092","x00280093","x00280094","x00280100","x00280101","x00280102","x00280103","x00280104","x00280105","x00280106","x00280107","x00280108","x00280109","x00280110","x00280111","x00280120","x00280121","x00280200","x00280300","x00280301","x00280400","x00280401","x00280402","x00280403","x00280404","x002804x2","x002804x3","x00280700","x00280701","x00280702","x00280710","x00280720","x00280721","x00280722","x00280730","x00280740","x002808x0","x002808x2","x002808x3","x002808x4","x002808x8","x00280a02","x00280a04","x00281040","x00281041","x00281050","x00281051","x00281052","x00281053","x00281054","x00281055","x00281056","x00281080","x00281090","x00281100","x00281101","x00281102","x00281103","x00281111","x00281112","x00281113","x00281199","x00281200","x00281201","x00281202","x00281203","x00281211","x00281212","x00281213","x00281214","x00281221","x00281222","x00281223","x00281300","x00281350","x00281351","x00281352","x0028135a","x00281402","x00281404","x00281406","x00281408","x0028140c","x0028140e","x0028140f","x00281410","x00282000","x00282110","x00282112","x00282114","x00283000","x00283002","x00283003","x00283004","x00283006","x00283010","x00283110","x00284000","x00285000","x00286010","x00286020","x00286022","x00286023","x00286030","x00286040","x00286100","x00286101","x00286102","x00286110","x00286112","x00286114","x00286120","x00286190","x00287fe0","x00289001","x00289002","x00289003","x00289099","x00289108","x00289110","x00289132","x00289145","x00289235","x00289411","x00289415","x00289416","x00289422","x00289443","x00289444","x00289445","x00289446","x00289454","x00289474","x00289478","x00289501","x00289502","x00289503","x00289506","x00289507","x00289520","x00289537","x00320000","x0032000a","x0032000c","x00320012","x00320032","x00320033","x00320034","x00320035","x00321000","x00321001","x00321010","x00321011","x00321020","x00321021","x00321030","x00321031","x00321032","x00321033","x00321040","x00321041","x00321050","x00321051","x00321055","x00321060","x00321064","x00321070","x00324000","x00380004","x00380008","x00380010","x00380011","x00380016","x0038001a","x0038001b","x0038001c","x0038001d","x0038001e","x00380020","x00380021","x00380030","x00380032","x00380040","x00380044","x00380050","x00380060","x00380061","x00380062","x00380100","x00380300","x00380400","x00380500","x00380502","x00384000","x003a0004","x003a0005","x003a0010","x003a001a","x003a0020","x003a0200","x003a0202","x003a0203","x003a0205","x003a0208","x003a0209","x003a020a","x003a020c","x003a0210","x003a0211","x003a0212","x003a0213","x003a0214","x003a0215","x003a0218","x003a021a","x003a0220","x003a0221","x003a0222","x003a0223","x003a0230","x003a0231","x003a0240","x003a0241","x003a0242","x003a0244","x003a0245","x003a0246","x003a0247","x003a0248","x003a0300","x003a0301","x003a0302","x00400001","x00400002","x00400003","x00400004","x00400005","x00400006","x00400007","x00400008","x00400009","x0040000a","x0040000b","x00400010","x00400011","x00400012","x00400020","x00400031","x00400032","x00400033","x00400035","x00400036","x00400100","x00400220","x00400241","x00400242","x00400243","x00400244","x00400245","x00400250","x00400251","x00400252","x00400253","x00400254","x00400255","x00400260","x00400261","x00400270","x00400275","x00400280","x00400281","x00400293","x00400294","x00400295","x00400296","x00400300","x00400301","x00400302","x00400303","x00400306","x00400307","x0040030e","x00400310","x00400312","x00400314","x00400316","x00400318","x00400320","x00400321","x00400324","x00400330","x00400340","x00400400","x00400440","x00400441","x0040050a","x00400512","x0040051a","x00400550","x00400551","x00400552","x00400553","x00400554","x00400555","x00400556","x0040059a","x00400600","x004006fa","x0040071a","x0040072a","x0040073a","x0040074a","x004008d8","x004008da","x004008ea","x004009f8","x00401001","x00401002","x00401003","x00401004","x00401005","x00401006","x00401007","x00401008","x00401009","x0040100a","x00401010","x00401011","x00401101","x00401102","x00401103","x00401400","x00402001","x00402004","x00402005","x00402006","x00402007","x00402008","x00402009","x00402010","x00402016","x00402017","x00402400","x00403001","x00404001","x00404002","x00404003","x00404004","x00404005","x00404006","x00404007","x00404009","x00404010","x00404011","x00404015","x00404016","x00404018","x00404019","x00404020","x00404021","x00404022","x00404023","x00404025","x00404026","x00404027","x00404028","x00404029","x00404030","x00404031","x00404032","x00404033","x00404034","x00404035","x00404036","x00404037","x00404040","x00408302","x00409094","x00409096","x00409098","x00409210","x00409211","x00409212","x00409216","x00409224","x00409225","x0040a010","x0040a027","x0040a030","x0040a032","x0040a040","x0040a043","x0040a050","x0040a073","x0040a075","x0040a078","x0040a07a","x0040a07c","x0040a080","x0040a082","x0040a084","x0040a088","x0040a090","x0040a0b0","x0040a120","x0040a121","x0040a122","x0040a123","x0040a124","x0040a130","x0040a132","x0040a136","x0040a138","x0040a13a","x0040a160","x0040a168","x0040a170","x0040a180","x0040a195","x0040a300","x0040a301","x0040a30a","x0040a353","x0040a354","x0040a360","x0040a370","x0040a372","x0040a375","x0040a385","x0040a390","x0040a491","x0040a492","x0040a493","x0040a494","x0040a496","x0040a504","x0040a525","x0040a730","x0040b020","x0040db00","x0040db06","x0040db07","x0040db0b","x0040db0c","x0040db0d","x0040db73","x0040e001","x0040e004","x0040e006","x0040e010","x0040e011","x00420010","x00420011","x00420012","x00420013","x00420014","x00440001","x00440002","x00440003","x00440004","x00440007","x00440008","x00440009","x0044000a","x0044000b","x00440010","x00440011","x00440012","x00440013","x00440019","x00460012","x00460014","x00460015","x00460018","x00460028","x00460030","x00460032","x00460034","x00460036","x00460038","x00460040","x00460042","x00460044","x00460046","x00460060","x00460062","x00460064","x00460075","x00460076","x00460077","x00460092","x00460094","x00460095","x00460100","x00460101","x00460102","x00460104","x00460106","x00460125","x00460135","x00460137","x00460139","x00460146","x00460147","x00500004","x00500010","x00500014","x00500015","x00500016","x00500017","x00500018","x00500019","x0050001b","x00500020","x00540010","x00540011","x00540012","x00540013","x00540014","x00540015","x00540016","x00540017","x00540018","x00540020","x00540021","x00540022","x00540030","x00540031","x00540032","x00540033","x00540036","x00540038","x00540039","x00540050","x00540051","x00540052","x00540053","x00540060","x00540061","x00540062","x00540063","x00540070","x00540071","x00540072","x00540073","x00540080","x00540081","x00540090","x00540100","x00540101","x00540200","x00540202","x00540210","x00540211","x00540220","x00540222","x00540300","x00540302","x00540304","x00540306","x00540308","x00540400","x00540410","x00540412","x00540414","x00540500","x00541000","x00541001","x00541002","x00541004","x00541100","x00541101","x00541102","x00541103","x00541104","x00541105","x00541200","x00541201","x00541202","x00541203","x00541210","x00541220","x00541300","x00541310","x00541311","x00541320","x00541321","x00541322","x00541323","x00541324","x00541330","x00541400","x00541401","x00603000","x00603002","x00603004","x00603006","x00603008","x00603010","x00603020","x00620001","x00620002","x00620003","x00620004","x00620005","x00620006","x00620008","x00620009","x0062000a","x0062000b","x0062000c","x0062000d","x0062000e","x0062000f","x00620010","x00640002","x00640003","x00640005","x00640007","x00640008","x00640009","x0064000f","x00640010","x00660001","x00660002","x00660003","x00660004","x00660009","x0066000a","x0066000e","x00660010","x00660011","x00660015","x00660016","x00660017","x00660018","x00660019","x0066001b","x0066001c","x0066001e","x0066001f","x00660020","x00660021","x00660023","x00660024","x00660025","x00660026","x00660027","x00660028","x00660029","x0066002a","x0066002f","x00660031","x00660032","x00660034","x00660036","x00700001","x00700002","x00700003","x00700004","x00700005","x00700006","x00700008","x00700009","x00700010","x00700011","x00700012","x00700014","x00700015","x00700020","x00700021","x00700022","x00700023","x00700024","x00700040","x00700041","x00700042","x00700050","x00700051","x00700052","x00700053","x0070005a","x00700060","x00700062","x00700066","x00700067","x00700068","x00700080","x00700081","x00700082","x00700083","x00700084","x00700086","x00700100","x00700101","x00700102","x00700103","x00700306","x00700308","x00700309","x0070030a","x0070030c","x0070030d","x0070030f","x00700310","x00700311","x00700312","x00700314","x00700318","x0070031a","x0070031c","x0070031e","x00700401","x00700402","x00700403","x00700404","x00700405","x00720002","x00720004","x00720006","x00720008","x0072000a","x0072000c","x0072000e","x00720010","x00720012","x00720014","x00720020","x00720022","x00720024","x00720026","x00720028","x00720030","x00720032","x00720034","x00720038","x0072003a","x0072003c","x0072003e","x00720040","x00720050","x00720052","x00720054","x00720056","x00720060","x00720062","x00720064","x00720066","x00720068","x0072006a","x0072006c","x0072006e","x00720070","x00720072","x00720074","x00720076","x00720078","x0072007a","x0072007c","x0072007e","x00720080","x00720100","x00720102","x00720104","x00720106","x00720108","x0072010a","x0072010c","x0072010e","x00720200","x00720202","x00720203","x00720204","x00720206","x00720208","x00720210","x00720212","x00720214","x00720216","x00720218","x00720300","x00720302","x00720304","x00720306","x00720308","x00720310","x00720312","x00720314","x00720316","x00720318","x00720320","x00720330","x00720400","x00720402","x00720404","x00720406","x00720432","x00720434","x00720500","x00720510","x00720512","x00720514","x00720516","x00720520","x00720600","x00720602","x00720604","x00720700","x00720702","x00720704","x00720706","x00720710","x00720712","x00720714","x00720716","x00720717","x00720718","x00741000","x00741002","x00741004","x00741006","x00741008","x0074100a","x0074100c","x00741020","x00741022","x00741024","x00741030","x00741032","x00741034","x00741036","x00741038","x0074103a","x00741040","x00741042","x00741044","x00741046","x00741048","x0074104a","x0074104c","x0074104e","x00741050","x00741052","x00741054","x00741056","x00741200","x00741202","x00741204","x00741210","x00741212","x00741216","x00741220","x00741222","x00741230","x00741234","x00741236","x00741238","x00741242","x00741244","x00741246","x00880130","x00880140","x00880200","x00880904","x00880906","x00880910","x00880912","x01000410","x01000420","x01000424","x01000426","x04000005","x04000010","x04000015","x04000020","x04000100","x04000105","x04000110","x04000115","x04000120","x04000305","x04000310","x04000401","x04000402","x04000403","x04000404","x04000500","x04000510","x04000520","x04000550","x04000561","x04000562","x04000563","x04000564","x04000565","x1000xxx0","x1000xxx1","x1000xxx2","x1000xxx3","x1000xxx4","x1000xxx5","x1010xxxx","x20000010","x2000001e","x20000020","x20000030","x20000040","x20000050","x20000060","x20000061","x20000062","x20000063","x20000065","x20000067","x20000069","x2000006a","x200000a0","x200000a1","x200000a2","x200000a4","x200000a8","x20000500","x20000510","x20100010","x20100030","x20100040","x20100050","x20100052","x20100054","x20100060","x20100080","x201000a6","x201000a7","x201000a8","x201000a9","x20100100","x20100110","x20100120","x20100130","x20100140","x20100150","x20100152","x20100154","x2010015e","x20100160","x20100376","x20100500","x20100510","x20100520","x20200010","x20200020","x20200030","x20200040","x20200050","x202000a0","x202000a2","x20200110","x20200111","x20200130","x20200140","x20300010","x20300020","x20400010","x20400011","x20400020","x20400060","x20400070","x20400072","x20400074","x20400080","x20400082","x20400090","x20400100","x20400500","x20500010","x20500020","x20500500","x21000010","x21000020","x21000030","x21000040","x21000050","x21000070","x21000140","x21000160","x21000170","x21000500","x21100010","x21100020","x21100030","x21100099","x21200010","x21200050","x21200070","x21300010","x21300015","x21300030","x21300040","x21300050","x21300060","x21300080","x213000a0","x213000c0","x22000001","x22000002","x22000003","x22000004","x22000005","x22000006","x22000007","x22000008","x22000009","x2200000a","x2200000b","x2200000c","x2200000d","x2200000e","x2200000f","x22000020","x30020002","x30020003","x30020004","x3002000a","x3002000c","x3002000d","x3002000e","x30020010","x30020011","x30020012","x30020020","x30020022","x30020024","x30020026","x30020028","x30020029","x30020030","x30020032","x30020034","x30020040","x30020041","x30020042","x30020051","x30020052","x30040001","x30040002","x30040004","x30040006","x30040008","x3004000a","x3004000c","x3004000e","x30040010","x30040012","x30040014","x30040040","x30040042","x30040050","x30040052","x30040054","x30040056","x30040058","x30040060","x30040062","x30040070","x30040072","x30040074","x30060002","x30060004","x30060006","x30060008","x30060009","x30060010","x30060012","x30060014","x30060016","x30060020","x30060022","x30060024","x30060026","x30060028","x3006002a","x3006002c","x30060030","x30060033","x30060036","x30060038","x30060039","x30060040","x30060042","x30060044","x30060045","x30060046","x30060048","x30060049","x30060050","x30060080","x30060082","x30060084","x30060085","x30060086","x30060088","x300600a0","x300600a4","x300600a6","x300600b0","x300600b2","x300600b4","x300600b6","x300600b7","x300600b8","x300600c0","x300600c2","x300600c4","x300600c6","x300600c8","x30080010","x30080012","x30080014","x30080016","x30080020","x30080021","x30080022","x30080024","x30080025","x3008002a","x3008002b","x3008002c","x30080030","x30080032","x30080033","x30080036","x30080037","x3008003a","x3008003b","x30080040","x30080041","x30080042","x30080044","x30080045","x30080046","x30080047","x30080048","x30080050","x30080052","x30080054","x30080056","x3008005a","x30080060","x30080061","x30080062","x30080063","x30080064","x30080065","x30080066","x30080068","x3008006a","x30080070","x30080072","x30080074","x30080076","x30080078","x3008007a","x30080080","x30080082","x30080090","x30080092","x300800a0","x300800b0","x300800c0","x300800d0","x300800e0","x300800f0","x300800f2","x300800f4","x300800f6","x30080100","x30080105","x30080110","x30080116","x30080120","x30080122","x30080130","x30080132","x30080134","x30080136","x30080138","x3008013a","x3008013c","x30080140","x30080142","x30080150","x30080152","x30080160","x30080162","x30080164","x30080166","x30080168","x30080200","x30080202","x30080220","x30080223","x30080224","x30080230","x30080240","x30080250","x30080251","x300a0002","x300a0003","x300a0004","x300a0006","x300a0007","x300a0009","x300a000a","x300a000b","x300a000c","x300a000e","x300a0010","x300a0012","x300a0013","x300a0014","x300a0015","x300a0016","x300a0018","x300a001a","x300a0020","x300a0021","x300a0022","x300a0023","x300a0025","x300a0026","x300a0027","x300a0028","x300a002a","x300a002b","x300a002c","x300a002d","x300a0040","x300a0042","x300a0043","x300a0044","x300a0046","x300a0048","x300a004a","x300a004b","x300a004c","x300a004e","x300a004f","x300a0050","x300a0051","x300a0052","x300a0053","x300a0055","x300a0070","x300a0071","x300a0072","x300a0078","x300a0079","x300a007a","x300a007b","x300a0080","x300a0082","x300a0084","x300a0086","x300a0088","x300a0089","x300a008a","x300a00a0","x300a00a2","x300a00a4","x300a00b0","x300a00b2","x300a00b3","x300a00b4","x300a00b6","x300a00b8","x300a00ba","x300a00bb","x300a00bc","x300a00be","x300a00c0","x300a00c2","x300a00c3","x300a00c4","x300a00c6","x300a00c7","x300a00c8","x300a00ca","x300a00cc","x300a00ce","x300a00d0","x300a00d1","x300a00d2","x300a00d3","x300a00d4","x300a00d5","x300a00d6","x300a00d7","x300a00d8","x300a00d9","x300a00da","x300a00db","x300a00dc","x300a00dd","x300a00e0","x300a00e1","x300a00e2","x300a00e3","x300a00e4","x300a00e5","x300a00e6","x300a00e7","x300a00e8","x300a00e9","x300a00ea","x300a00eb","x300a00ec","x300a00ed","x300a00ee","x300a00f0","x300a00f2","x300a00f3","x300a00f4","x300a00f5","x300a00f6","x300a00f7","x300a00f8","x300a00f9","x300a00fa","x300a00fb","x300a00fc","x300a00fe","x300a0100","x300a0102","x300a0104","x300a0106","x300a0107","x300a0108","x300a0109","x300a010a","x300a010c","x300a010e","x300a0110","x300a0111","x300a0112","x300a0114","x300a0115","x300a0116","x300a0118","x300a011a","x300a011c","x300a011e","x300a011f","x300a0120","x300a0121","x300a0122","x300a0123","x300a0124","x300a0125","x300a0126","x300a0128","x300a0129","x300a012a","x300a012c","x300a012e","x300a0130","x300a0134","x300a0140","x300a0142","x300a0144","x300a0146","x300a0148","x300a014a","x300a014c","x300a014e","x300a0180","x300a0182","x300a0183","x300a0184","x300a0190","x300a0192","x300a0194","x300a0196","x300a0198","x300a0199","x300a019a","x300a01a0","x300a01a2","x300a01a4","x300a01a6","x300a01a8","x300a01b0","x300a01b2","x300a01b4","x300a01b6","x300a01b8","x300a01ba","x300a01bc","x300a01d0","x300a01d2","x300a01d4","x300a01d6","x300a0200","x300a0202","x300a0206","x300a0210","x300a0212","x300a0214","x300a0216","x300a0218","x300a021a","x300a0222","x300a0224","x300a0226","x300a0228","x300a0229","x300a022a","x300a022b","x300a022c","x300a022e","x300a0230","x300a0232","x300a0234","x300a0236","x300a0238","x300a0240","x300a0242","x300a0244","x300a0250","x300a0260","x300a0262","x300a0263","x300a0264","x300a0266","x300a026a","x300a026c","x300a0280","x300a0282","x300a0284","x300a0286","x300a0288","x300a028a","x300a028c","x300a0290","x300a0291","x300a0292","x300a0294","x300a0296","x300a0298","x300a029c","x300a029e","x300a02a0","x300a02a2","x300a02a4","x300a02b0","x300a02b2","x300a02b3","x300a02b4","x300a02b8","x300a02ba","x300a02c8","x300a02d0","x300a02d2","x300a02d4","x300a02d6","x300a02e0","x300a02e1","x300a02e2","x300a02e3","x300a02e4","x300a02e5","x300a02e6","x300a02e7","x300a02e8","x300a02ea","x300a02eb","x300a0302","x300a0304","x300a0306","x300a0308","x300a030a","x300a030c","x300a030d","x300a030f","x300a0312","x300a0314","x300a0316","x300a0318","x300a0320","x300a0322","x300a0330","x300a0332","x300a0334","x300a0336","x300a0338","x300a033a","x300a033c","x300a0340","x300a0342","x300a0344","x300a0346","x300a0348","x300a034a","x300a034c","x300a0350","x300a0352","x300a0354","x300a0356","x300a0358","x300a035a","x300a0360","x300a0362","x300a0364","x300a0366","x300a0370","x300a0372","x300a0374","x300a0380","x300a0382","x300a0384","x300a038a","x300a0390","x300a0392","x300a0394","x300a0396","x300a0398","x300a039a","x300a03a0","x300a03a2","x300a03a4","x300a03a6","x300a03a8","x300a03aa","x300a03ac","x300a0401","x300a0402","x300a0410","x300a0412","x300a0420","x300a0421","x300a0422","x300a0423","x300a0424","x300c0002","x300c0004","x300c0006","x300c0007","x300c0008","x300c0009","x300c000a","x300c000c","x300c000e","x300c0020","x300c0022","x300c0040","x300c0042","x300c0050","x300c0051","x300c0055","x300c0060","x300c006a","x300c0080","x300c00a0","x300c00b0","x300c00c0","x300c00d0","x300c00e0","x300c00f0","x300c00f2","x300c00f4","x300c00f6","x300c0100","x300c0102","x300c0104","x300e0002","x300e0004","x300e0005","x300e0008","x40000000","x40000010","x40004000","x40080040","x40080042","x40080050","x40080100","x40080101","x40080102","x40080103","x40080108","x40080109","x4008010a","x4008010b","x4008010c","x40080111","x40080112","x40080113","x40080114","x40080115","x40080117","x40080118","x40080119","x4008011a","x40080200","x40080202","x40080210","x40080212","x40080300","x40084000","x4ffe0001","x50xx0005","x50xx0010","x50xx0020","x50xx0022","x50xx0030","x50xx0040","x50xx0103","x50xx0104","x50xx0105","x50xx0106","x50xx0110","x50xx0112","x50xx0114","x50xx1001","x50xx2000","x50xx2002","x50xx2004","x50xx2006","x50xx2008","x50xx200a","x50xx200c","x50xx200e","x50xx2500","x50xx2600","x50xx2610","x50xx3000","x52009229","x52009230","x54000100","x54000110","x54000112","x54001004","x54001006","x5400100a","x54001010","x56000010","x56000020","x60000000","x60xx0010","x60xx0011","x60xx0012","x60xx0015","x60xx0022","x60xx0040","x60xx0045","x60xx0050","x60xx0051","x60xx0052","x60xx0060","x60xx0061","x60xx0062","x60xx0063","x60xx0066","x60xx0068","x60xx0069","x60xx0100","x60xx0102","x60xx0110","x60xx0200","x60xx0800","x60xx0802","x60xx0803","x60xx0804","x60xx1001","x60xx1100","x60xx1101","x60xx1102","x60xx1103","x60xx1200","x60xx1201","x60xx1202","x60xx1203","x60xx1301","x60xx1302","x60xx1303","x60xx1500","x60xx3000","x60xx4000","x7fxx0000","x7fxx0010","x7fxx0011","x7fxx0020","x7fxx0030","x7fxx0040","xfffafffa","xfffcfffc","xfffee000","xfffee00d","xfffee0dd","parsingUtils","isValidDataSet","data","dicomParser","DataSet","attributeTag","elements","parser","byteArrayParser","readUint16","bytes","byteArray","dataOffset","multiValue","readFixedString","split","trim","floatArray","parseFloat","getAttribute","defaultValue","Value","convertToInt","input","padFour","l","output","i","j","charCodeAt","parseInt","user","userLoggedIn","getUserId","getName","getAccessToken","login","Promise","resolve","reject","logout","getData","setData","getAuthorizationHeader","server","headers","accessToken","requestOptions","auth","Authorization","btoa","getModalities","modality","modalitiesInStudy","modalities","vr","indexOf","push","Alphabetic","getNumber","getString","join","DICOMWeb","this","resultDataToStudyMetadata","studyInstanceUid","resultData","seriesMap","seriesList","instance","seriesInstanceUid","series","seriesNumber","instances","sopInstanceUid","uri","wadoUriRoot","sopClassUid","instanceNumber","Instances","url","qidoRoot","dicomWeb","DICOMwebClient","api","queryParams","getQIDOQueryParams","filter","qidoSupportsIncludeField","studyInstanceUID","searchForInstances","then","dateToString","date","year","getFullYear","month","getMonth","day","getDate","repeat","concat","serverSupportsQIDOIncludeField","commaSeparatedFields","parameters","PatientName","patientName","PatientID","patientId","AccessionNumber","accessionNumber","StudyDescription","studyDescription","ModalitiesInStudy","limit","includefield","studyDateFrom","studyDateTo","dateFrom","Date","dateTo","StudyDate","studyUids","Array","isArray","replace","StudyInstanceUID","params","keys","undefined","resultDataToStudies","studies","study","studyDate","studyTime","referringPhysicianName","patientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","Studies","searchForStudies","WADOProxy","convertURL","parseFloatArray","obj","objs","paletteColorCache","count","maxAge","entries","isValidUID","paletteUID","get","now","time","add","uid","buildInstanceWadoUrl","paramString","buildInstanceWadoRsUri","wadoRoot","buildInstanceFrameWadoRsUri","frame","baseWadoRsUri","getSourceImageInstanceUid","SourceImageSequence","getPaletteColor","lutDescriptor","numLutEntries","bits","BulkDataURI","readUInt16","arrayBufferToPaletteColorLUT","arraybuffer","Uint8Array","lut","retrieveBulkData","getPaletteColors","r","g","promises","all","args","red","green","blue","getFrameIncrementPointer","frameIncrementPointerNames","getRadiopharmaceuticalInfo","radiopharmaceuticalInfo","firstPetRadiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","anInstance","studyData","patientAge","patientSize","patientWeight","imageCount","seriesDescription","seriesDate","seriesTime","wadouri","wadorsuri","instanceSummary","imageType","imagePositionPatient","imageOrientationPatient","frameOfReferenceUID","sliceLocation","samplesPerPixel","photometricInterpretation","planarConfiguration","rows","columns","pixelSpacing","pixelAspectRatio","bitsAllocated","bitsStored","highBit","pixelRepresentation","smallestPixelValue","largestPixelValue","windowCenter","windowWidth","rescaleIntercept","rescaleSlope","rescaleType","sourceImageInstanceUid","laterality","viewPosition","acquisitionDateTime","numberOfFrames","frameIncrementPointer","frameTime","frameTimeVector","sliceThickness","lossyImageCompression","derivationDescription","lossyImageCompressionRatio","lossyImageCompressionMethod","echoNumber","contrastBolusAgent","imageRendering","thumbnailRendering","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","palettes","paletteColorLookupTableUID","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","RetrieveMetadata","retrieveStudyMetadata","WADO","QIDO","log","error","warn","debug","timeEnd","StudyMetaDataPromises","Map","deleteStudyMetadataPromise","has","delete","seriesInstanceUids","seriesKeys","timingKey","promise","type","requestFromBrowser","set","FUNCTION","OBJECT","Metadata","defineProperty","_data","propertyName","propertyValue","_uid","attribute","_custom","attributeMap","index","callback","OHIFError","message","stack","Error","constructor","UNDEFINED","STUDY_INSTANCE_UID","SERIES_INSTANCE_UID","InstanceMetadata","defineProperties","_sopInstanceUID","_imageId","_definePublicProperties","getSOPInstanceUID","getTagValue","tagOrProperty","getIndexedValue","val","idx","self","hasIndexValues","splitValues","isValidIndex","indexedValue","SeriesMetadata","_seriesInstanceUID","_instances","_firstInstance","getSeriesInstanceUID","getInstanceByUID","found","getInstanceByIndex","isValidCallback","guid","s4","floor","random","substring","ImageSet","images","attributes","imageSet","hasOwn","sortingCallback","sort","StudyMetadata","_studyInstanceUID","_series","_displaySets","_firstSeries","getStudyInstanceUID","slice","displaySets","displaySet","addDisplaySet","getSeriesByUID","reduce","sum","getInstanceCount","displaySetsMapping","forEachDisplaySet","actualSeries","getSeries","seriesIndex","getSeriesByIndex","firstSeries","getFirstSeries","getFirstInstance","findInstance","findSeriesAndInstanceByInstance","WadoRsMetaDataBuilder","tags","multi","json","getWADORSImageUrl","getWADORSImageId","window","cornerstoneWADOImageLoader","external","cs","tools","wado","getRadiopharmaceuticalInfoMetaData","addTag","toJSON","getWadoRsInstanceMetaData","updateMetaDataManager","metaData","frameNumber","imageId","wadors","metaDataManager","retrieveStudiesMetadata","studyInstanceUids","catch","getStudyBoxData","studySearchPromises","searchStudies","promiseKey","JSON","stringify","services","loadingDict","isFunction","subject","CommandsManager","contexts","contextName","getContext","clear","definitions","extend","command","definition","func","disabled","getCurrentContext","getDefinition","action","isDisabled","commands","HotkeysContext","enabled","hotkey","unregister","register","bindingKey","bind","document","event","run","preventDefault","unbind","HotkeysManager","defaults","currentContextName","retrieveFunction","storeFunction","storageKey","definitionsJSON","localStorage","setItem","getItem","parse","retrieve","defs","changeObserver","changed","destroy","initialize","contextDefinitions","isDefaultDefinitions","currentContext","store","newContext","load","hotkeys","WILDCARD","SEPARATOR","Node","children","handlers","path","node","item","recursively","probe","getPathComponents","last","append","getNodeUpToIndex","handler","list","notFound","splice","nonRecursively","trigger","attachHandler","removeHandler","rootNode","handleError","title","class","hideConfirm","cancelLabel","cancelClass","isCharacterKeyPress","which","ctrlKey","metaKey","altKey","getOffset","offsetParent","offsetLeft","offsetTop","getScrollbarSize","inner","createElement","style","outer","visibility","overflow","appendChild","body","w1","offsetWidth","h1","offsetHeight","w2","h2","clientWidth","clientHeight","removeChild","ui","header","ObjectPath","object","components","isValidObject","currentObject","field","isValid","absoluteUrl","absolutePath","location","origin","absoluteUrlParts","rootUrlPrefixIndex","addServers","servers","serverType","endpoints","endpoint","dispatch","sortBy","fields","arguments","n_fields","A","primer","reverse","writeScript","fileName","script","src","onload","updateQueryStringParameter","regex","RegExp","separator","match","getImageId","thumbnail","renderingAttr","stackMap","configuration","stackManagerMetaDataProvider","stackUpdatedCallbacks","createAndAddStack","metadataProvider","numImages","imageIds","imageIndex","addMetadata","displaySetInstanceUid","frameRate","isClip","StackManager","setMetadataProvider","provider","clearStacks","makeAndAddStack","findStack","findOrCreateStack","getAllStacks","addStackUpdatedCallback","getConfiguration","setConfiguration","sopClassDictionary","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","MRSpectroscopyStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","EnhancedUSVolumeStorage","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","Sop12LeadECGWaveformStorage","GeneralECGWaveformStorage","AmbulatoryECGWaveformStorage","HemodynamicWaveformStorage","CardiacElectrophysiologyWaveformStorage","BasicVoiceAudioWaveformStorage","GeneralAudioWaveformStorage","ArterialPulseWaveformStorage","RespiratoryWaveformStorage","GrayscaleSoftcopyPresentationStateStorage","ColorSoftcopyPresentationStateStorage","PseudoColorSoftcopyPresentationStateStorage","BlendingSoftcopyPresentationStateStorage","XAXRFGrayscaleSoftcopyPresentationStateStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","RawDataStorage","SpatialRegistrationStorage","SpatialFiducialsStorage","DeformableSpatialRegistrationStorage","SegmentationStorage","SurfaceSegmentationStorage","RealWorldValueMappingStorage","SurfaceScanMeshStorage","SurfaceScanPointCloudStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","StereometricRelationshipStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","LensometryMeasurementsStorage","AutorefractionMeasurementsStorage","KeratometryMeasurementsStorage","SubjectiveRefractionMeasurementsStorage","VisualAcuityMeasurementsStorage","SpectaclePrescriptionReportStorage","OphthalmicAxialMeasurementsStorage","IntraocularLensCalculationsStorage","MacularGridThicknessandVolumeReport","OphthalmicVisualFieldStaticPerimetryMeasurementsStorage","OphthalmicThicknessMapStorage","CornealTopographyMapStorage","BasicTextSR","EnhancedSR","ComprehensiveSR","Comprehensive3DSR","ProcedureLog","MammographyCADSR","KeyObjectSelection","ChestCADSR","XRayRadiationDoseSR","RadiopharmaceuticalRadiationDoseSR","ColonCADSR","ImplantationPlanSRDocumentStorage","EncapsulatedPDFStorage","EncapsulatedCDAStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","BasicStructuredDisplayStorage","RTImageStorage","RTDoseStorage","RTStructureSetStorage","RTBeamsTreatmentRecordStorage","RTPlanStorage","RTBrachyTreatmentRecordStorage","RTTreatmentSummaryRecordStorage","RTIonPlanStorage","RTIonBeamsTreatmentRecordStorage","RTBeamsDeliveryInstructionStorage","GenericImplantTemplateStorage","ImplantAssemblyTemplateStorage","ImplantTemplateGroupStorage","isImage","isMultiFrame","getRawValue","makeDisplaySet","seriesData","setAttributes","numImageFrames","setAttribute","getImage","isSingleImageModality","createStacks","getSeriesCount","forEachSeries","stackableInstances","forEachInstance","acquisitionDatetime","OHIFInstanceMetadata","_study","_instance","_cache","bypassCache","getPropertyName","rawValue","tagInfo","charAt","toLowerCase","OHIFSeriesMetadata","addInstance","OHIFStudyMetadata","addSeries","getDisplaySets","studyMetadata","iteratorFunction","iteratorFn","sortingManager","createDisplaySets","updatedStudies","setDisplaySets","selected","utils","metadata","MetadataProvider","instanceMetadata","seriesMetadata","institutionName","patientHistory","patient","id","birthDate","patientBirthDate","sex","age","imagePlane","getImagePlane","metadataLookup","oldMetadata","attrName","getFromDataSet","dataSet","fn","frameInstancePointer","frameInstancePointerNames","frameInstancePointerTag","floatString","imageMetadata","tablePosition","spacingBetweenSlices","multiframeMetadata","getMultiframeModuleMetadata","imageOrientation","imagePosition","columnPixelSpacing","rowPixelSpacing","rowCosines","cornerstoneMath","Vector3","columnCosines","imageInfo","isMultiframeImage","averageFrameRate","getFromImage","getFrameTimeVector","getFrameTime","_provider","StudyPrefetcher","stopPrefetching","prefetchDisplaySetsTimeout","lastActiveViewportElement","events","addEventListener","cacheFullHandler","removeEventListener","prefetchDisplaySets","requestPoolManager","clearRequestStack","timeout","clearTimeout","prefetchDisplaySetsHandler","setTimeout","order","displaySetCount","displaySetsToPrefetch","getDisplaySetsToPrefetch","getImageIdsFromDisplaySets","prefetchImageIds","nonCachedImageIds","filterCachedImageIds","requestType","preventCache","noop","addRequest","startGrabbing","viewer","viewerbase","getStudyMetadata","some","displaySetImage","getActiveViewportImage","activeDisplaySet","prefetchMethodMap","topdown","downward","closest","prefetchOrder","methodName","selectedDisplaySets","activeDisplaySetIndex","begin","right","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","setToolActive","setViewportActive","viewportIndex","setLayout","layout","setStudyLoadingProgress","progressId","progressData","clearStudyLoadingProgress","setUserPreferences","state","actions","BaseLoadingListener","getNewId","startListening","statsItemsLimit","stats","items","total","elapsedTime","speed","_addStatsData","_updateProgress","newItem","shift","oldestItem","getTime","_getProgressId","_clearProgressById","stopListening","_clearProgress","timeSlice","randomNumber","DICOMFileLoadingListener","e","detail","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","loaded","_lastLoaded","_dataSetUrl","_getDataSetUrl","_checkCachedData","dataSetCacheManager","dataSetLength","percentComplete","imageLoadProgressEventName","_getImageLoadProgressEventName","imageLoadProgressEventHandle","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","_setProgressData","StackLoadingListener","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","imageIdsMap","array","_updateFrameStatus","imageLoadedEventName","_getImageLoadedEventName","imageCachePromiseRemovedEventName","_getImageCachePromiseRemoveEventName","imageLoadedEventHandle","_imageLoadedEventHandle","imageCachePromiseRemovedEventHandle","_imageCachePromiseRemovedEventHandle","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","round","framesPerSecond","progressBar","ch","StudyLoadingListener","listeners","stackMetaData","listener","_createListener","addStack","addStudy","displaySetInstanceUids","schema","_getSchema","colonIndex","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","MAX_COUNT","TypeSafeCollection","_operationCount","_elementList","_handlers","silent","payload","_elements","_isFunction","insert","_elementWithPayload","_invalidate","_elementWithId","_trigger","propertyMap","findAllEntriesBy","foundCount","removed","_isObject","_compareToPropertyMapStrict","_sortListBy","_isString","_hasOwnProperty","_getPropertyValue","targetObject","fragments","fragmentCount","firstFragment","remainingFragments","_isValidSortingSpecifier","specifiers","property","specifierCount","_sortListByCallback","specifier","aValue","bValue","StudyMetadataSource","classes","defaultButtons","svgUrl","active","buttons","button","defaultState","activeViewportIndex","viewports","alreadyExists","progress","lastUpdated","loading","updatedState","global","hotKeysData","defaultTool","label","column","zoom","wwwc","pan","angle","stackScroll","magnify","annotate","dragProbe","ellipticalRoi","rectangleRoi","flipH","flipV","rotateR","rotateL","invert","zoomIn","zoomOut","zoomToFit","resetViewport","clearTools","scrollDown","scrollUp","scrollLastImage","scrollFirstImage","previousDisplaySet","nextDisplaySet","nextPanel","previousPanel","toggleOverlayTags","toggleCinePlay","toggleCineDialog","toggleDownloadDialog","WLPreset0","WLPreset1","WLPreset2","WLPreset3","WLPreset4","WLPreset5","WLPreset6","WLPreset7","WLPreset8","WLPreset9","windowLevelData","level","preferences","newState","cloneDeep","reducers","redux","isObject","isString","search","query","pattern","encodeId","converter","getNestedObject","shallowObject","nestedObject","propertyArray","currentProperty","getShallowObject","putValues","baseKey","resultObject","currentKey","currentValue"],"mappings":"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"}